###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:29
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_timer.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW415.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_timer.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\infra_timer.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\infra_timer.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_timer.c
      1          #include "infra_config.h"
      2          
      3          #ifdef INFRA_TIMER
      4          /*
      5           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      6           */
      7          #include "infra_types.h"
      8          #include "infra_timer.h"
      9          
     10          uint64_t HAL_UptimeMs(void);
     11          

   \                                 In section .text, align 2, keep-with-next
     12          void iotx_time_start(iotx_time_t *timer)
     13          {
   \                     iotx_time_start: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     14              if (!timer) {
   \        0x4   0xD002             BEQ.N    ??iotx_time_start_0
     15                  return;
     16              }
     17          
     18              timer->time = HAL_UptimeMs();
   \        0x6   0x....'....        BL       HAL_UptimeMs
   \        0xA   0x6020             STR      R0,[R4, #+0]
     19          }
   \                     ??iotx_time_start_0: (+1)
   \        0xC   0xBD10             POP      {R4,PC}          ;; return
     20          

   \                                 In section .text, align 2, keep-with-next
     21          uint32_t utils_time_spend(iotx_time_t *start)
     22          {
   \                     utils_time_spend: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     23              uint32_t now, res;
     24          
     25              if (!start) {
   \        0x4   0xD101             BNE.N    ??utils_time_spend_0
     26                  return 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xBD10             POP      {R4,PC}
     27              }
     28          
     29              now = HAL_UptimeMs();
   \                     ??utils_time_spend_0: (+1)
   \        0xA   0x....'....        BL       HAL_UptimeMs
     30              res = now - start->time;
     31              return res;
   \        0xE   0x6821             LDR      R1,[R4, #+0]
   \       0x10   0x1A40             SUBS     R0,R0,R1
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
     32          }
     33          

   \                                 In section .text, align 2, keep-with-next
     34          uint32_t iotx_time_left(iotx_time_t *end)
     35          {
   \                     iotx_time_left: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     36              uint32_t now, res;
     37          
     38              if (!end) {
   \        0x4   0xD101             BNE.N    ??iotx_time_left_0
     39                  return 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xBD10             POP      {R4,PC}
     40              }
     41          
     42              if (utils_time_is_expired(end)) {
   \                     ??iotx_time_left_0: (+1)
   \        0xA   0x....'....        BL       utils_time_is_expired
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD001             BEQ.N    ??iotx_time_left_1
     43                  return 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xBD10             POP      {R4,PC}
     44              }
     45          
     46              now = HAL_UptimeMs();
   \                     ??iotx_time_left_1: (+1)
   \       0x16   0x....'....        BL       HAL_UptimeMs
     47              res = end->time - now;
     48              return res;
   \       0x1A   0x6821             LDR      R1,[R4, #+0]
   \       0x1C   0x1A08             SUBS     R0,R1,R0
   \       0x1E   0xBD10             POP      {R4,PC}          ;; return
     49          }
     50          

   \                                 In section .text, align 2, keep-with-next
     51          uint32_t utils_time_is_expired(iotx_time_t *timer)
     52          {
   \                     utils_time_is_expired: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     53              uint32_t cur_time;
     54          
     55              if (!timer) {
   \        0x4   0xD101             BNE.N    ??utils_time_is_expired_0
     56                  return 1;
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0xBD10             POP      {R4,PC}
     57              }
     58          
     59              cur_time = HAL_UptimeMs();
   \                     ??utils_time_is_expired_0: (+1)
   \        0xA   0x....'....        BL       HAL_UptimeMs
     60              /*
     61               *  WARNING: Do NOT change the following code until you know exactly what it do!
     62               *
     63               *  check whether it reach destination time or not.
     64               */
     65              if ((cur_time - timer->time) < (UINT32_MAX / 2)) {
   \        0xE   0x6821             LDR      R1,[R4, #+0]
   \       0x10   0x1A40             SUBS     R0,R0,R1
   \       0x12   0xF06F 0x4100      MVN      R1,#-2147483648
   \       0x16   0x4288             CMP      R0,R1
   \       0x18   0x4180             SBCS     R0,R0,R0
   \       0x1A   0x0FC0             LSRS     R0,R0,#+31
     66                  return 1;
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
     67              } else {
     68                  return 0;
     69              }
     70          }
     71          

   \                                 In section .text, align 2, keep-with-next
     72          void iotx_time_init(iotx_time_t *timer)
     73          {
     74              if (!timer) {
   \                     iotx_time_init: (+1)
   \        0x0   0x2800             CMP      R0,#+0
   \        0x2   0xD001             BEQ.N    ??iotx_time_init_0
     75                  return;
     76              }
     77          
     78              timer->time = 0;
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x6001             STR      R1,[R0, #+0]
     79          }
   \                     ??iotx_time_init_0: (+1)
   \        0x8   0x4770             BX       LR               ;; return
     80          

   \                                 In section .text, align 2, keep-with-next
     81          void utils_time_countdown_ms(iotx_time_t *timer, uint32_t millisecond)
     82          {
   \                     utils_time_countdown_ms: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
     83              if (!timer) {
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD003             BEQ.N    ??utils_time_countdown_ms_0
     84                  return;
     85              }
     86          
     87              timer->time = HAL_UptimeMs() + millisecond;
   \        0xA   0x....'....        BL       HAL_UptimeMs
   \        0xE   0x182D             ADDS     R5,R5,R0
   \       0x10   0x6025             STR      R5,[R4, #+0]
     88          }
   \                     ??utils_time_countdown_ms_0: (+1)
   \       0x12   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     89          

   \                                 In section .text, align 2, keep-with-next
     90          uint32_t utils_time_get_ms(void)
     91          {
     92              return HAL_UptimeMs();
   \                     utils_time_get_ms: (+1)
   \        0x0   0x....'....        B.W      HAL_UptimeMs
     93          }
     94          #endif
     95          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   iotx_time_init
       8   iotx_time_left
         8   -> HAL_UptimeMs
         8   -> utils_time_is_expired
       8   iotx_time_start
         8   -> HAL_UptimeMs
      16   utils_time_countdown_ms
        16   -> HAL_UptimeMs
       0   utils_time_get_ms
         0   -> HAL_UptimeMs
       8   utils_time_is_expired
         8   -> HAL_UptimeMs
       8   utils_time_spend
         8   -> HAL_UptimeMs


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      10  iotx_time_init
      32  iotx_time_left
      14  iotx_time_start
      20  utils_time_countdown_ms
       4  utils_time_get_ms
      30  utils_time_is_expired
      20  utils_time_spend

 
 130 bytes in section .text
 
 130 bytes of CODE memory

Errors: none
Warnings: none
