###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:12
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_client.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWBE4B.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_client.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\dm_client.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\dm_client.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_client.c
      1          #include "iotx_dm_internal.h"
      2          
      3          #ifdef DEV_BIND_ENABLED
      4              #include "dev_bind_api.h"
      5          #endif
      6          #ifdef LOG_REPORT_TO_CLOUD
      7              #include "iotx_log_report.h"
      8          #endif
      9          

   \                                 In section .data, align 4
     10          static dm_client_uri_map_t g_dm_client_uri_map[] = {
   \                     g_dm_client_uri_map:
   \        0x0   0x....'....        DC32 DM_URI_THING_EVENT_POST_REPLY_WILDCARD, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \        0xC   0x....'....        DC32 dm_client_thing_event_post_reply
   \       0x10   0x....'....        DC32 DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x1C   0x....'....        DC32 dm_client_thing_property_desired_delete_reply
   \       0x20   0x....'....        DC32 DM_URI_THING_PROPERTY_DESIRED_GET_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x2C   0x....'....        DC32 dm_client_thing_property_desired_get_reply
   \       0x30   0x....'....        DC32 DM_URI_THING_SERVICE_PROPERTY_GET, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x3C   0x....'....        DC32 dm_client_thing_service_property_get
   \       0x40   0x....'....        DC32 DM_URI_THING_SERVICE_PROPERTY_SET, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x4C   0x....'....        DC32 dm_client_thing_service_property_set
   \       0x50   0x....'....        DC32 DM_URI_THING_SERVICE_REQUEST_WILDCARD, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x5C   0x....'....        DC32 dm_client_thing_service_request
   \       0x60   0x....'....        DC32 DM_URI_THING_DEVICEINFO_UPDATE_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x6C   0x....'....        DC32 dm_client_thing_deviceinfo_update_reply
   \       0x70   0x....'....        DC32 DM_URI_THING_DEVICEINFO_DELETE_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x7C   0x....'....        DC32 dm_client_thing_deviceinfo_delete_reply
   \       0x80   0x....'....        DC32 DM_URI_THING_DYNAMICTSL_GET_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0x8C   0x....'....        DC32 dm_client_thing_dynamictsl_get_reply, DM_URI_RRPC_REQUEST_WILDCARD
   \              0x....'....  
   \       0x94   0x....'....        DC32 DM_URI_SYS_PREFIX, 7, dm_client_rrpc_request_wildcard
   \              0x0000'0007  
   \              0x....'....  
   \       0xA0   0x....'....        DC32 DM_URI_NTP_RESPONSE, DM_URI_EXT_NTP_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0xAC   0x....'....        DC32 dm_client_ntp_response, 0H, DM_URI_EXT_ERROR_PREFIX, 7
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0007  
   \       0xBC   0x....'....        DC32 dm_client_ext_error, DM_URI_THING_MODEL_DOWN_RAW
   \              0x....'....  
   \       0xC4   0x....'....        DC32 DM_URI_SYS_PREFIX, 7, dm_client_thing_model_down_raw
   \              0x0000'0007  
   \              0x....'....  
   \       0xD0   0x....'....        DC32 DM_URI_THING_MODEL_UP_RAW_REPLY, DM_URI_SYS_PREFIX, 7
   \              0x....'....  
   \              0x0000'0007  
   \       0xDC   0x....'....        DC32 dm_client_thing_model_up_raw_reply
     11          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)
     12              {DM_URI_THING_EVENT_POST_REPLY_WILDCARD,  DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_event_post_reply             },
     13          #ifdef DEVICE_MODEL_SHADOW
     14              {DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY, DM_URI_SYS_PREFIX,      IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_property_desired_delete_reply},
     15              {DM_URI_THING_PROPERTY_DESIRED_GET_REPLY, DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_property_desired_get_reply   },
     16              {DM_URI_THING_SERVICE_PROPERTY_GET,       DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_service_property_get         },
     17          #endif
     18              {DM_URI_THING_SERVICE_PROPERTY_SET,       DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_service_property_set         },
     19              {DM_URI_THING_SERVICE_REQUEST_WILDCARD,   DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_service_request              },
     20              {DM_URI_THING_DEVICEINFO_UPDATE_REPLY,    DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_deviceinfo_update_reply      },
     21              {DM_URI_THING_DEVICEINFO_DELETE_REPLY,    DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_deviceinfo_delete_reply      },
     22              {DM_URI_THING_DYNAMICTSL_GET_REPLY,       DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_dynamictsl_get_reply         },
     23              {DM_URI_RRPC_REQUEST_WILDCARD,            DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_rrpc_request_wildcard              },
     24              {DM_URI_NTP_RESPONSE,                     DM_URI_EXT_NTP_PREFIX,     IOTX_DM_DEVICE_ALL, (void *)dm_client_ntp_response                       },
     25              {NULL,                                    DM_URI_EXT_ERROR_PREFIX,   IOTX_DM_DEVICE_ALL, (void *)dm_client_ext_error                          },
     26          #endif
     27              {DM_URI_THING_MODEL_DOWN_RAW,             DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_model_down_raw               },
     28              {DM_URI_THING_MODEL_UP_RAW_REPLY,         DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_ALL, (void *)dm_client_thing_model_up_raw_reply           },
     29          
     30          #ifdef DEVICE_MODEL_GATEWAY
     31              {DM_URI_THING_TOPO_ADD_NOTIFY,            DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_topo_add_notify              },
     32              {DM_URI_THING_GATEWAY_PERMIT,             DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_gateway_permit               },
     33              {DM_URI_THING_SUB_REGISTER_REPLY,         DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_sub_register_reply           },
     34              {DM_URI_THING_SUB_UNREGISTER_REPLY,       DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_sub_unregister_reply         },
     35              {DM_URI_THING_TOPO_ADD_REPLY,             DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_topo_add_reply               },
     36              {DM_URI_THING_TOPO_DELETE_REPLY,          DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_topo_delete_reply            },
     37              {DM_URI_THING_TOPO_GET_REPLY,             DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_topo_get_reply               },
     38              {DM_URI_THING_LIST_FOUND_REPLY,           DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_list_found_reply             },
     39              {DM_URI_COMBINE_LOGIN_REPLY,              DM_URI_EXT_SESSION_PREFIX, IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_combine_login_reply                },
     40              {DM_URI_COMBINE_LOGOUT_REPLY,             DM_URI_EXT_SESSION_PREFIX, IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_combine_logout_reply               },
     41              {DM_URI_THING_DISABLE,                    DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_disable                      },
     42              {DM_URI_THING_ENABLE,                     DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_enable                       },
     43              {DM_URI_THING_DELETE,                     DM_URI_SYS_PREFIX,         IOTX_DM_DEVICE_GATEWAY, (void *)dm_client_thing_delete                       },
     44          #endif
     45          };
     46          

   \                                 In section .text, align 2, keep-with-next
     47          static int _dm_client_subscribe_filter(char *uri, char *uri_name, char product_key[IOTX_PRODUCT_KEY_LEN + 1],
     48                                                 char device_name[IOTX_DEVICE_NAME_LEN + 1])
     49          {
   \                     _dm_client_subscribe_filter: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x000C             MOVS     R4,R1
     50          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)
     51              int res = 0;
     52          #endif
     53              if (uri_name == NULL) {
   \        0x6   0xD022             BEQ.N    ??_dm_client_subscribe_filter_0
     54                  return SUCCESS_RETURN;
     55              }
     56          
     57          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)
     58              if (strlen(uri_name) == strlen(DM_URI_THING_EVENT_POST_REPLY_WILDCARD) &&
     59                  memcmp(uri_name, DM_URI_THING_EVENT_POST_REPLY_WILDCARD, strlen(uri_name)) == 0) {
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       strlen
   \        0xE   0x4607             MOV      R7,R0
   \       0x10   0x....             LDR.N    R6,??DataTable4_2
   \       0x12   0x4630             MOV      R0,R6
   \       0x14   0x....'....        BL       strlen
   \       0x18   0x4287             CMP      R7,R0
   \       0x1A   0xD118             BNE.N    ??_dm_client_subscribe_filter_0
   \       0x1C   0x4620             MOV      R0,R4
   \       0x1E   0x....'....        BL       strlen
   \       0x22   0x4602             MOV      R2,R0
   \       0x24   0x4631             MOV      R1,R6
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0x....'....        BL       memcmp
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD10E             BNE.N    ??_dm_client_subscribe_filter_0
     60                  int event_post_reply_opt = 0;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9000             STR      R0,[SP, #+0]
     61                  res = dm_opt_get(DM_OPT_DOWNSTREAM_EVENT_POST_REPLY, &event_post_reply_opt);
   \       0x34   0x4669             MOV      R1,SP
   \       0x36   0x2001             MOVS     R0,#+1
   \       0x38   0x....'....        BL       dm_opt_get
     62                  if (res == SUCCESS_RETURN && event_post_reply_opt == 0) {
   \       0x3C   0x9900             LDR      R1,[SP, #+0]
   \       0x3E   0x4308             ORRS     R0,R1,R0
   \       0x40   0xD105             BNE.N    ??_dm_client_subscribe_filter_0
     63                      dm_client_unsubscribe(uri);
   \       0x42   0x4628             MOV      R0,R5
   \       0x44   0x....'....        BL       dm_client_unsubscribe
     64                      return FAIL_RETURN;
   \       0x48   0xF04F 0x30FF      MOV      R0,#-1
   \       0x4C   0xBDF2             POP      {R1,R4-R7,PC}
     65                  }
     66              }
     67          #endif
     68          
     69              return SUCCESS_RETURN;
   \                     ??_dm_client_subscribe_filter_0: (+1)
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     70          }
     71          

   \                                 In section .text, align 2, keep-with-next
     72          int dm_client_subscribe_all(char product_key[IOTX_PRODUCT_KEY_LEN + 1], char device_name[IOTX_DEVICE_NAME_LEN + 1],
     73                                      int dev_type)
     74          {
   \                     dm_client_subscribe_all: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
     75              int res = 0, index = 0, fail_count = 0;
   \        0xA   0xF04F 0x0800      MOV      R8,#+0
     76              int number = sizeof(g_dm_client_uri_map) / sizeof(dm_client_uri_map_t);
     77              char *uri = NULL;
   \        0xE   0x4640             MOV      R0,R8
   \       0x10   0x9002             STR      R0,[SP, #+8]
     78              uint8_t local_sub = 0;
   \       0x12   0xF88D 0x0004      STRB     R0,[SP, #+4]
     79          #ifdef SUB_PERSISTENCE_ENABLED
     80              char device_key[IOTX_PRODUCT_KEY_LEN + IOTX_DEVICE_NAME_LEN + 4] = {0};
     81          #endif
     82          
     83          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)
     84              index = 1;
   \       0x16   0x2401             MOVS     R4,#+1
     85          
     86              for (fail_count = 0; fail_count < IOTX_DM_CLIENT_SUB_RETRY_MAX_COUNTS; fail_count++) {
   \       0x18   0x....'....        LDR.W    R9,??DataTable4_3
   \       0x1C   0xE006             B.N      ??dm_client_subscribe_all_0
     87          
     88                  res = dm_utils_service_name((char *)g_dm_client_uri_map[0].uri_prefix, (char *)g_dm_client_uri_map[0].uri_name,
     89                                              product_key, device_name, &uri);
     90                  if (res < SUCCESS_RETURN) {
     91                      continue;
     92                  }
     93                  res = _dm_client_subscribe_filter(uri, (char *)g_dm_client_uri_map[0].uri_name, product_key, device_name);
     94                  if (res < SUCCESS_RETURN) {
     95                      DM_free(uri);
     96                      continue;
     97                  }
     98          
     99                  res = dm_client_subscribe(uri, (iotx_cm_data_handle_cb)g_dm_client_uri_map[0].callback, 0);
    100                  if (res < SUCCESS_RETURN) {
    101                      DM_free(uri);
   \                     ??dm_client_subscribe_all_1: (+1)
   \       0x1E   0x9802             LDR      R0,[SP, #+8]
   \       0x20   0x....'....        BL       HAL_Free
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x9002             STR      R0,[SP, #+8]
    102                      continue;
    103                  }
   \                     ??dm_client_subscribe_all_2: (+1)
   \       0x28   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??dm_client_subscribe_all_0: (+1)
   \       0x2C   0xF1B8 0x0F03      CMP      R8,#+3
   \       0x30   0xDA21             BGE.N    ??dm_client_subscribe_all_3
   \       0x32   0xA802             ADD      R0,SP,#+8
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0x4633             MOV      R3,R6
   \       0x38   0x463A             MOV      R2,R7
   \       0x3A   0xF8D9 0x1000      LDR      R1,[R9, #+0]
   \       0x3E   0xF8D9 0x0004      LDR      R0,[R9, #+4]
   \       0x42   0x....'....        BL       dm_utils_service_name
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD4EE             BMI.N    ??dm_client_subscribe_all_2
   \       0x4A   0x4633             MOV      R3,R6
   \       0x4C   0x463A             MOV      R2,R7
   \       0x4E   0xF8D9 0x1000      LDR      R1,[R9, #+0]
   \       0x52   0x9802             LDR      R0,[SP, #+8]
   \       0x54   0x....'....        BL       _dm_client_subscribe_filter
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD4E0             BMI.N    ??dm_client_subscribe_all_1
   \       0x5C   0x2200             MOVS     R2,#+0
   \       0x5E   0xF8D9 0x100C      LDR      R1,[R9, #+12]
   \       0x62   0x9802             LDR      R0,[SP, #+8]
   \       0x64   0x....'....        BL       dm_client_subscribe
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD4D8             BMI.N    ??dm_client_subscribe_all_1
    104          
    105                  DM_free(uri);
   \       0x6C   0x9802             LDR      R0,[SP, #+8]
   \       0x6E   0x....'....        BL       HAL_Free
   \       0x72   0x2000             MOVS     R0,#+0
   \       0x74   0x9002             STR      R0,[SP, #+8]
    106                  break;
    107              }
    108          #else
    109              index = 0;
    110          #endif
    111              fail_count = 0;
   \                     ??dm_client_subscribe_all_3: (+1)
   \       0x76   0xF04F 0x0800      MOV      R8,#+0
   \       0x7A   0xE019             B.N      ??dm_client_subscribe_all_4
    112          #ifdef SUB_PERSISTENCE_ENABLED
    113              {
    114                  int len = 1;
    115                  HAL_Snprintf(device_key, IOTX_PRODUCT_KEY_LEN + IOTX_DEVICE_NAME_LEN, "qub_%s%s", product_key, device_name);
    116                  HAL_Kv_Get(device_key, &local_sub, &len);
    117              }
    118          #endif
    119          
    120              for (; index < number; index++) {
    121                  if ((g_dm_client_uri_map[index].dev_type & dev_type) == 0) {
    122                      continue;
    123                  }
    124                  dm_log_info("index: %d", index);
    125          
    126                  if (fail_count >= IOTX_DM_CLIENT_SUB_RETRY_MAX_COUNTS) {
    127                      fail_count = 0;
    128                      continue;
    129                  }
    130                  res = dm_utils_service_name((char *)g_dm_client_uri_map[index].uri_prefix, (char *)g_dm_client_uri_map[index].uri_name,
    131                                              product_key, device_name, &uri);
    132                  if (res < SUCCESS_RETURN) {
    133                      index--;
    134                      continue;
    135                  }
    136          
    137                  res = _dm_client_subscribe_filter(uri, (char *)g_dm_client_uri_map[index].uri_name, product_key, device_name);
    138                  if (res < SUCCESS_RETURN) {
    139                      DM_free(uri);
    140                      continue;
    141                  }
    142          
    143                  res = dm_client_subscribe(uri, (iotx_cm_data_handle_cb)g_dm_client_uri_map[index].callback, &local_sub);
    144                  if (res < SUCCESS_RETURN) {
    145                      index--;
    146                      fail_count++;
    147                      DM_free(uri);
    148                      continue;
    149                  }
    150          
    151                  fail_count = 0;
   \                     ??dm_client_subscribe_all_5: (+1)
   \       0x7C   0xF04F 0x0800      MOV      R8,#+0
    152                  DM_free(uri);
   \       0x80   0x9802             LDR      R0,[SP, #+8]
   \       0x82   0x....'....        BL       HAL_Free
   \       0x86   0x4640             MOV      R0,R8
   \       0x88   0x9002             STR      R0,[SP, #+8]
   \       0x8A   0xE010             B.N      ??dm_client_subscribe_all_6
   \                     ??dm_client_subscribe_all_7: (+1)
   \       0x8C   0xAA01             ADD      R2,SP,#+4
   \       0x8E   0xEB09 0x1004      ADD      R0,R9,R4, LSL #+4
   \       0x92   0x68C1             LDR      R1,[R0, #+12]
   \       0x94   0x9802             LDR      R0,[SP, #+8]
   \       0x96   0x....'....        BL       dm_client_subscribe
   \       0x9A   0x2800             CMP      R0,#+0
   \       0x9C   0xD5EE             BPL.N    ??dm_client_subscribe_all_5
   \       0x9E   0x1E64             SUBS     R4,R4,#+1
   \       0xA0   0xF108 0x0801      ADD      R8,R8,#+1
   \       0xA4   0x9802             LDR      R0,[SP, #+8]
   \       0xA6   0x....'....        BL       HAL_Free
   \       0xAA   0x2000             MOVS     R0,#+0
   \       0xAC   0x9002             STR      R0,[SP, #+8]
   \                     ??dm_client_subscribe_all_6: (+1)
   \       0xAE   0x1C64             ADDS     R4,R4,#+1
   \                     ??dm_client_subscribe_all_4: (+1)
   \       0xB0   0x2C0E             CMP      R4,#+14
   \       0xB2   0xDA29             BGE.N    ??dm_client_subscribe_all_8
   \       0xB4   0xEB09 0x1004      ADD      R0,R9,R4, LSL #+4
   \       0xB8   0x6880             LDR      R0,[R0, #+8]
   \       0xBA   0x4228             TST      R0,R5
   \       0xBC   0xD0F7             BEQ.N    ??dm_client_subscribe_all_6
   \       0xBE   0xF1B8 0x0F03      CMP      R8,#+3
   \       0xC2   0xDB02             BLT.N    ??dm_client_subscribe_all_9
   \       0xC4   0xF04F 0x0800      MOV      R8,#+0
   \       0xC8   0xE7F1             B.N      ??dm_client_subscribe_all_6
   \                     ??dm_client_subscribe_all_9: (+1)
   \       0xCA   0xA802             ADD      R0,SP,#+8
   \       0xCC   0x9000             STR      R0,[SP, #+0]
   \       0xCE   0x4633             MOV      R3,R6
   \       0xD0   0x463A             MOV      R2,R7
   \       0xD2   0x0120             LSLS     R0,R4,#+4
   \       0xD4   0xF859 0x1000      LDR      R1,[R9, R0]
   \       0xD8   0x4448             ADD      R0,R9,R0
   \       0xDA   0x6840             LDR      R0,[R0, #+4]
   \       0xDC   0x....'....        BL       dm_utils_service_name
   \       0xE0   0x2800             CMP      R0,#+0
   \       0xE2   0xD501             BPL.N    ??dm_client_subscribe_all_10
   \       0xE4   0x1E64             SUBS     R4,R4,#+1
   \       0xE6   0xE7E2             B.N      ??dm_client_subscribe_all_6
   \                     ??dm_client_subscribe_all_10: (+1)
   \       0xE8   0x4633             MOV      R3,R6
   \       0xEA   0x463A             MOV      R2,R7
   \       0xEC   0x0120             LSLS     R0,R4,#+4
   \       0xEE   0xF859 0x1000      LDR      R1,[R9, R0]
   \       0xF2   0x9802             LDR      R0,[SP, #+8]
   \       0xF4   0x....'....        BL       _dm_client_subscribe_filter
   \       0xF8   0x2800             CMP      R0,#+0
   \       0xFA   0xD5C7             BPL.N    ??dm_client_subscribe_all_7
   \       0xFC   0x9802             LDR      R0,[SP, #+8]
   \       0xFE   0x....'....        BL       HAL_Free
   \      0x102   0x2000             MOVS     R0,#+0
   \      0x104   0x9002             STR      R0,[SP, #+8]
   \      0x106   0xE7D2             B.N      ??dm_client_subscribe_all_6
    153              }
    154          #ifdef SUB_PERSISTENCE_ENABLED
    155              local_sub = 1;
    156              HAL_Kv_Set(device_key, &local_sub, 1, 1);
    157          #endif
    158          
    159              return SUCCESS_RETURN;
   \                     ??dm_client_subscribe_all_8: (+1)
   \      0x108   0x2000             MOVS     R0,#+0
   \      0x10A   0xE8BD 0x83FE      POP      {R1-R9,PC}       ;; return
    160          }
    161          

   \                                 In section .text, align 2, keep-with-next
    162          static void _dm_client_event_cloud_connected_handle(void)
    163          {
   \                     _dm_client_event_cloud_connected_handle: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    164          #ifdef DEV_BIND_ENABLED
    165              static int awss_reported = 0;
    166              if(awss_reported == 0) {
   \        0x2   0x....             LDR.N    R1,??DataTable4_4
   \        0x4   0x6808             LDR      R0,[R1, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD103             BNE.N    ??_dm_client_event_cloud_connected_handle_0
    167                  awss_reported = 1;
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x6008             STR      R0,[R1, #+0]
    168                  awss_report_cloud();
   \        0xE   0x....'....        BL       awss_report_cloud
    169              }
    170          #endif
    171              dm_log_info("IOTX_CM_EVENT_CLOUD_CONNECTED");
    172              dm_msg_cloud_connected();
   \                     ??_dm_client_event_cloud_connected_handle_0: (+1)
   \       0x12   0xE8BD 0x4001      POP      {R0,LR}
   \       0x16   0x....'....        B.W      dm_msg_cloud_connected
    173          }

   \                                 In section .bss, align 4
   \                     `_dm_client_event_cloud_connected_handle::awss_reported`:
   \        0x0                      DS8 4
    174          

   \                                 In section .text, align 2, keep-with-next
    175          static void _dm_client_event_cloud_disconnect_handle(void)
    176          {
    177              dm_log_info("IOTX_CM_EVENT_CLOUD_DISCONNECT");
    178          
    179              dm_msg_cloud_disconnect();
   \                     _dm_client_event_cloud_disconnect_handle: (+1)
   \        0x0   0x....'....        B.W      dm_msg_cloud_disconnect
    180          }
    181          

   \                                 In section .text, align 2, keep-with-next
    182          void dm_client_event_handle(int fd, iotx_cm_event_msg_t *event, void *context)
    183          {
    184              switch (event->type) {
   \                     dm_client_event_handle: (+1)
   \        0x0   0x7808             LDRB     R0,[R1, #+0]
   \        0x2   0x2800             CMP      R0,#+0
   \        0x4   0xD002             BEQ.N    ??dm_client_event_handle_0
   \        0x6   0x2802             CMP      R0,#+2
   \        0x8   0xD001             BEQ.N    ??dm_client_event_handle_1
   \        0xA   0x4770             BX       LR
    185                  case IOTX_CM_EVENT_CLOUD_CONNECTED: {
    186                      _dm_client_event_cloud_connected_handle();
   \                     ??dm_client_event_handle_0: (+1)
   \        0xC   0x....             B.N      _dm_client_event_cloud_connected_handle
    187                  }
    188                  break;
    189                  case IOTX_CM_EVENT_CLOUD_CONNECT_FAILED: {
    190          
    191                  }
    192                  break;
    193                  case IOTX_CM_EVENT_CLOUD_DISCONNECT: {
    194                      _dm_client_event_cloud_disconnect_handle();
   \                     ??dm_client_event_handle_1: (+1)
   \        0xE   0x....             B.N      _dm_client_event_cloud_disconnect_handle
    195                  }
    196                  break;
    197                  default:
    198                      break;
    199              }
    200          }
    201          

   \                                 In section .text, align 2, keep-with-next
    202          void dm_client_thing_model_down_raw(int fd, const char *topic, const char *payload, unsigned int payload_len,
    203                                              void *context)
    204          {
   \                     dm_client_thing_model_down_raw: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    205              dm_msg_source_t source;
    206          
    207              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    208          
    209              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    210              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    211              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    212              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    213          
    214              dm_msg_proc_thing_model_down_raw(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_model_down_raw
    215          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    216          

   \                                 In section .text, align 2, keep-with-next
    217          void dm_client_thing_model_up_raw_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    218                                                  void *context)
    219          {
   \                     dm_client_thing_model_up_raw_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    220              dm_msg_source_t source;
    221          
    222              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    223          
    224              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    225              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    226              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    227              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    228          
    229              dm_msg_proc_thing_model_up_raw_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_model_up_raw_reply
    230          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    231          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)

   \                                 In section .text, align 2, keep-with-next
    232          void dm_client_thing_service_property_set(int fd, const char *topic, const char *payload, unsigned int payload_len,
    233                  void *context)
    234          {
   \                     dm_client_thing_service_property_set: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB0BA             SUB      SP,SP,#+232
   \        0x4   0x460C             MOV      R4,R1
   \        0x6   0x4615             MOV      R5,R2
   \        0x8   0x461E             MOV      R6,R3
    235              int res = 0;
    236              dm_msg_source_t source;
    237              dm_msg_dest_t dest;
    238              dm_msg_request_payload_t request;
    239              dm_msg_response_t response;
    240              int prop_set_reply_opt = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9002             STR      R0,[SP, #+8]
    241          
    242              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0xE   0x4602             MOV      R2,R0
   \       0x10   0x2110             MOVS     R1,#+16
   \       0x12   0xA804             ADD      R0,SP,#+16
   \       0x14   0x....'....        BL       __aeabi_memset4
    243              memset(&dest, 0, sizeof(dm_msg_dest_t));
    244              memset(&request, 0, sizeof(dm_msg_request_payload_t));
   \       0x18   0x2200             MOVS     R2,#+0
   \       0x1A   0x2180             MOVS     R1,#+128
   \       0x1C   0xA81A             ADD      R0,SP,#+104
   \       0x1E   0x....'....        BL       __aeabi_memset4
    245              memset(&response, 0, sizeof(dm_msg_response_t));
   \       0x22   0x2200             MOVS     R2,#+0
   \       0x24   0x2144             MOVS     R1,#+68
   \       0x26   0xA808             ADD      R0,SP,#+32
   \       0x28   0x....'....        BL       __aeabi_memset4
    246          
    247              source.uri = topic;
   \       0x2C   0x9404             STR      R4,[SP, #+16]
    248              source.payload = (unsigned char *)payload;
   \       0x2E   0x9505             STR      R5,[SP, #+20]
    249              source.payload_len = payload_len;
   \       0x30   0x9606             STR      R6,[SP, #+24]
    250              source.context = NULL;
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x9007             STR      R0,[SP, #+28]
    251          
    252              dest.uri_name = DM_URI_THING_SERVICE_PROPERTY_SET_REPLY;
   \       0x36   0x....             LDR.N    R0,??DataTable4_5
   \       0x38   0x9003             STR      R0,[SP, #+12]
    253          
    254              res = dm_msg_proc_thing_service_property_set(&source, &dest, &request, &response);
    255              if (res < SUCCESS_RETURN) {
   \       0x3A   0xAB08             ADD      R3,SP,#+32
   \       0x3C   0xAA1A             ADD      R2,SP,#+104
   \       0x3E   0xA903             ADD      R1,SP,#+12
   \       0x40   0xA804             ADD      R0,SP,#+16
   \       0x42   0x....'....        BL       dm_msg_proc_thing_service_property_set
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD420             BMI.N    ??dm_client_thing_service_property_set_0
    256                  return;
    257              }
    258          
    259              prop_set_reply_opt = 0;
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0x9002             STR      R0,[SP, #+8]
    260              res = dm_opt_get(DM_OPT_UPSTREAM_PROPERTY_SET_REPLY, &prop_set_reply_opt);
    261              if (res == SUCCESS_RETURN) {
   \       0x4E   0xA902             ADD      R1,SP,#+8
   \       0x50   0x2002             MOVS     R0,#+2
   \       0x52   0x....'....        BL       dm_opt_get
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD118             BNE.N    ??dm_client_thing_service_property_set_0
    262                  if (prop_set_reply_opt) {
   \       0x5A   0x9802             LDR      R0,[SP, #+8]
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD015             BEQ.N    ??dm_client_thing_service_property_set_0
    263                      dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x9001             STR      R0,[SP, #+4]
   \       0x64   0x2002             MOVS     R0,#+2
   \       0x66   0x9000             STR      R0,[SP, #+0]
   \       0x68   0x....             ADR.N    R3,??DataTable4  ;; 0x7B, 0x7D, 0x00, 0x00
   \       0x6A   0xAA08             ADD      R2,SP,#+32
   \       0x6C   0xA91A             ADD      R1,SP,#+104
   \       0x6E   0x2001             MOVS     R0,#+1
   \       0x70   0x....'....        BL       dm_msg_response
    264          #ifdef LOG_REPORT_TO_CLOUD
    265                      if (SUCCESS_RETURN == check_target_msg(request.id.value, request.id.value_length)) {
   \       0x74   0x991C             LDR      R1,[SP, #+112]
   \       0x76   0x981B             LDR      R0,[SP, #+108]
   \       0x78   0x....'....        BL       check_target_msg
   \       0x7C   0x2800             CMP      R0,#+0
   \       0x7E   0xD105             BNE.N    ??dm_client_thing_service_property_set_0
    266                          send_permance_info(request.id.value, request.id.value_length, "2", 1);
   \       0x80   0x2301             MOVS     R3,#+1
   \       0x82   0x....             ADR.N    R2,??DataTable4_1  ;; "2"
   \       0x84   0x991C             LDR      R1,[SP, #+112]
   \       0x86   0x981B             LDR      R0,[SP, #+108]
   \       0x88   0x....'....        BL       send_permance_info
    267                      }
    268          #endif
    269                  }
    270              }
    271          }
   \                     ??dm_client_thing_service_property_set_0: (+1)
   \       0x8C   0xB03A             ADD      SP,SP,#+232
   \       0x8E   0xBD70             POP      {R4-R6,PC}       ;; return
    272          
    273          #ifdef DEVICE_MODEL_SHADOW

   \                                 In section .text, align 2, keep-with-next
    274          void dm_client_thing_service_property_get(int fd, const char *topic, const char *payload, unsigned int payload_len,
    275                  void *context)
    276          {
   \                     dm_client_thing_service_property_get: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB0BA             SUB      SP,SP,#+232
   \        0x4   0x460E             MOV      R6,R1
   \        0x6   0x4615             MOV      R5,R2
   \        0x8   0x461C             MOV      R4,R3
    277              int res = 0;
    278              dm_msg_source_t source;
    279              dm_msg_dest_t dest;
    280              dm_msg_request_payload_t request;
    281              dm_msg_response_t response;
    282              unsigned char *data = NULL;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9004             STR      R0,[SP, #+16]
    283              int data_len = 0;
   \        0xE   0x9003             STR      R0,[SP, #+12]
    284          
    285              memset(&source, 0, sizeof(dm_msg_source_t));
   \       0x10   0x4602             MOV      R2,R0
   \       0x12   0x2110             MOVS     R1,#+16
   \       0x14   0xA805             ADD      R0,SP,#+20
   \       0x16   0x....'....        BL       __aeabi_memset4
    286              memset(&dest, 0, sizeof(dm_msg_dest_t));
    287              memset(&request, 0, sizeof(dm_msg_request_payload_t));
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2180             MOVS     R1,#+128
   \       0x1E   0xA81A             ADD      R0,SP,#+104
   \       0x20   0x....'....        BL       __aeabi_memset4
    288              memset(&response, 0, sizeof(dm_msg_response_t));
   \       0x24   0x2200             MOVS     R2,#+0
   \       0x26   0x2144             MOVS     R1,#+68
   \       0x28   0xA809             ADD      R0,SP,#+36
   \       0x2A   0x....'....        BL       __aeabi_memset4
    289          
    290              source.uri = topic;
   \       0x2E   0x9605             STR      R6,[SP, #+20]
    291              source.payload = (unsigned char *)payload;
   \       0x30   0x9506             STR      R5,[SP, #+24]
    292              source.payload_len = payload_len;
   \       0x32   0x9407             STR      R4,[SP, #+28]
    293              source.context = NULL;
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x9008             STR      R0,[SP, #+32]
    294          
    295              dest.uri_name = DM_URI_THING_SERVICE_PROPERTY_GET_REPLY;
   \       0x38   0x....             LDR.N    R0,??DataTable4_6
   \       0x3A   0x9002             STR      R0,[SP, #+8]
    296          
    297              res = dm_msg_proc_thing_service_property_get(&source, &dest, &request, &response, &data, &data_len);
    298              if (res < SUCCESS_RETURN) {
   \       0x3C   0xA803             ADD      R0,SP,#+12
   \       0x3E   0x9001             STR      R0,[SP, #+4]
   \       0x40   0xA804             ADD      R0,SP,#+16
   \       0x42   0x9000             STR      R0,[SP, #+0]
   \       0x44   0xAB09             ADD      R3,SP,#+36
   \       0x46   0xAA1A             ADD      R2,SP,#+104
   \       0x48   0xA902             ADD      R1,SP,#+8
   \       0x4A   0xA805             ADD      R0,SP,#+20
   \       0x4C   0x....'....        BL       dm_msg_proc_thing_service_property_get
    299                  return;
    300              }
    301          }
   \       0x50   0xB03A             ADD      SP,SP,#+232
   \       0x52   0xBD70             POP      {R4-R6,PC}       ;; return
    302          #endif
    303          

   \                                 In section .text, align 2, keep-with-next
    304          void dm_client_thing_service_request(int fd, const char *topic, const char *payload, unsigned int payload_len,
    305                                               void *context)
    306          {
   \                     dm_client_thing_service_request: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    307              dm_msg_source_t source;
    308          
    309              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    310          
    311              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    312              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    313              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    314              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    315          
    316              dm_msg_proc_thing_service_request(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_service_request
    317          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    318          

   \                                 In section .text, align 2, keep-with-next
    319          void dm_client_thing_event_post_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    320                                                void *context)
    321          {
   \                     dm_client_thing_event_post_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    322              dm_msg_source_t source;
    323          
    324              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    325          
    326              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    327              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    328              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    329              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    330          
    331              dm_msg_proc_thing_event_post_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_event_post_reply
    332          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    333          #ifdef DEVICE_MODEL_SHADOW

   \                                 In section .text, align 2, keep-with-next
    334          void dm_client_thing_property_desired_get_reply(int fd, const char *topic, const char *payload,
    335                  unsigned int payload_len, void *context)
    336          {
   \                     dm_client_thing_property_desired_get_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    337              dm_msg_source_t source;
    338          
    339              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    340          
    341              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    342              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    343              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    344              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    345          
    346              dm_msg_proc_thing_property_desired_get_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_property_desired_get_reply
    347          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    348          

   \                                 In section .text, align 2, keep-with-next
    349          void dm_client_thing_property_desired_delete_reply(int fd, const char *topic, const char *payload,
    350                  unsigned int payload_len, void *context)
    351          {
   \                     dm_client_thing_property_desired_delete_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    352              dm_msg_source_t source;
    353          
    354              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    355          
    356              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    357              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    358              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    359              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    360          
    361              dm_msg_proc_thing_property_desired_delete_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_property_desired_delete_reply
    362          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    363          #endif
    364          

   \                                 In section .text, align 2, keep-with-next
    365          void dm_client_thing_deviceinfo_update_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    366                  void *context)
    367          {
   \                     dm_client_thing_deviceinfo_update_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    368              dm_msg_source_t source;
    369          
    370              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    371          
    372              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    373              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    374              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    375              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    376          
    377              dm_msg_proc_thing_deviceinfo_update_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_deviceinfo_update_reply
    378          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    379          

   \                                 In section .text, align 2, keep-with-next
    380          void dm_client_thing_deviceinfo_delete_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    381                  void *context)
    382          {
   \                     dm_client_thing_deviceinfo_delete_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    383              dm_msg_source_t source;
    384          
    385              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    386          
    387              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    388              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    389              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    390              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    391          
    392              dm_msg_proc_thing_deviceinfo_delete_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_deviceinfo_delete_reply
    393          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    394          

   \                                 In section .text, align 2, keep-with-next
    395          void dm_client_thing_dynamictsl_get_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    396                  void *context)
    397          {
   \                     dm_client_thing_dynamictsl_get_reply: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    398              dm_msg_source_t source;
    399          
    400              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    401          
    402              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    403              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    404              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    405              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    406          
    407              dm_msg_proc_thing_dynamictsl_get_reply(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_thing_dynamictsl_get_reply
    408          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    409          

   \                                 In section .text, align 2, keep-with-next
    410          void dm_client_rrpc_request_wildcard(int fd, const char *topic, const char *payload, unsigned int payload_len,
    411                                               void *context)
    412          {
   \                     dm_client_rrpc_request_wildcard: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    413              dm_msg_source_t source;
    414          
    415              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    416          
    417              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    418              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    419              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    420              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    421          
    422              dm_msg_proc_rrpc_request(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_msg_proc_rrpc_request
    423          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    424          

   \                                 In section .text, align 2, keep-with-next
    425          void dm_client_ntp_response(int fd, const char *topic, const char *payload, unsigned int payload_len, void *context)
    426          {
   \                     dm_client_ntp_response: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    427              dm_msg_source_t source;
    428          
    429              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    430          
    431              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    432              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    433              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    434              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    435          
    436              dm_disp_ntp_response(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_disp_ntp_response
    437          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return
    438          

   \                                 In section .text, align 2, keep-with-next
    439          void dm_client_ext_error(int fd, const char *topic, const char *payload, unsigned int payload_len, void *context)
    440          {
   \                     dm_client_ext_error: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461E             MOV      R6,R3
    441              dm_msg_source_t source;
    442          
    443              memset(&source, 0, sizeof(dm_msg_source_t));
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       __aeabi_memset4
    444          
    445              source.uri = topic;
   \       0x12   0x9400             STR      R4,[SP, #+0]
    446              source.payload = (unsigned char *)payload;
   \       0x14   0x9501             STR      R5,[SP, #+4]
    447              source.payload_len = payload_len;
   \       0x16   0x9602             STR      R6,[SP, #+8]
    448              source.context = NULL;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x9003             STR      R0,[SP, #+12]
    449          
    450              dm_disp_ext_error_response(&source);
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x....'....        BL       dm_disp_ext_error_response
    451          }
   \       0x22   0xBD7F             POP      {R0-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x7B 0x7D          DC8      0x7B, 0x7D, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x32 0x00          DC8      "2",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     DM_URI_THING_EVENT_POST_REPLY_WILDCARD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     g_dm_client_uri_map

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     `_dm_client_event_cloud_connected_handle::awss_reported`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     DM_URI_THING_SERVICE_PROPERTY_SET_REPLY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     DM_URI_THING_SERVICE_PROPERTY_GET_REPLY

   \                                 In section .rodata, align 4
   \        0x0   0x7B 0x7D          DC8 "{}"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 2
   \        0x0   0x32 0x00          DC8 "2"
    452          #endif
    453          
    454          #ifdef DEVICE_MODEL_GATEWAY
    455          int dm_client_subdev_unsubscribe(char product_key[IOTX_PRODUCT_KEY_LEN + 1], char device_name[IOTX_DEVICE_NAME_LEN + 1])
    456          {
    457              int res = 0, index = 0;
    458              int number = sizeof(g_dm_client_uri_map) / sizeof(dm_client_uri_map_t);
    459              char *uri = NULL;
    460          
    461              for (index = 0; index < number; index++) {
    462                  if ((g_dm_client_uri_map[index].dev_type & IOTX_DM_DEVICE_SUBDEV) == 0) {
    463                      continue;
    464                  }
    465          
    466                  res = dm_utils_service_name((char *)g_dm_client_uri_map[index].uri_prefix, (char *)g_dm_client_uri_map[index].uri_name,
    467                                              product_key, device_name, &uri);
    468                  if (res < SUCCESS_RETURN) {
    469                      index--;
    470                      continue;
    471                  }
    472          
    473                  dm_client_unsubscribe(uri);
    474                  DM_free(uri);
    475              }
    476          
    477              return SUCCESS_RETURN;
    478          }
    479          
    480          void dm_client_thing_topo_add_notify(int fd, const char *topic, const char *payload, unsigned int payload_len,
    481                                               void *context)
    482          {
    483              int res = 0;
    484              dm_msg_source_t source;
    485              dm_msg_dest_t dest;
    486              dm_msg_request_payload_t request;
    487              dm_msg_response_t response;
    488          
    489              memset(&source, 0, sizeof(dm_msg_source_t));
    490              memset(&dest, 0, sizeof(dm_msg_dest_t));
    491              memset(&request, 0, sizeof(dm_msg_request_payload_t));
    492              memset(&response, 0, sizeof(dm_msg_response_t));
    493          
    494              source.uri = topic;
    495              source.payload = (unsigned char *)payload;
    496              source.payload_len = payload_len;
    497              source.context = NULL;
    498          
    499              dest.uri_name = DM_URI_THING_TOPO_ADD_NOTIFY_REPLY;
    500          
    501              res = dm_msg_proc_thing_topo_add_notify(&source, &dest, &request, &response);
    502              if (res < SUCCESS_RETURN) {
    503                  return;
    504              }
    505          
    506              dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
    507          }
    508          
    509          void dm_client_thing_disable(int fd, const char *topic, const char *payload, unsigned int payload_len, void *context)
    510          {
    511              int res = 0;
    512              dm_msg_source_t source;
    513              dm_msg_dest_t dest;
    514              dm_msg_request_payload_t request;
    515              dm_msg_response_t response;
    516          
    517              memset(&source, 0, sizeof(dm_msg_source_t));
    518              memset(&dest, 0, sizeof(dm_msg_dest_t));
    519              memset(&request, 0, sizeof(dm_msg_request_payload_t));
    520              memset(&response, 0, sizeof(dm_msg_response_t));
    521          
    522              source.uri = topic;
    523              source.payload = (unsigned char *)payload;
    524              source.payload_len = payload_len;
    525              source.context = NULL;
    526          
    527              dest.uri_name = DM_URI_THING_DISABLE_REPLY;
    528          
    529              res = dm_msg_proc_thing_disable(&source, &dest, &request, &response);
    530              if (res < SUCCESS_RETURN) {
    531                  return;
    532              }
    533          
    534              dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
    535          }
    536          
    537          void dm_client_thing_enable(int fd, const char *topic, const char *payload, unsigned int payload_len, void *context)
    538          {
    539              int res = 0;
    540              dm_msg_source_t source;
    541              dm_msg_dest_t dest;
    542              dm_msg_request_payload_t request;
    543              dm_msg_response_t response;
    544          
    545              memset(&source, 0, sizeof(dm_msg_source_t));
    546              memset(&dest, 0, sizeof(dm_msg_dest_t));
    547              memset(&request, 0, sizeof(dm_msg_request_payload_t));
    548              memset(&response, 0, sizeof(dm_msg_response_t));
    549          
    550              source.uri = topic;
    551              source.payload = (unsigned char *)payload;
    552              source.payload_len = payload_len;
    553              source.context = NULL;
    554          
    555              dest.uri_name = DM_URI_THING_ENABLE_REPLY;
    556          
    557              res = dm_msg_proc_thing_enable(&source, &dest, &request, &response);
    558              if (res < SUCCESS_RETURN) {
    559                  return;
    560              }
    561          
    562              dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
    563          }
    564          
    565          void dm_client_thing_delete(int fd, const char *topic, const char *payload, unsigned int payload_len, void *context)
    566          {
    567              int res = 0;
    568              dm_msg_source_t source;
    569              dm_msg_dest_t dest;
    570              dm_msg_request_payload_t request;
    571              dm_msg_response_t response;
    572          
    573              memset(&source, 0, sizeof(dm_msg_source_t));
    574              memset(&dest, 0, sizeof(dm_msg_dest_t));
    575              memset(&request, 0, sizeof(dm_msg_request_payload_t));
    576              memset(&response, 0, sizeof(dm_msg_response_t));
    577          
    578              source.uri = topic;
    579              source.payload = (unsigned char *)payload;
    580              source.payload_len = payload_len;
    581              source.context = NULL;
    582          
    583              dest.uri_name = DM_URI_THING_DELETE_REPLY;
    584          
    585              res = dm_msg_proc_thing_delete(&source, &dest, &request, &response);
    586              if (res < SUCCESS_RETURN) {
    587                  return;
    588              }
    589          
    590              dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
    591          }
    592          
    593          void dm_client_thing_gateway_permit(int fd, const char *topic, const char *payload, unsigned int payload_len,
    594                                              void *context)
    595          {
    596              int res = 0;
    597              dm_msg_source_t source;
    598              dm_msg_dest_t dest;
    599              dm_msg_request_payload_t request;
    600              dm_msg_response_t response;
    601          
    602              memset(&source, 0, sizeof(dm_msg_source_t));
    603              memset(&dest, 0, sizeof(dm_msg_dest_t));
    604              memset(&request, 0, sizeof(dm_msg_request_payload_t));
    605              memset(&response, 0, sizeof(dm_msg_response_t));
    606          
    607              source.uri = topic;
    608              source.payload = (unsigned char *)payload;
    609              source.payload_len = payload_len;
    610              source.context = NULL;
    611          
    612              dest.uri_name = DM_URI_THING_GATEWAY_PERMIT_REPLY;
    613          
    614              res = dm_msg_proc_thing_gateway_permit(&source, &dest, &request, &response);
    615              if (res < SUCCESS_RETURN) {
    616                  return;
    617              }
    618          
    619              dm_msg_response(DM_MSG_DEST_CLOUD, &request, &response, "{}", strlen("{}"), NULL);
    620          }
    621          
    622          void dm_client_thing_sub_register_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    623                                                  void *context)
    624          {
    625              dm_msg_source_t source;
    626          
    627              memset(&source, 0, sizeof(dm_msg_source_t));
    628          
    629              source.uri = topic;
    630              source.payload = (unsigned char *)payload;
    631              source.payload_len = payload_len;
    632              source.context = NULL;
    633          
    634              dm_msg_proc_thing_sub_register_reply(&source);
    635          }
    636          
    637          void dm_client_thing_sub_unregister_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    638                  void *context)
    639          {
    640              dm_msg_source_t source;
    641          
    642              memset(&source, 0, sizeof(dm_msg_source_t));
    643          
    644              source.uri = topic;
    645              source.payload = (unsigned char *)payload;
    646              source.payload_len = payload_len;
    647              source.context = NULL;
    648          
    649              dm_msg_proc_thing_sub_unregister_reply(&source);
    650          }
    651          
    652          void dm_client_thing_topo_add_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    653                                              void *context)
    654          {
    655              dm_msg_source_t source;
    656          
    657              memset(&source, 0, sizeof(dm_msg_source_t));
    658          
    659              source.uri = topic;
    660              source.payload = (unsigned char *)payload;
    661              source.payload_len = payload_len;
    662              source.context = NULL;
    663          
    664              dm_msg_proc_thing_topo_add_reply(&source);
    665          }
    666          
    667          void dm_client_thing_topo_delete_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    668                                                 void *context)
    669          {
    670              dm_msg_source_t source;
    671          
    672              memset(&source, 0, sizeof(dm_msg_source_t));
    673          
    674              source.uri = topic;
    675              source.payload = (unsigned char *)payload;
    676              source.payload_len = payload_len;
    677              source.context = NULL;
    678          
    679              dm_msg_proc_thing_topo_delete_reply(&source);
    680          }
    681          
    682          void dm_client_thing_topo_get_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    683                                              void *context)
    684          {
    685              dm_msg_source_t source;
    686          
    687              memset(&source, 0, sizeof(dm_msg_source_t));
    688          
    689              source.uri = topic;
    690              source.payload = (unsigned char *)payload;
    691              source.payload_len = payload_len;
    692              source.context = NULL;
    693          
    694              dm_msg_proc_thing_topo_get_reply(&source);
    695          }
    696          
    697          void dm_client_thing_list_found_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    698                                                void *context)
    699          {
    700              dm_msg_source_t source;
    701          
    702              memset(&source, 0, sizeof(dm_msg_source_t));
    703          
    704              source.uri = topic;
    705              source.payload = (unsigned char *)payload;
    706              source.payload_len = payload_len;
    707              source.context = NULL;
    708          
    709              dm_msg_proc_thing_list_found_reply(&source);
    710          }
    711          
    712          void dm_client_combine_login_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    713                                             void *context)
    714          {
    715              dm_msg_source_t source;
    716          
    717              memset(&source, 0, sizeof(dm_msg_source_t));
    718          
    719              source.uri = topic;
    720              source.payload = (unsigned char *)payload;
    721              source.payload_len = payload_len;
    722              source.context = NULL;
    723          
    724              dm_msg_proc_combine_login_reply(&source);
    725          }
    726          
    727          void dm_client_combine_logout_reply(int fd, const char *topic, const char *payload, unsigned int payload_len,
    728                                              void *context)
    729          {
    730              dm_msg_source_t source;
    731          
    732              memset(&source, 0, sizeof(dm_msg_source_t));
    733          
    734              source.uri = topic;
    735              source.payload = (unsigned char *)payload;
    736              source.payload_len = payload_len;
    737              source.context = NULL;
    738          
    739              dm_msg_proc_combine_logout_reply(&source);
    740          }
    741          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   _dm_client_event_cloud_connected_handle
         8   -> awss_report_cloud
         0   -> dm_msg_cloud_connected
       0   _dm_client_event_cloud_disconnect_handle
         0   -> dm_msg_cloud_disconnect
      24   _dm_client_subscribe_filter
        24   -> dm_client_unsubscribe
        24   -> dm_opt_get
        24   -> memcmp
        24   -> strlen
       0   dm_client_event_handle
         0   -> _dm_client_event_cloud_connected_handle
         0   -> _dm_client_event_cloud_disconnect_handle
      32   dm_client_ext_error
        32   -> __aeabi_memset4
        32   -> dm_disp_ext_error_response
      32   dm_client_ntp_response
        32   -> __aeabi_memset4
        32   -> dm_disp_ntp_response
      32   dm_client_rrpc_request_wildcard
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_rrpc_request
      40   dm_client_subscribe_all
        40   -> HAL_Free
        40   -> _dm_client_subscribe_filter
        40   -> dm_client_subscribe
        40   -> dm_utils_service_name
      32   dm_client_thing_deviceinfo_delete_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_deviceinfo_delete_reply
      32   dm_client_thing_deviceinfo_update_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_deviceinfo_update_reply
      32   dm_client_thing_dynamictsl_get_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_dynamictsl_get_reply
      32   dm_client_thing_event_post_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_event_post_reply
      32   dm_client_thing_model_down_raw
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_model_down_raw
      32   dm_client_thing_model_up_raw_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_model_up_raw_reply
      32   dm_client_thing_property_desired_delete_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_property_desired_delete_reply
      32   dm_client_thing_property_desired_get_reply
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_property_desired_get_reply
     248   dm_client_thing_service_property_get
       248   -> __aeabi_memset4
       248   -> dm_msg_proc_thing_service_property_get
     248   dm_client_thing_service_property_set
       248   -> __aeabi_memset4
       248   -> check_target_msg
       248   -> dm_msg_proc_thing_service_property_set
       248   -> dm_msg_response
       248   -> dm_opt_get
       248   -> send_permance_info
      32   dm_client_thing_service_request
        32   -> __aeabi_memset4
        32   -> dm_msg_proc_thing_service_request


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ?_0
       2  ?_1
      26  _dm_client_event_cloud_connected_handle
       4  _dm_client_event_cloud_disconnect_handle
      82  _dm_client_subscribe_filter
       4  awss_reported
      16  dm_client_event_handle
      36  dm_client_ext_error
      36  dm_client_ntp_response
      36  dm_client_rrpc_request_wildcard
     270  dm_client_subscribe_all
      36  dm_client_thing_deviceinfo_delete_reply
      36  dm_client_thing_deviceinfo_update_reply
      36  dm_client_thing_dynamictsl_get_reply
      36  dm_client_thing_event_post_reply
      36  dm_client_thing_model_down_raw
      36  dm_client_thing_model_up_raw_reply
      36  dm_client_thing_property_desired_delete_reply
      36  dm_client_thing_property_desired_get_reply
      84  dm_client_thing_service_property_get
     144  dm_client_thing_service_property_set
      36  dm_client_thing_service_request
     224  g_dm_client_uri_map

 
     4 bytes in section .bss
   224 bytes in section .data
     6 bytes in section .rodata
 1 086 bytes in section .text
 
 1 086 bytes of CODE  memory
     6 bytes of CONST memory
   228 bytes of DATA  memory

Errors: none
Warnings: none
