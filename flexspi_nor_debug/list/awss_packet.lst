###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:00
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_packet.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW8F57.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_packet.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\awss_packet.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\awss_packet.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_packet.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          #include "dev_bind_internal.h"

  typedef void *p_HAL_Aes128_t;
                ^
"C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\os.h",49  Warning[Pe301]: 
          typedef name has already been declared (with same type)
      5          
      6          #define AWSS_DEV_RAND_SIGN_FMT  ",\"random\":\"%s\",\"signMethod\":%d,\"sign\":\"%s\""
      7          #define AWSS_DEV_BIND_TOKEN_FMT ",\"token\":\"%s\",\"remainTime\":%d,\"type\":%d"
      8          #define AWSS_SUCCESS_FMT        ",\"type\":%d"
      9          #define AWSS_DEV_INFO_FMT       "\"awssVer\":%s,\"productKey\":\"%s\",\"deviceName\":\"%s\",\"mac\":\"%s\",\"ip\":\"%s\",\"cipherType\":%d"
     10          
     11          #if defined(__cplusplus)  /* If this is a C++ compiler, use C linkage */
     12          extern "C" {
     13          #endif
     14          

   \                                 In section .text, align 2, keep-with-next
     15          static inline int bind_get_encrypt_type()
     16          {
     17              return 3;
   \                     bind_get_encrypt_type: (+1)
   \        0x0   0x2003             MOVS     R0,#+3
   \        0x2   0x4770             BX       LR               ;; return
     18          }
     19          

   \                                 In section .text, align 2, keep-with-next
     20          static void *awss_get_dev_info(void *dev_info, int len)
     21          {
   \                     awss_get_dev_info: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB09E             SUB      SP,SP,#+120
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
     22              char dev_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \        0x8   0xA815             ADD      R0,SP,#+84
   \        0xA   0x2124             MOVS     R1,#+36
   \        0xC   0x....'....        BL       __aeabi_memclr4
     23              char mac_str[HAL_MAC_LEN + 1] = {0};
   \       0x10   0xA810             ADD      R0,SP,#+64
   \       0x12   0x2114             MOVS     R1,#+20
   \       0x14   0x....'....        BL       __aeabi_memclr4
     24              char pk[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \       0x18   0xA80A             ADD      R0,SP,#+40
   \       0x1A   0x2118             MOVS     R1,#+24
   \       0x1C   0x....'....        BL       __aeabi_memclr4
     25              char ip_str[OS_IP_LEN + 1] = {0};
   \       0x20   0xA805             ADD      R0,SP,#+20
   \       0x22   0x2114             MOVS     R1,#+20
   \       0x24   0x....'....        BL       __aeabi_memclr4
     26          
     27              if (dev_info == NULL || len <= 0) {
   \       0x28   0x2C00             CMP      R4,#+0
   \       0x2A   0xD001             BEQ.N    ??awss_get_dev_info_0
   \       0x2C   0x2D01             CMP      R5,#+1
   \       0x2E   0xDA01             BGE.N    ??awss_get_dev_info_1
     28                  return NULL;
   \                     ??awss_get_dev_info_0: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xE01F             B.N      ??awss_get_dev_info_2
     29              }
     30          
     31              HAL_GetProductKey(pk);
   \                     ??awss_get_dev_info_1: (+1)
   \       0x34   0xA80A             ADD      R0,SP,#+40
   \       0x36   0x....'....        BL       HAL_GetProductKey
     32              HAL_GetDeviceName(dev_name);
   \       0x3A   0xA815             ADD      R0,SP,#+84
   \       0x3C   0x....'....        BL       HAL_GetDeviceName
     33              os_wifi_get_mac_str(mac_str);
   \       0x40   0xA810             ADD      R0,SP,#+64
   \       0x42   0x....'....        BL       os_wifi_get_mac_str
     34              HAL_Wifi_Get_IP(ip_str, NULL);
   \       0x46   0x2100             MOVS     R1,#+0
   \       0x48   0xA805             ADD      R0,SP,#+20
   \       0x4A   0x....'....        BL       HAL_Wifi_Get_IP
     35          #if 0
     36              awss_dict_crypt(NOTIFY_ENCODE_TABLE, (uint8_t *)pk, strlen(pk));
     37              awss_dict_crypt(NOTIFY_ENCODE_TABLE, (uint8_t *)dev_name, strlen(dev_name));
     38          #endif
     39              HAL_Snprintf(dev_info, len - 1, AWSS_DEV_INFO_FMT, AWSS_VER, pk, dev_name, mac_str, ip_str,
     40                           bind_get_encrypt_type());
   \       0x4E   0x....'....        BL       bind_get_encrypt_type
   \       0x52   0x9004             STR      R0,[SP, #+16]
   \       0x54   0xA805             ADD      R0,SP,#+20
   \       0x56   0x9003             STR      R0,[SP, #+12]
   \       0x58   0xA810             ADD      R0,SP,#+64
   \       0x5A   0x9002             STR      R0,[SP, #+8]
   \       0x5C   0xA815             ADD      R0,SP,#+84
   \       0x5E   0x9001             STR      R0,[SP, #+4]
   \       0x60   0xA80A             ADD      R0,SP,#+40
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0x....             LDR.N    R3,??DataTable3_1
   \       0x66   0x....             LDR.N    R2,??DataTable3_2
   \       0x68   0x1E6D             SUBS     R5,R5,#+1
   \       0x6A   0x4629             MOV      R1,R5
   \       0x6C   0x4620             MOV      R0,R4
   \       0x6E   0x....'....        BL       HAL_Snprintf
     41          
     42              return dev_info;
   \       0x72   0x4620             MOV      R0,R4
   \                     ??awss_get_dev_info_2: (+1)
   \       0x74   0xB01F             ADD      SP,SP,#+124
   \       0x76   0xBD30             POP      {R4,R5,PC}       ;; return
     43          }
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void *awss_build_dev_info(int type, void *dev_info, int info_len)
     46          {
   \                     awss_build_dev_info: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB08B             SUB      SP,SP,#+44
   \        0x6   0x4680             MOV      R8,R0
   \        0x8   0x460C             MOV      R4,R1
   \        0xA   0x4617             MOV      R7,R2
     47              int len = 0;
     48              char *buf = NULL;
     49          
     50              if (dev_info == NULL || info_len <= 0) {
   \        0xC   0x2C00             CMP      R4,#+0
   \        0xE   0xD007             BEQ.N    ??awss_build_dev_info_0
   \       0x10   0x2F01             CMP      R7,#+1
   \       0x12   0xDB05             BLT.N    ??awss_build_dev_info_0
     51                  return NULL;
     52              }
     53          
     54              buf = os_zalloc(DEV_INFO_LEN_MAX);
   \       0x14   0xF44F 0x7000      MOV      R0,#+512
   \       0x18   0x....'....        BL       os_zalloc
   \       0x1C   0x0005             MOVS     R5,R0
     55              if (buf == NULL) {
   \       0x1E   0xD101             BNE.N    ??awss_build_dev_info_1
     56                  return NULL;
   \                     ??awss_build_dev_info_0: (+1)
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0xE028             B.N      ??awss_build_dev_info_2
     57              }
     58          
     59              len += HAL_Snprintf((char *)dev_info + len, info_len - len - 1, "%s", (char *)awss_get_dev_info(buf, DEV_INFO_LEN_MAX));
   \                     ??awss_build_dev_info_1: (+1)
   \       0x24   0xF44F 0x7100      MOV      R1,#+512
   \       0x28   0x....'....        BL       awss_get_dev_info
   \       0x2C   0x4603             MOV      R3,R0
   \       0x2E   0x....             ADR.N    R2,??DataTable3  ;; 0x25, 0x73, 0x00, 0x00
   \       0x30   0x1E79             SUBS     R1,R7,#+1
   \       0x32   0x4620             MOV      R0,R4
   \       0x34   0x....'....        BL       HAL_Snprintf
   \       0x38   0x4606             MOV      R6,R0
     60              HAL_Free(buf);
   \       0x3A   0x4628             MOV      R0,R5
   \       0x3C   0x....'....        BL       HAL_Free
     61              buf = NULL;
     62          
     63              switch (type) {
   \       0x40   0xF1B8 0x0F01      CMP      R8,#+1
   \       0x44   0xD116             BNE.N    ??awss_build_dev_info_3
     64                  case AWSS_NOTIFY_DEV_BIND_TOKEN: {
     65                      char rand_str[(RANDOM_MAX_LEN << 1) + 1] = {0};
   \       0x46   0xA802             ADD      R0,SP,#+8
   \       0x48   0x2124             MOVS     R1,#+36
   \       0x4A   0x....'....        BL       __aeabi_memclr4
     66                      utils_hex_to_str(aes_random, RANDOM_MAX_LEN, rand_str, sizeof(rand_str));
   \       0x4E   0x2301             MOVS     R3,#+1
   \       0x50   0x2210             MOVS     R2,#+16
   \       0x52   0xA902             ADD      R1,SP,#+8
   \       0x54   0x....             LDR.N    R0,??DataTable3_3
   \       0x56   0x....'....        BL       LITE_hexbuf_convert
     67                      len += HAL_Snprintf((char *)dev_info + len, info_len - len - 1, AWSS_DEV_BIND_TOKEN_FMT, rand_str,
     68                                          awss_token_remain_time(), 0);
   \       0x5A   0x....'....        BL       awss_token_remain_time
   \       0x5E   0x2100             MOVS     R1,#+0
   \       0x60   0x9101             STR      R1,[SP, #+4]
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0xAB02             ADD      R3,SP,#+8
   \       0x66   0x....             LDR.N    R2,??DataTable3_4
   \       0x68   0x1BBF             SUBS     R7,R7,R6
   \       0x6A   0x1E7F             SUBS     R7,R7,#+1
   \       0x6C   0x4639             MOV      R1,R7
   \       0x6E   0x19A0             ADDS     R0,R4,R6
   \       0x70   0x....'....        BL       HAL_Snprintf
     69                      break;
     70                  }
     71          #ifdef WIFI_PROVISION_ENABLED
     72                  case AWSS_NOTIFY_SUCCESS: {
     73                      len += HAL_Snprintf((char *)dev_info + len, info_len - len - 1, AWSS_SUCCESS_FMT, 0);
     74                      break;
     75                  }
     76                  case AWSS_NOTIFY_DEV_RAND_SIGN: {
     77                      char sign_str[DEV_SIGN_SIZE * 2 + 1] = {0};
     78                      char rand_str[(RANDOM_MAX_LEN << 1) + 1] = {0};
     79                      {
     80                          int txt_len = 80;
     81                          char txt[80] = {0};
     82                          char key[IOTX_DEVICE_SECRET_LEN + 1] = {0};
     83                          uint8_t sign[DEV_SIGN_SIZE + 1] = {0};
     84          
     85                          if (bind_get_encrypt_type() == 3) { /* aes-key per product */
     86                              HAL_GetProductSecret(key);
     87                          } else { /* aes-key per device */
     88                              HAL_GetDeviceSecret(key);
     89                          }
     90                          awss_build_sign_src(txt, &txt_len);
     91                          produce_signature(sign, (uint8_t *)txt, txt_len, key);
     92                          utils_hex_to_str(sign, DEV_SIGN_SIZE, sign_str, sizeof(sign_str));
     93                      }
     94                      utils_hex_to_str(aes_random, RANDOM_MAX_LEN, rand_str, sizeof(rand_str));
     95                      len += HAL_Snprintf((char *)dev_info + len, info_len - len - 1, AWSS_DEV_RAND_SIGN_FMT, rand_str, 0, sign_str);
     96                      break;
     97                  }
     98          #endif
     99                  default:
    100                      break;
    101              }
    102          
    103              return dev_info;
   \                     ??awss_build_dev_info_3: (+1)
   \       0x74   0x4620             MOV      R0,R4
   \                     ??awss_build_dev_info_2: (+1)
   \       0x76   0xB00C             ADD      SP,SP,#+48
   \       0x78   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    104          }
    105          
    106          #ifdef WIFI_PROVISION_ENABLED
    107          char *awss_build_sign_src(char *sign_src, int *sign_src_len)
    108          {
    109              char *pk = NULL, *dev_name = NULL;
    110              int dev_name_len, pk_len, text_len;
    111          
    112              if (sign_src == NULL || sign_src_len == NULL) {
    113                  goto build_sign_src_err;
    114              }
    115          
    116              pk = os_zalloc(IOTX_PRODUCT_KEY_LEN + 1);
    117              dev_name = os_zalloc(IOTX_DEVICE_NAME_LEN + 1);
    118              if (pk == NULL || dev_name == NULL) {
    119                  goto build_sign_src_err;
    120              }
    121          
    122              HAL_GetProductKey(pk);
    123              HAL_GetDeviceName(dev_name);
    124          
    125              pk_len = strlen(pk);
    126              dev_name_len = strlen(dev_name);
    127          
    128              text_len = RANDOM_MAX_LEN + dev_name_len + pk_len;
    129              if (*sign_src_len < text_len) {
    130                  goto build_sign_src_err;
    131              }
    132          
    133              *sign_src_len = text_len;
    134          
    135              memcpy(sign_src, aes_random, RANDOM_MAX_LEN);
    136              memcpy(sign_src + RANDOM_MAX_LEN, dev_name, dev_name_len);
    137              memcpy(sign_src + RANDOM_MAX_LEN + dev_name_len, pk, pk_len);
    138          
    139              HAL_Free(pk);
    140              HAL_Free(dev_name);
    141          
    142              return sign_src;
    143          
    144          build_sign_src_err:
    145              if (pk) {
    146                  HAL_Free(pk);
    147              }
    148              if (dev_name) {
    149                  HAL_Free(dev_name);
    150              }
    151              return NULL;
    152          }
    153          #endif

   \                                 In section .text, align 2, keep-with-next
    154          const char *awss_build_topic(const char *topic_fmt, char *topic, uint32_t tlen)
    155          {
   \                     awss_build_topic: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
   \        0x4   0x4606             MOV      R6,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4614             MOV      R4,R2
    156              char pk[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0xA   0xA801             ADD      R0,SP,#+4
   \        0xC   0x2118             MOVS     R1,#+24
   \        0xE   0x....'....        BL       __aeabi_memclr4
    157              char dev_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x12   0xA807             ADD      R0,SP,#+28
   \       0x14   0x2124             MOVS     R1,#+36
   \       0x16   0x....'....        BL       __aeabi_memclr4
    158              if (topic == NULL || topic_fmt == NULL || tlen == 0) {
   \       0x1A   0x2D00             CMP      R5,#+0
   \       0x1C   0xD003             BEQ.N    ??awss_build_topic_0
   \       0x1E   0x2E00             CMP      R6,#+0
   \       0x20   0xD001             BEQ.N    ??awss_build_topic_0
   \       0x22   0x2C00             CMP      R4,#+0
   \       0x24   0xD101             BNE.N    ??awss_build_topic_1
    159                  return NULL;
   \                     ??awss_build_topic_0: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0xE00F             B.N      ??awss_build_topic_2
    160              }
    161          
    162              HAL_GetProductKey(pk);
   \                     ??awss_build_topic_1: (+1)
   \       0x2A   0xA801             ADD      R0,SP,#+4
   \       0x2C   0x....'....        BL       HAL_GetProductKey
    163              HAL_GetDeviceName(dev_name);
   \       0x30   0xA807             ADD      R0,SP,#+28
   \       0x32   0x....'....        BL       HAL_GetDeviceName
    164          
    165              HAL_Snprintf(topic, tlen - 1, topic_fmt, pk, dev_name);
   \       0x36   0xA807             ADD      R0,SP,#+28
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0xAB01             ADD      R3,SP,#+4
   \       0x3C   0x4632             MOV      R2,R6
   \       0x3E   0x1E64             SUBS     R4,R4,#+1
   \       0x40   0x4621             MOV      R1,R4
   \       0x42   0x4628             MOV      R0,R5
   \       0x44   0x....'....        BL       HAL_Snprintf
    166          
    167              return topic;
   \       0x48   0x4628             MOV      R0,R5
   \                     ??awss_build_topic_2: (+1)
   \       0x4A   0xB010             ADD      SP,SP,#+64
   \       0x4C   0xBD70             POP      {R4-R6,PC}       ;; return
    168          }
    169          

   \                                 In section .text, align 2, keep-with-next
    170          int awss_build_packet(int type, void *id, void *ver, void *method, void *data, int code, void *packet, int *packet_len)
    171          {
   \                     awss_build_packet: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x990B             LDR      R1,[SP, #+44]
    172              int len;
    173              if (packet_len == NULL || data == NULL || packet == NULL) {
   \        0x8   0x2900             CMP      R1,#+0
   \        0xA   0xD005             BEQ.N    ??awss_build_packet_0
   \        0xC   0x9E08             LDR      R6,[SP, #+32]
   \        0xE   0x2E00             CMP      R6,#+0
   \       0x10   0xD002             BEQ.N    ??awss_build_packet_0
   \       0x12   0x980A             LDR      R0,[SP, #+40]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD102             BNE.N    ??awss_build_packet_1
    174                  return -1;
   \                     ??awss_build_packet_0: (+1)
   \       0x18   0xF04F 0x30FF      MOV      R0,#-1
   \       0x1C   0xE026             B.N      ??awss_build_packet_2
    175              }
    176          
    177              len = *packet_len;
   \                     ??awss_build_packet_1: (+1)
   \       0x1E   0x6809             LDR      R1,[R1, #+0]
    178              if (len <= 0) {
   \       0x20   0x2901             CMP      R1,#+1
   \       0x22   0xDA02             BGE.N    ??awss_build_packet_3
    179                  return -1;
   \       0x24   0xF04F 0x30FF      MOV      R0,#-1
   \       0x28   0xE020             B.N      ??awss_build_packet_2
    180              }
    181          
    182              if (type == AWSS_CMP_PKT_TYPE_REQ) {
   \                     ??awss_build_packet_3: (+1)
   \       0x2A   0x2C01             CMP      R4,#+1
   \       0x2C   0xD110             BNE.N    ??awss_build_packet_4
    183                  if (ver == NULL || method == NULL) {
   \       0x2E   0x2A00             CMP      R2,#+0
   \       0x30   0xD001             BEQ.N    ??awss_build_packet_5
   \       0x32   0x2B00             CMP      R3,#+0
   \       0x34   0xD102             BNE.N    ??awss_build_packet_6
    184                      return -1;
   \                     ??awss_build_packet_5: (+1)
   \       0x36   0xF04F 0x30FF      MOV      R0,#-1
   \       0x3A   0xE017             B.N      ??awss_build_packet_2
    185                  }
    186          
    187                  len = HAL_Snprintf(packet, len - 1, AWSS_REQ_FMT, (char *)id, (char *)ver, (char *)method, (char *)data);
   \                     ??awss_build_packet_6: (+1)
   \       0x3C   0x9602             STR      R6,[SP, #+8]
   \       0x3E   0x9301             STR      R3,[SP, #+4]
   \       0x40   0x9200             STR      R2,[SP, #+0]
   \       0x42   0x462B             MOV      R3,R5
   \       0x44   0x....             LDR.N    R2,??DataTable3_5
   \       0x46   0x1E49             SUBS     R1,R1,#+1
   \       0x48   0x....'....        BL       HAL_Snprintf
    188                  return 0;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0xE00D             B.N      ??awss_build_packet_2
    189              } else if (type == AWSS_CMP_PKT_TYPE_RSP) {
   \                     ??awss_build_packet_4: (+1)
   \       0x50   0x2C02             CMP      R4,#+2
   \       0x52   0xD109             BNE.N    ??awss_build_packet_7
   \       0x54   0x9A09             LDR      R2,[SP, #+36]
    190                  len = HAL_Snprintf(packet, len - 1, AWSS_ACK_FMT, (char *)id, code, (char *)data);
   \       0x56   0x9601             STR      R6,[SP, #+4]
   \       0x58   0x9200             STR      R2,[SP, #+0]
   \       0x5A   0x462B             MOV      R3,R5
   \       0x5C   0x....             LDR.N    R2,??DataTable3_6
   \       0x5E   0x1E49             SUBS     R1,R1,#+1
   \       0x60   0x....'....        BL       HAL_Snprintf
    191                  return 0;
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xE001             B.N      ??awss_build_packet_2
    192              }
    193              return -1;
   \                     ??awss_build_packet_7: (+1)
   \       0x68   0xF04F 0x30FF      MOV      R0,#-1
   \                     ??awss_build_packet_2: (+1)
   \       0x6C   0xB004             ADD      SP,SP,#+16
   \       0x6E   0xBD70             POP      {R4-R6,PC}       ;; return
    194          }
    195          

   \                                 In section .text, align 2, keep-with-next
    196          void produce_random(uint8_t *random, uint32_t len)
    197          {
   \                     produce_random: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    198              int i = 0;
   \        0x6   0x2600             MOVS     R6,#+0
    199              int time = HAL_UptimeMs();
   \        0x8   0x....'....        BL       HAL_UptimeMs
    200              HAL_Srandom(time);
   \        0xC   0x....'....        BL       HAL_Srandom
    201              for (i = 0; i < len; i ++) {
   \       0x10   0xE004             B.N      ??produce_random_0
    202                  random[i] = HAL_Random(0xFF);
   \                     ??produce_random_1: (+1)
   \       0x12   0x20FF             MOVS     R0,#+255
   \       0x14   0x....'....        BL       HAL_Random
   \       0x18   0x55A0             STRB     R0,[R4, R6]
    203              }
   \       0x1A   0x1C76             ADDS     R6,R6,#+1
   \                     ??produce_random_0: (+1)
   \       0x1C   0x42AE             CMP      R6,R5
   \       0x1E   0xD3F8             BCC.N    ??produce_random_1
    204          }
   \       0x20   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x25 0x73          DC8      0x25, 0x73, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     aes_random

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x22 0x61          DC8 22H, 61H, 77H, 73H, 73H, 56H, 65H, 72H
   \              0x77 0x73    
   \              0x73 0x56    
   \              0x65 0x72    
   \        0x8   0x22 0x3A          DC8 22H, 3AH, 25H, 73H, 2CH, 22H, 70H, 72H
   \              0x25 0x73    
   \              0x2C 0x22    
   \              0x70 0x72    
   \       0x10   0x6F 0x64          DC8 6FH, 64H, 75H, 63H, 74H, 4BH, 65H, 79H
   \              0x75 0x63    
   \              0x74 0x4B    
   \              0x65 0x79    
   \       0x18   0x22 0x3A          DC8 22H, 3AH, 22H, 25H, 73H, 22H, 2CH, 22H
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x2C 0x22    
   \       0x20   0x64 0x65          DC8 64H, 65H, 76H, 69H, 63H, 65H, 4EH, 61H
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x4E 0x61    
   \       0x28   0x6D 0x65          DC8 6DH, 65H, 22H, 3AH, 22H, 25H, 73H, 22H
   \              0x22 0x3A    
   \              0x22 0x25    
   \              0x73 0x22    
   \       0x30   0x2C 0x22          DC8 2CH, 22H, 6DH, 61H, 63H, 22H, 3AH, 22H
   \              0x6D 0x61    
   \              0x63 0x22    
   \              0x3A 0x22    
   \       0x38   0x25 0x73          DC8 25H, 73H, 22H, 2CH, 22H, 69H, 70H, 22H
   \              0x22 0x2C    
   \              0x22 0x69    
   \              0x70 0x22    
   \       0x40   0x3A 0x22          DC8 3AH, 22H, 25H, 73H, 22H, 2CH, 22H, 63H
   \              0x25 0x73    
   \              0x22 0x2C    
   \              0x22 0x63    
   \       0x48   0x69 0x70          DC8 69H, 70H, 68H, 65H, 72H, 54H, 79H, 70H
   \              0x68 0x65    
   \              0x72 0x54    
   \              0x79 0x70    
   \       0x50   0x65 0x22          DC8 65H, 22H, 3AH, 25H, 64H, 0
   \              0x3A 0x25    
   \              0x64 0x00    
   \       0x56   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x7B 0x22          DC8 7BH, 22H, 73H, 6DH, 61H, 72H, 74H, 63H
   \              0x73 0x6D    
   \              0x61 0x72    
   \              0x74 0x63    
   \        0x8   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 22H, 3AH, 22H
   \              0x66 0x69    
   \              0x67 0x22    
   \              0x3A 0x22    
   \       0x10   0x32 0x2E          DC8 32H, 2EH, 30H, 22H, 2CH, 22H, 7AH, 63H
   \              0x30 0x22    
   \              0x2C 0x22    
   \              0x7A 0x63    
   \       0x18   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 22H, 3AH, 22H
   \              0x66 0x69    
   \              0x67 0x22    
   \              0x3A 0x22    
   \       0x20   0x32 0x2E          DC8 32H, 2EH, 30H, 22H, 2CH, 22H, 72H, 6FH
   \              0x30 0x22    
   \              0x2C 0x22    
   \              0x72 0x6F    
   \       0x28   0x75 0x74          DC8 75H, 74H, 65H, 72H, 22H, 3AH, 22H, 32H
   \              0x65 0x72    
   \              0x22 0x3A    
   \              0x22 0x32    
   \       0x30   0x2E 0x30          DC8 2EH, 30H, 22H, 2CH, 22H, 61H, 70H, 22H
   \              0x22 0x2C    
   \              0x22 0x61    
   \              0x70 0x22    
   \       0x38   0x3A 0x22          DC8 3AH, 22H, 32H, 2EH, 30H, 22H, 2CH, 22H
   \              0x32 0x2E    
   \              0x30 0x22    
   \              0x2C 0x22    
   \       0x40   0x73 0x6F          DC8 73H, 6FH, 66H, 74H, 61H, 70H, 22H, 3AH
   \              0x66 0x74    
   \              0x61 0x70    
   \              0x22 0x3A    
   \       0x48   0x22 0x32          DC8 22H, 32H, 2EH, 30H, 22H, 7DH, 0
   \              0x2E 0x30    
   \              0x22 0x7D    
   \              0x00         
   \       0x4F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x25 0x73          DC8 "%s"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x2C 0x22          DC8 ",\"token\":\"%s\",\"remainTime\":%d,\"type\":%d"
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x22    
   \              0x3A 0x22    
   \              0x25 0x73    
   \              0x22 0x2C    
   \              0x22 0x72    
   \              0x65 0x6D    
   \              0x61 0x69    
   \              0x6E 0x54    
   \              0x69 0x6D    
   \              0x65 0x22    
   \              0x3A 0x25    
   \              0x64 0x2C    
   \              0x22 0x74    
   \              0x79 0x70    
   \              0x65 0x22    
   \              0x3A 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x7B 0x22          DC8 7BH, 22H, 69H, 64H, 22H, 3AH, 25H, 73H
   \              0x69 0x64    
   \              0x22 0x3A    
   \              0x25 0x73    
   \        0x8   0x2C 0x22          DC8 2CH, 22H, 76H, 65H, 72H, 73H, 69H, 6FH
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \       0x10   0x6E 0x22          DC8 6EH, 22H, 3AH, 22H, 25H, 73H, 22H, 2CH
   \              0x3A 0x22    
   \              0x25 0x73    
   \              0x22 0x2C    
   \       0x18   0x22 0x6D          DC8 22H, 6DH, 65H, 74H, 68H, 6FH, 64H, 22H
   \              0x65 0x74    
   \              0x68 0x6F    
   \              0x64 0x22    
   \       0x20   0x3A 0x22          DC8 3AH, 22H, 25H, 73H, 22H, 2CH, 22H, 70H
   \              0x25 0x73    
   \              0x22 0x2C    
   \              0x22 0x70    
   \       0x28   0x61 0x72          DC8 61H, 72H, 61H, 6DH, 73H, 22H, 3AH, 25H
   \              0x61 0x6D    
   \              0x73 0x22    
   \              0x3A 0x25    
   \       0x30   0x73 0x7D          DC8 73H, 7DH, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x7B 0x22          DC8 "{\"id\":%s,\"code\":%d,\"data\":%s}"
   \              0x69 0x64    
   \              0x22 0x3A    
   \              0x25 0x73    
   \              0x2C 0x22    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x22 0x3A    
   \              0x25 0x64    
   \              0x2C 0x22    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x22 0x3A    
   \              0x25 0x73    
   \              0x7D 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0
    205          
    206          #if defined(__cplusplus)  /* If this is a C++ compiler, use C linkage */
    207          }
    208          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   awss_build_dev_info
        72   -> HAL_Free
        72   -> HAL_Snprintf
        72   -> LITE_hexbuf_convert
        72   -> __aeabi_memclr4
        72   -> awss_get_dev_info
        72   -> awss_token_remain_time
        72   -> os_zalloc
      32   awss_build_packet
        32   -> HAL_Snprintf
      80   awss_build_topic
        80   -> HAL_GetDeviceName
        80   -> HAL_GetProductKey
        80   -> HAL_Snprintf
        80   -> __aeabi_memclr4
     136   awss_get_dev_info
       136   -> HAL_GetDeviceName
       136   -> HAL_GetProductKey
       136   -> HAL_Snprintf
       136   -> HAL_Wifi_Get_IP
       136   -> __aeabi_memclr4
       136   -> bind_get_encrypt_type
       136   -> os_wifi_get_mac_str
       0   bind_get_encrypt_type
      16   produce_random
        16   -> HAL_Random
        16   -> HAL_Srandom
        16   -> HAL_UptimeMs


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
      36  ?_0
      20  ?_1
      36  ?_10
      52  ?_11
      32  ?_12
      24  ?_2
      20  ?_3
      88  ?_4
      80  ?_5
       4  ?_6
      36  ?_7
      40  ?_8
      24  ?_9
     124  awss_build_dev_info
     112  awss_build_packet
      78  awss_build_topic
     120  awss_get_dev_info
       4  bind_get_encrypt_type
      34  produce_random

 
 492 bytes in section .rodata
 500 bytes in section .text
 
 500 bytes of CODE  memory
 492 bytes of CONST memory

Errors: none
Warnings: 1
