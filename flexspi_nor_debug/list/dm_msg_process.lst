###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:14
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_msg_process.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWC578.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_msg_process.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\dm_msg_process.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\dm_msg_process.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_msg_process.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          
      5          
      6          
      7          #include "iotx_dm_internal.h"
      8          

   \                                 In section .rodata, align 4
      9          const char DM_URI_SYS_PREFIX[]                        DM_READ_ONLY = "/sys/%s/%s/";
   \                     DM_URI_SYS_PREFIX:
   \        0x0   0x2F 0x73          DC8 "/sys/%s/%s/"
   \              0x79 0x73    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x2F 0x00    

   \                                 In section .rodata, align 4
     10          const char DM_URI_EXT_SESSION_PREFIX[]                DM_READ_ONLY = "/ext/session/%s/%s/";
   \                     DM_URI_EXT_SESSION_PREFIX:
   \        0x0   0x2F 0x65          DC8 "/ext/session/%s/%s/"
   \              0x78 0x74    
   \              0x2F 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x2F 0x00    

   \                                 In section .rodata, align 4
     11          const char DM_URI_EXT_NTP_PREFIX[]                    DM_READ_ONLY = "/ext/ntp/%s/%s/";
   \                     DM_URI_EXT_NTP_PREFIX:
   \        0x0   0x2F 0x65          DC8 "/ext/ntp/%s/%s/"
   \              0x78 0x74    
   \              0x2F 0x6E    
   \              0x74 0x70    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x2F 0x00    

   \                                 In section .rodata, align 4
     12          const char DM_URI_EXT_ERROR_PREFIX[]                  DM_READ_ONLY = "/ext/error/%s/%s";
   \                     DM_URI_EXT_ERROR_PREFIX:
   \        0x0   0x2F 0x65          DC8 "/ext/error/%s/%s"
   \              0x78 0x74    
   \              0x2F 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     13          const char DM_URI_REPLY_SUFFIX[]                      DM_READ_ONLY = "_reply";
   \                     DM_URI_REPLY_SUFFIX:
   \        0x0   0x5F 0x72          DC8 "_reply"
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
     14          const char DM_URI_OTA_DEVICE_INFORM[]                 DM_READ_ONLY = "/ota/device/inform/%s/%s";
   \                     DM_URI_OTA_DEVICE_INFORM:
   \        0x0   0x2F 0x6F          DC8 "/ota/device/inform/%s/%s"
   \              0x74 0x61    
   \              0x2F 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     15          
     16          /* From Cloud To Local Request And Response*/

   \                                 In section .rodata, align 4
     17          const char DM_URI_THING_MODEL_DOWN_RAW[]              DM_READ_ONLY = "thing/model/down_raw";
   \                     DM_URI_THING_MODEL_DOWN_RAW:
   \        0x0   0x74 0x68          DC8 "thing/model/down_raw"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2F    
   \              0x64 0x6F    
   \              0x77 0x6E    
   \              0x5F 0x72    
   \              0x61 0x77    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     18          const char DM_URI_THING_MODEL_DOWN_RAW_REPLY[]        DM_READ_ONLY = "thing/model/down_raw_reply";
   \                     DM_URI_THING_MODEL_DOWN_RAW_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/model/down_raw_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2F    
   \              0x64 0x6F    
   \              0x77 0x6E    
   \              0x5F 0x72    
   \              0x61 0x77    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x1B   0x00               DC8 0
     19          
     20          /* From Local To Cloud Request And Response*/

   \                                 In section .rodata, align 4
     21          const char DM_URI_THING_MODEL_UP_RAW[]                DM_READ_ONLY = "thing/model/up_raw";
   \                     DM_URI_THING_MODEL_UP_RAW:
   \        0x0   0x74 0x68          DC8 "thing/model/up_raw"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2F    
   \              0x75 0x70    
   \              0x5F 0x72    
   \              0x61 0x77    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
     22          const char DM_URI_THING_MODEL_UP_RAW_REPLY[]          DM_READ_ONLY = "thing/model/up_raw_reply";
   \                     DM_URI_THING_MODEL_UP_RAW_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/model/up_raw_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x6C 0x2F    
   \              0x75 0x70    
   \              0x5F 0x72    
   \              0x61 0x77    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     23          
     24          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)

   \                                 In section .rodata, align 4
     25              const char DM_URI_RRPC_REQUEST_WILDCARD[]             DM_READ_ONLY = "rrpc/request/+";
   \                     DM_URI_RRPC_REQUEST_WILDCARD:
   \        0x0   0x72 0x72          DC8 "rrpc/request/+"
   \              0x70 0x63    
   \              0x2F 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x2F 0x2B    
   \              0x00         
   \        0xF   0x00               DC8 0
     26          
     27              /* From Cloud To Local Request And Response*/

   \                                 In section .rodata, align 4
     28              const char DM_URI_THING_SERVICE_PROPERTY_SET[]        DM_READ_ONLY = "thing/service/property/set";
   \                     DM_URI_THING_SERVICE_PROPERTY_SET:
   \        0x0   0x74 0x68          DC8 "thing/service/property/set"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x73    
   \              0x65 0x74    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
     29              const char DM_URI_THING_SERVICE_PROPERTY_SET_REPLY[]  DM_READ_ONLY = "thing/service/property/set_reply";
   \                     DM_URI_THING_SERVICE_PROPERTY_SET_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/service/property/set_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x73    
   \              0x65 0x74    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     30              const char DM_URI_THING_SERVICE_PROPERTY_GET[]        DM_READ_ONLY = "thing/service/property/get";
   \                     DM_URI_THING_SERVICE_PROPERTY_GET:
   \        0x0   0x74 0x68          DC8 "thing/service/property/get"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
     31              const char DM_URI_THING_SERVICE_PROPERTY_GET_REPLY[]  DM_READ_ONLY = "thing/service/property/get_reply";
   \                     DM_URI_THING_SERVICE_PROPERTY_GET_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/service/property/get_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     32              const char DM_URI_THING_SERVICE_REQUEST_WILDCARD[]    DM_READ_ONLY = "thing/service/+";
   \                     DM_URI_THING_SERVICE_REQUEST_WILDCARD:
   \        0x0   0x74 0x68          DC8 "thing/service/+"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x2B 0x00    

   \                                 In section .rodata, align 4
     33              const char DM_URI_THING_SERVICE_REQUEST_WILDCARD2[]   DM_READ_ONLY = "thing/service/#";
   \                     DM_URI_THING_SERVICE_REQUEST_WILDCARD2:
   \        0x0   0x74 0x68          DC8 "thing/service/#"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x23 0x00    

   \                                 In section .rodata, align 4
     34              const char DM_URI_THING_SERVICE_REQUEST[]             DM_READ_ONLY = "thing/service/%s";
   \                     DM_URI_THING_SERVICE_REQUEST:
   \        0x0   0x74 0x68          DC8 "thing/service/%s"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x25 0x73    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     35              const char DM_URI_THING_SERVICE_RESPONSE[]            DM_READ_ONLY = "thing/service/%.*s_reply";
   \                     DM_URI_THING_SERVICE_RESPONSE:
   \        0x0   0x74 0x68          DC8 "thing/service/%.*s_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x25 0x2E    
   \              0x2A 0x73    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     36              #ifdef DEVICE_MODEL_SHADOW

   \                                 In section .rodata, align 4
     37                  const char DM_URI_THING_PROPERTY_DESIRED_GET[]        DM_READ_ONLY = "thing/property/desired/get";
   \                     DM_URI_THING_PROPERTY_DESIRED_GET:
   \        0x0   0x74 0x68          DC8 "thing/property/desired/get"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x64    
   \              0x65 0x73    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
     38                  const char DM_URI_THING_PROPERTY_DESIRED_DELETE[]     DM_READ_ONLY = "thing/property/desired/delete";
   \                     DM_URI_THING_PROPERTY_DESIRED_DELETE:
   \        0x0   0x74 0x68          DC8 "thing/property/desired/delete"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x64    
   \              0x65 0x73    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x2F 0x64    
   \              0x65 0x6C    
   \              0x65 0x74    
   \              0x65 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     39                  const char DM_URI_THING_PROPERTY_DESIRED_GET_REPLY[]  DM_READ_ONLY = "thing/property/desired/get_reply";
   \                     DM_URI_THING_PROPERTY_DESIRED_GET_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/property/desired/get_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x64    
   \              0x65 0x73    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     40                  const char DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY[]  DM_READ_ONLY = "thing/property/desired/delete_reply";
   \                     DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/property/desired/delete_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x64    
   \              0x65 0x73    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x2F 0x64    
   \              0x65 0x6C    
   \              0x65 0x74    
   \              0x65 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    
     41              #endif
     42              /* From Local To Cloud Request And Response*/
     43              #ifdef LOG_REPORT_TO_CLOUD

   \                                 In section .rodata, align 4
     44                  const char DM_URI_THING_LOG_POST[]                    DM_READ_ONLY = "thing/log/post";
   \                     DM_URI_THING_LOG_POST:
   \        0x0   0x74 0x68          DC8 "thing/log/post"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x6C 0x6F    
   \              0x67 0x2F    
   \              0x70 0x6F    
   \              0x73 0x74    
   \              0x00         
   \        0xF   0x00               DC8 0
     45              #endif

   \                                 In section .rodata, align 4
     46              const char DM_URI_THING_EVENT_PROPERTY_POST[]         DM_READ_ONLY = "thing/event/property/post";
   \                     DM_URI_THING_EVENT_PROPERTY_POST:
   \        0x0   0x74 0x68          DC8 "thing/event/property/post"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x70    
   \              0x6F 0x73    
   \              0x74 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     47              const char DM_URI_THING_EVENT_PROPERTY_POST_REPLY[]   DM_READ_ONLY = "thing/event/property/post_reply";
   \                     DM_URI_THING_EVENT_PROPERTY_POST_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/event/property/post_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x2F    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2F 0x70    
   \              0x6F 0x73    
   \              0x74 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
     48              const char DM_URI_THING_EVENT_POST[]                  DM_READ_ONLY = "thing/event/%.*s/post";
   \                     DM_URI_THING_EVENT_POST:
   \        0x0   0x74 0x68          DC8 "thing/event/%.*s/post"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x2F    
   \              0x25 0x2E    
   \              0x2A 0x73    
   \              0x2F 0x70    
   \              0x6F 0x73    
   \              0x74 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     49              const char DM_URI_THING_EVENT_POST_REPLY[]            DM_READ_ONLY = "thing/event/%s/post_reply";
   \                     DM_URI_THING_EVENT_POST_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/event/%s/post_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x2F    
   \              0x25 0x73    
   \              0x2F 0x70    
   \              0x6F 0x73    
   \              0x74 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     50              const char DM_URI_THING_EVENT_POST_REPLY_WILDCARD[]   DM_READ_ONLY = "thing/event/+/post_reply";
   \                     DM_URI_THING_EVENT_POST_REPLY_WILDCARD:
   \        0x0   0x74 0x68          DC8 "thing/event/+/post_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x65 0x76    
   \              0x65 0x6E    
   \              0x74 0x2F    
   \              0x2B 0x2F    
   \              0x70 0x6F    
   \              0x73 0x74    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     51              const char DM_URI_THING_DEVICEINFO_UPDATE[]           DM_READ_ONLY = "thing/deviceinfo/update";
   \                     DM_URI_THING_DEVICEINFO_UPDATE:
   \        0x0   0x74 0x68          DC8 "thing/deviceinfo/update"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x2F 0x75    
   \              0x70 0x64    
   \              0x61 0x74    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
     52              const char DM_URI_THING_DEVICEINFO_UPDATE_REPLY[]     DM_READ_ONLY = "thing/deviceinfo/update_reply";
   \                     DM_URI_THING_DEVICEINFO_UPDATE_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/deviceinfo/update_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x2F 0x75    
   \              0x70 0x64    
   \              0x61 0x74    
   \              0x65 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     53              const char DM_URI_THING_DEVICEINFO_DELETE[]           DM_READ_ONLY = "thing/deviceinfo/delete";
   \                     DM_URI_THING_DEVICEINFO_DELETE:
   \        0x0   0x74 0x68          DC8 "thing/deviceinfo/delete"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x2F 0x64    
   \              0x65 0x6C    
   \              0x65 0x74    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
     54              const char DM_URI_THING_DEVICEINFO_DELETE_REPLY[]     DM_READ_ONLY = "thing/deviceinfo/delete_reply";
   \                     DM_URI_THING_DEVICEINFO_DELETE_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/deviceinfo/delete_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x2F 0x64    
   \              0x65 0x6C    
   \              0x65 0x74    
   \              0x65 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     55              const char DM_URI_THING_DSLTEMPLATE_GET[]             DM_READ_ONLY = "thing/dsltemplate/get";
   \                     DM_URI_THING_DSLTEMPLATE_GET:
   \        0x0   0x74 0x68          DC8 "thing/dsltemplate/get"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x73    
   \              0x6C 0x74    
   \              0x65 0x6D    
   \              0x70 0x6C    
   \              0x61 0x74    
   \              0x65 0x2F    
   \              0x67 0x65    
   \              0x74 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
     56              const char DM_URI_THING_DSLTEMPLATE_GET_REPLY[]       DM_READ_ONLY = "thing/dsltemplate/get_reply";
   \                     DM_URI_THING_DSLTEMPLATE_GET_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/dsltemplate/get_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x73    
   \              0x6C 0x74    
   \              0x65 0x6D    
   \              0x70 0x6C    
   \              0x61 0x74    
   \              0x65 0x2F    
   \              0x67 0x65    
   \              0x74 0x5F    
   \              0x72 0x65    
   \              0x70 0x6C    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
     57              const char DM_URI_THING_DYNAMICTSL_GET[]              DM_READ_ONLY = "thing/dynamicTsl/get";
   \                     DM_URI_THING_DYNAMICTSL_GET:
   \        0x0   0x74 0x68          DC8 "thing/dynamicTsl/get"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x79    
   \              0x6E 0x61    
   \              0x6D 0x69    
   \              0x63 0x54    
   \              0x73 0x6C    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
     58              const char DM_URI_THING_DYNAMICTSL_GET_REPLY[]        DM_READ_ONLY = "thing/dynamicTsl/get_reply";
   \                     DM_URI_THING_DYNAMICTSL_GET_REPLY:
   \        0x0   0x74 0x68          DC8 "thing/dynamicTsl/get_reply"
   \              0x69 0x6E    
   \              0x67 0x2F    
   \              0x64 0x79    
   \              0x6E 0x61    
   \              0x6D 0x69    
   \              0x63 0x54    
   \              0x73 0x6C    
   \              0x2F 0x67    
   \              0x65 0x74    
   \              0x5F 0x72    
   \              0x65 0x70    
   \              0x6C 0x79    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
     59              const char DM_URI_NTP_REQUEST[]                       DM_READ_ONLY = "request";
   \                     DM_URI_NTP_REQUEST:
   \        0x0   0x72 0x65          DC8 "request"
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
     60              const char DM_URI_NTP_RESPONSE[]                      DM_READ_ONLY = "response";
   \                     DM_URI_NTP_RESPONSE:
   \        0x0   0x72 0x65          DC8 "response"
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     61          #endif
     62          

   \                                 In section .rodata, align 4
     63          const char DM_URI_DEV_CORE_SERVICE_DEV[]              DM_READ_ONLY = "/dev/core/service/dev";
   \                     DM_URI_DEV_CORE_SERVICE_DEV:
   \        0x0   0x2F 0x64          DC8 "/dev/core/service/dev"
   \              0x65 0x76    
   \              0x2F 0x63    
   \              0x6F 0x72    
   \              0x65 0x2F    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2F    
   \              0x64 0x65    
   \              0x76 0x00    
   \       0x16   0x00 0x00          DC8 0, 0
     64          
     65          #ifdef DEVICE_MODEL_GATEWAY
     66              /* From Cloud To Local Request And Response*/
     67              const char DM_URI_THING_TOPO_ADD_NOTIFY[]             DM_READ_ONLY = "thing/topo/add/notify";
     68              const char DM_URI_THING_TOPO_ADD_NOTIFY_REPLY[]       DM_READ_ONLY = "thing/topo/add/notify_reply";
     69              const char DM_URI_THING_DELETE[]                      DM_READ_ONLY = "thing/delete";
     70              const char DM_URI_THING_DELETE_REPLY[]                DM_READ_ONLY = "thing/delete_reply";
     71              const char DM_URI_THING_DISABLE[]                     DM_READ_ONLY = "thing/disable";
     72              const char DM_URI_THING_DISABLE_REPLY[]               DM_READ_ONLY = "thing/disable_reply";
     73              const char DM_URI_THING_ENABLE[]                      DM_READ_ONLY = "thing/enable";
     74              const char DM_URI_THING_ENABLE_REPLY[]                DM_READ_ONLY = "thing/enable_reply";
     75              const char DM_URI_THING_GATEWAY_PERMIT[]              DM_READ_ONLY = "thing/gateway/permit";
     76              const char DM_URI_THING_GATEWAY_PERMIT_REPLY[]        DM_READ_ONLY = "thing/gateway/permit_reply";
     77          
     78              /* From Local To Cloud Request And Response*/
     79              const char DM_URI_THING_SUB_REGISTER[]                DM_READ_ONLY = "thing/sub/register";
     80              const char DM_URI_THING_SUB_REGISTER_REPLY[]          DM_READ_ONLY = "thing/sub/register_reply";
     81              const char DM_URI_THING_SUB_UNREGISTER[]              DM_READ_ONLY = "thing/sub/unregister";
     82              const char DM_URI_THING_SUB_UNREGISTER_REPLY[]        DM_READ_ONLY = "thing/sub/unregister_reply";
     83              const char DM_URI_THING_TOPO_ADD[]                    DM_READ_ONLY = "thing/topo/add";
     84              const char DM_URI_THING_TOPO_ADD_REPLY[]              DM_READ_ONLY = "thing/topo/add_reply";
     85              const char DM_URI_THING_TOPO_DELETE[]                 DM_READ_ONLY = "thing/topo/delete";
     86              const char DM_URI_THING_TOPO_DELETE_REPLY[]           DM_READ_ONLY = "thing/topo/delete_reply";
     87              const char DM_URI_THING_TOPO_GET[]                    DM_READ_ONLY = "thing/topo/get";
     88              const char DM_URI_THING_TOPO_GET_REPLY[]              DM_READ_ONLY = "thing/topo/get_reply";
     89              const char DM_URI_THING_LIST_FOUND[]                  DM_READ_ONLY = "thing/list/found";
     90              const char DM_URI_THING_LIST_FOUND_REPLY[]            DM_READ_ONLY = "thing/list/found_reply";
     91              const char DM_URI_COMBINE_LOGIN[]                     DM_READ_ONLY = "combine/login";
     92              const char DM_URI_COMBINE_LOGIN_REPLY[]               DM_READ_ONLY = "combine/login_reply";
     93              const char DM_URI_COMBINE_LOGOUT[]                    DM_READ_ONLY = "combine/logout";
     94              const char DM_URI_COMBINE_LOGOUT_REPLY[]              DM_READ_ONLY = "combine/logout_reply";
     95          #endif
     96          

   \                                 In section .text, align 2, keep-with-next
     97          int dm_msg_proc_thing_model_down_raw(_IN_ dm_msg_source_t *source)
     98          {
   \                     dm_msg_proc_thing_model_down_raw: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x4604             MOV      R4,R0
     99              int res = 0;
    100              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0x6   0xA802             ADD      R0,SP,#+8
   \        0x8   0x2118             MOVS     R1,#+24
   \        0xA   0x....'....        BL       __aeabi_memclr4
    101              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \        0xE   0xA808             ADD      R0,SP,#+32
   \       0x10   0x2124             MOVS     R1,#+36
   \       0x12   0x....'....        BL       __aeabi_memclr4
    102          
    103              /* Parse Product Key And Device Name */
    104              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    105                                          device_name);
    106              if (res != SUCCESS_RETURN) {
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0x....'....        BL       strlen
   \       0x1C   0x4601             MOV      R1,R0
   \       0x1E   0xA808             ADD      R0,SP,#+32
   \       0x20   0x9001             STR      R0,[SP, #+4]
   \       0x22   0xA802             ADD      R0,SP,#+8
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x2304             MOVS     R3,#+4
   \       0x28   0x2202             MOVS     R2,#+2
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0x....'....        BL       dm_msg_uri_parse_pkdn
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD002             BEQ.N    ??dm_msg_proc_thing_model_down_raw_0
    107                  return FAIL_RETURN;
   \       0x34   0xF04F 0x30FF      MOV      R0,#-1
   \       0x38   0xE005             B.N      ??dm_msg_proc_thing_model_down_raw_1
    108              }
    109          
    110              return dm_msg_thing_model_down_raw(product_key, device_name, (char *)source->payload, source->payload_len);
   \                     ??dm_msg_proc_thing_model_down_raw_0: (+1)
   \       0x3A   0x68A3             LDR      R3,[R4, #+8]
   \       0x3C   0x6862             LDR      R2,[R4, #+4]
   \       0x3E   0xA908             ADD      R1,SP,#+32
   \       0x40   0xA802             ADD      R0,SP,#+8
   \       0x42   0x....'....        BL       dm_msg_thing_model_down_raw
   \                     ??dm_msg_proc_thing_model_down_raw_1: (+1)
   \       0x46   0xB012             ADD      SP,SP,#+72
   \       0x48   0xBD10             POP      {R4,PC}          ;; return
    111          }
    112          

   \                                 In section .text, align 2, keep-with-next
    113          int dm_msg_proc_thing_model_up_raw_reply(_IN_ dm_msg_source_t *source)
    114          {
   \                     dm_msg_proc_thing_model_up_raw_reply: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x4604             MOV      R4,R0
    115              int res = 0;
    116              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0x6   0xA802             ADD      R0,SP,#+8
   \        0x8   0x2118             MOVS     R1,#+24
   \        0xA   0x....'....        BL       __aeabi_memclr4
    117              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \        0xE   0xA808             ADD      R0,SP,#+32
   \       0x10   0x2124             MOVS     R1,#+36
   \       0x12   0x....'....        BL       __aeabi_memclr4
    118          
    119              dm_log_info(DM_URI_THING_MODEL_UP_RAW_REPLY);
    120          
    121              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    122                                          device_name);
    123              if (res != SUCCESS_RETURN) {
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0x....'....        BL       strlen
   \       0x1C   0x4601             MOV      R1,R0
   \       0x1E   0xA808             ADD      R0,SP,#+32
   \       0x20   0x9001             STR      R0,[SP, #+4]
   \       0x22   0xA802             ADD      R0,SP,#+8
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x2304             MOVS     R3,#+4
   \       0x28   0x2202             MOVS     R2,#+2
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0x....'....        BL       dm_msg_uri_parse_pkdn
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD002             BEQ.N    ??dm_msg_proc_thing_model_up_raw_reply_0
    124                  return FAIL_RETURN;
   \       0x34   0xF04F 0x30FF      MOV      R0,#-1
   \       0x38   0xE00B             B.N      ??dm_msg_proc_thing_model_up_raw_reply_1
    125              }
    126          
    127              /* Operation */
    128              res = dm_msg_thing_model_up_raw_reply(product_key, device_name, (char *)source->payload, source->payload_len);
    129              if (res != SUCCESS_RETURN) {
   \                     ??dm_msg_proc_thing_model_up_raw_reply_0: (+1)
   \       0x3A   0x68A3             LDR      R3,[R4, #+8]
   \       0x3C   0x6862             LDR      R2,[R4, #+4]
   \       0x3E   0xA908             ADD      R1,SP,#+32
   \       0x40   0xA802             ADD      R0,SP,#+8
   \       0x42   0x....'....        BL       dm_msg_thing_model_up_raw_reply
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD002             BEQ.N    ??dm_msg_proc_thing_model_up_raw_reply_2
    130                  return FAIL_RETURN;
   \       0x4A   0xF04F 0x30FF      MOV      R0,#-1
   \       0x4E   0xE000             B.N      ??dm_msg_proc_thing_model_up_raw_reply_1
    131              }
    132          
    133              return SUCCESS_RETURN;
   \                     ??dm_msg_proc_thing_model_up_raw_reply_2: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??dm_msg_proc_thing_model_up_raw_reply_1: (+1)
   \       0x52   0xB012             ADD      SP,SP,#+72
   \       0x54   0xBD10             POP      {R4,PC}          ;; return
    134          }
    135          
    136          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)

   \                                 In section .text, align 2, keep-with-next
    137          int dm_msg_proc_thing_service_property_set(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    138                  _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    139          {
   \                     dm_msg_proc_thing_service_property_set: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB092             SUB      SP,SP,#+72
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4617             MOV      R7,R2
   \        0xA   0x461D             MOV      R5,R3
    140              int res = 0, devid = 0;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x9002             STR      R0,[SP, #+8]
    141              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \       0x10   0xA80C             ADD      R0,SP,#+48
   \       0x12   0x2118             MOVS     R1,#+24
   \       0x14   0x....'....        BL       __aeabi_memclr4
    142              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x18   0xA803             ADD      R0,SP,#+12
   \       0x1A   0x2124             MOVS     R1,#+36
   \       0x1C   0x....'....        BL       __aeabi_memclr4
    143          
    144              dm_log_info(DM_URI_THING_SERVICE_PROPERTY_SET);
    145          
    146              /* Request */
    147              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    148                                          device_name);
   \       0x20   0x6820             LDR      R0,[R4, #+0]
   \       0x22   0x....'....        BL       strlen
   \       0x26   0xA903             ADD      R1,SP,#+12
   \       0x28   0x9101             STR      R1,[SP, #+4]
   \       0x2A   0xA90C             ADD      R1,SP,#+48
   \       0x2C   0x9100             STR      R1,[SP, #+0]
   \       0x2E   0x2304             MOVS     R3,#+4
   \       0x30   0x2202             MOVS     R2,#+2
   \       0x32   0x4601             MOV      R1,R0
   \       0x34   0x6820             LDR      R0,[R4, #+0]
   \       0x36   0x....'....        BL       dm_msg_uri_parse_pkdn
    149              if (res < SUCCESS_RETURN) {
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD430             BMI.N    ??dm_msg_proc_thing_service_property_set_0
    150                  return res;
    151              }
    152          
    153              res = dm_mgr_search_device_by_pkdn(product_key, device_name, &devid);
   \       0x3E   0xAA02             ADD      R2,SP,#+8
   \       0x40   0xA903             ADD      R1,SP,#+12
   \       0x42   0xA80C             ADD      R0,SP,#+48
   \       0x44   0x....'....        BL       dm_mgr_search_device_by_pkdn
    154              if (res < SUCCESS_RETURN) {
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD429             BMI.N    ??dm_msg_proc_thing_service_property_set_0
    155                  return res;
    156              }
    157          
    158              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
   \       0x4C   0x463A             MOV      R2,R7
   \       0x4E   0x68A1             LDR      R1,[R4, #+8]
   \       0x50   0x6860             LDR      R0,[R4, #+4]
   \       0x52   0x....'....        BL       dm_msg_request_parse
    159              if (res < SUCCESS_RETURN) {
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD422             BMI.N    ??dm_msg_proc_thing_service_property_set_0
    160                  return res ;
    161              }
    162          
    163              /* Operation */
    164              res = dm_msg_property_set(devid, request);
   \       0x5A   0x4639             MOV      R1,R7
   \       0x5C   0x9802             LDR      R0,[SP, #+8]
   \       0x5E   0x....'....        BL       dm_msg_property_set
   \       0x62   0x4604             MOV      R4,R0
    165          
    166              /* Response */
    167              response->service_prefix = DM_URI_SYS_PREFIX;
   \       0x64   0x....             LDR.N    R0,??DataTable3
   \       0x66   0x6028             STR      R0,[R5, #+0]
    168              response->service_name = dest->uri_name;
   \       0x68   0x6830             LDR      R0,[R6, #+0]
   \       0x6A   0x6068             STR      R0,[R5, #+4]
    169              memcpy(response->product_key, product_key, strlen(product_key));
   \       0x6C   0xA80C             ADD      R0,SP,#+48
   \       0x6E   0x....'....        BL       strlen
   \       0x72   0x4602             MOV      R2,R0
   \       0x74   0xA90C             ADD      R1,SP,#+48
   \       0x76   0xF105 0x0008      ADD      R0,R5,#+8
   \       0x7A   0x....'....        BL       __aeabi_memcpy4
    170              memcpy(response->device_name, device_name, strlen(device_name));
   \       0x7E   0xA803             ADD      R0,SP,#+12
   \       0x80   0x....'....        BL       strlen
   \       0x84   0x4602             MOV      R2,R0
   \       0x86   0xA903             ADD      R1,SP,#+12
   \       0x88   0xF105 0x001D      ADD      R0,R5,#+29
   \       0x8C   0x....'....        BL       __aeabi_memcpy
    171              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
   \       0x90   0x2C00             CMP      R4,#+0
   \       0x92   0xD101             BNE.N    ??dm_msg_proc_thing_service_property_set_1
   \       0x94   0x20C8             MOVS     R0,#+200
   \       0x96   0xE001             B.N      ??dm_msg_proc_thing_service_property_set_2
   \                     ??dm_msg_proc_thing_service_property_set_1: (+1)
   \       0x98   0xF44F 0x70C8      MOV      R0,#+400
   \                     ??dm_msg_proc_thing_service_property_set_2: (+1)
   \       0x9C   0x6428             STR      R0,[R5, #+64]
    172          
    173              return SUCCESS_RETURN;
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??dm_msg_proc_thing_service_property_set_0: (+1)
   \       0xA0   0xB013             ADD      SP,SP,#+76
   \       0xA2   0xBDF0             POP      {R4-R7,PC}       ;; return
    174          }
    175          

   \                                 In section .text, align 2, keep-with-next
    176          int dm_msg_proc_thing_service_property_get(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    177                  _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response,
    178                  _OU_ unsigned char **data, int *data_len)
    179          {
   \                     dm_msg_proc_thing_service_property_get: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB092             SUB      SP,SP,#+72
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x4615             MOV      R5,R2
    180              int res = 0, devid = 0;
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x9002             STR      R0,[SP, #+8]
    181              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0xC   0xA803             ADD      R0,SP,#+12
   \        0xE   0x2118             MOVS     R1,#+24
   \       0x10   0x....'....        BL       __aeabi_memclr4
    182              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x14   0xA809             ADD      R0,SP,#+36
   \       0x16   0x2124             MOVS     R1,#+36
   \       0x18   0x....'....        BL       __aeabi_memclr4
    183          
    184              dm_log_info(DM_URI_THING_SERVICE_PROPERTY_GET);
    185          
    186              /* Request */
    187              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    188                                          device_name);
   \       0x1C   0x6820             LDR      R0,[R4, #+0]
   \       0x1E   0x....'....        BL       strlen
   \       0x22   0x4601             MOV      R1,R0
   \       0x24   0xA809             ADD      R0,SP,#+36
   \       0x26   0x9001             STR      R0,[SP, #+4]
   \       0x28   0xA803             ADD      R0,SP,#+12
   \       0x2A   0x9000             STR      R0,[SP, #+0]
   \       0x2C   0x2304             MOVS     R3,#+4
   \       0x2E   0x2202             MOVS     R2,#+2
   \       0x30   0x6820             LDR      R0,[R4, #+0]
   \       0x32   0x....'....        BL       dm_msg_uri_parse_pkdn
    189              if (res < SUCCESS_RETURN) {
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD412             BMI.N    ??dm_msg_proc_thing_service_property_get_0
    190                  return res;
    191              }
    192          
    193              res = dm_mgr_search_device_by_pkdn(product_key, device_name, &devid);
   \       0x3A   0xAA02             ADD      R2,SP,#+8
   \       0x3C   0xA909             ADD      R1,SP,#+36
   \       0x3E   0xA803             ADD      R0,SP,#+12
   \       0x40   0x....'....        BL       dm_mgr_search_device_by_pkdn
    194              if (res < SUCCESS_RETURN) {
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD40B             BMI.N    ??dm_msg_proc_thing_service_property_get_0
    195                  return res;
    196              }
    197          
    198              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
   \       0x48   0x462A             MOV      R2,R5
   \       0x4A   0x68A1             LDR      R1,[R4, #+8]
   \       0x4C   0x6860             LDR      R0,[R4, #+4]
   \       0x4E   0x....'....        BL       dm_msg_request_parse
    199              if (res < SUCCESS_RETURN) {
   \       0x52   0x2800             CMP      R0,#+0
   \       0x54   0xD404             BMI.N    ??dm_msg_proc_thing_service_property_get_0
    200                  return res ;
    201              }
    202          
    203              /* Operation */
    204          #ifndef DEPRECATED_LINKKIT
    205              res = dm_msg_property_get(devid, request, source->context);
    206          #else
    207              res = dm_msg_property_get(devid, request, (char **)data, data_len);
    208          #endif
    209          
    210          #ifdef DEPRECATED_LINKKIT
    211              /* Response */
    212              response->service_prefix = DM_URI_SYS_PREFIX;
    213              response->service_name = dest->uri_name;
    214              memcpy(response->product_key, product_key, strlen(product_key));
    215              memcpy(response->device_name, device_name, strlen(device_name));
    216              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    217          
    218              if (res != SUCCESS_RETURN) {
    219                  *data = DM_malloc(strlen("{}") + 1);
    220                  if (*data == NULL) {
    221                      return FAIL_RETURN;
    222                  }
    223                  memset(*data, 0, strlen("{}") + 1);
    224                  memcpy(*data, "{}", strlen("{}"));
    225          
    226                  *data_len = strlen((char *)*data);
    227              }
    228          #endif
    229          
    230              if (res != SUCCESS_RETURN) {
    231                  dm_log_err("DM Property Get Failed");
    232              }
    233          
    234              return res;
   \       0x56   0x68E2             LDR      R2,[R4, #+12]
   \       0x58   0x4629             MOV      R1,R5
   \       0x5A   0x9802             LDR      R0,[SP, #+8]
   \       0x5C   0x....'....        BL       dm_msg_property_get
   \                     ??dm_msg_proc_thing_service_property_get_0: (+1)
   \       0x60   0xB013             ADD      SP,SP,#+76
   \       0x62   0xBD30             POP      {R4,R5,PC}       ;; return
    235          }
    236          

   \                                 In section .text, align 2, keep-with-next
    237          int dm_msg_proc_thing_service_property_post(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    238                  _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    239          {
   \                     dm_msg_proc_thing_service_property_post: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB091             SUB      SP,SP,#+68
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4617             MOV      R7,R2
   \        0xA   0x461D             MOV      R5,R3
    240              int res = 0;
    241              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0xC   0xA802             ADD      R0,SP,#+8
   \        0xE   0x2118             MOVS     R1,#+24
   \       0x10   0x....'....        BL       __aeabi_memclr4
    242              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x14   0xA808             ADD      R0,SP,#+32
   \       0x16   0x2124             MOVS     R1,#+36
   \       0x18   0x....'....        BL       __aeabi_memclr4
    243          
    244              dm_log_info(DM_URI_THING_EVENT_PROPERTY_POST);
    245          
    246              /* Request */
    247              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    248                                          device_name);
    249              if (res != SUCCESS_RETURN) {
   \       0x1C   0x6820             LDR      R0,[R4, #+0]
   \       0x1E   0x....'....        BL       strlen
   \       0x22   0xA908             ADD      R1,SP,#+32
   \       0x24   0x9101             STR      R1,[SP, #+4]
   \       0x26   0xA902             ADD      R1,SP,#+8
   \       0x28   0x9100             STR      R1,[SP, #+0]
   \       0x2A   0x2304             MOVS     R3,#+4
   \       0x2C   0x2202             MOVS     R2,#+2
   \       0x2E   0x4601             MOV      R1,R0
   \       0x30   0x6820             LDR      R0,[R4, #+0]
   \       0x32   0x....'....        BL       dm_msg_uri_parse_pkdn
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD002             BEQ.N    ??dm_msg_proc_thing_service_property_post_0
    250                  return FAIL_RETURN;
   \       0x3A   0xF04F 0x30FF      MOV      R0,#-1
   \       0x3E   0xE023             B.N      ??dm_msg_proc_thing_service_property_post_1
    251              }
    252          
    253              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
   \                     ??dm_msg_proc_thing_service_property_post_0: (+1)
   \       0x40   0x463A             MOV      R2,R7
   \       0x42   0x68A1             LDR      R1,[R4, #+8]
   \       0x44   0x6860             LDR      R0,[R4, #+4]
   \       0x46   0x....'....        BL       dm_msg_request_parse
   \       0x4A   0x4604             MOV      R4,R0
    254          
    255              /* Response */
    256              response->service_prefix = DM_URI_SYS_PREFIX;
   \       0x4C   0x....             LDR.N    R0,??DataTable3
   \       0x4E   0x6028             STR      R0,[R5, #+0]
    257              response->service_name = dest->uri_name;
   \       0x50   0x6830             LDR      R0,[R6, #+0]
   \       0x52   0x6068             STR      R0,[R5, #+4]
    258              memcpy(response->product_key, product_key, strlen(product_key));
   \       0x54   0xA802             ADD      R0,SP,#+8
   \       0x56   0x....'....        BL       strlen
   \       0x5A   0x4602             MOV      R2,R0
   \       0x5C   0xA902             ADD      R1,SP,#+8
   \       0x5E   0xF105 0x0008      ADD      R0,R5,#+8
   \       0x62   0x....'....        BL       __aeabi_memcpy4
    259              memcpy(response->device_name, device_name, strlen(device_name));
   \       0x66   0xA808             ADD      R0,SP,#+32
   \       0x68   0x....'....        BL       strlen
   \       0x6C   0x4602             MOV      R2,R0
   \       0x6E   0xA908             ADD      R1,SP,#+32
   \       0x70   0xF105 0x001D      ADD      R0,R5,#+29
   \       0x74   0x....'....        BL       __aeabi_memcpy
    260              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
   \       0x78   0x2C00             CMP      R4,#+0
   \       0x7A   0xD101             BNE.N    ??dm_msg_proc_thing_service_property_post_2
   \       0x7C   0x20C8             MOVS     R0,#+200
   \       0x7E   0xE001             B.N      ??dm_msg_proc_thing_service_property_post_3
   \                     ??dm_msg_proc_thing_service_property_post_2: (+1)
   \       0x80   0xF44F 0x70C8      MOV      R0,#+400
   \                     ??dm_msg_proc_thing_service_property_post_3: (+1)
   \       0x84   0x6428             STR      R0,[R5, #+64]
    261          
    262              return SUCCESS_RETURN;
   \       0x86   0x2000             MOVS     R0,#+0
   \                     ??dm_msg_proc_thing_service_property_post_1: (+1)
   \       0x88   0xB011             ADD      SP,SP,#+68
   \       0x8A   0xBDF0             POP      {R4-R7,PC}       ;; return
    263          }
    264          

   \                                 In section .text, align 2, keep-with-next
    265          int dm_msg_proc_thing_service_request(_IN_ dm_msg_source_t *source)
    266          {
   \                     dm_msg_proc_thing_service_request: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB0B3             SUB      SP,SP,#+204
   \        0x4   0x4604             MOV      R4,R0
    267              int res = 0, serviceid_pos = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9002             STR      R0,[SP, #+8]
    268              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0xA   0xA803             ADD      R0,SP,#+12
   \        0xC   0x2118             MOVS     R1,#+24
   \        0xE   0x....'....        BL       __aeabi_memclr4
    269              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x12   0xA82A             ADD      R0,SP,#+168
   \       0x14   0x2124             MOVS     R1,#+36
   \       0x16   0x....'....        BL       __aeabi_memclr4
    270              dm_msg_request_payload_t request;
    271          
    272              memset(&request, 0, sizeof(dm_msg_request_payload_t));
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2180             MOVS     R1,#+128
   \       0x1E   0xA80A             ADD      R0,SP,#+40
   \       0x20   0x....'....        BL       __aeabi_memset4
    273          
    274              res = dm_utils_memtok((char *)source->uri, strlen(source->uri), DM_URI_SERVICE_DELIMITER, 6, &serviceid_pos);
    275              if (res != SUCCESS_RETURN) {
   \       0x24   0x6820             LDR      R0,[R4, #+0]
   \       0x26   0x....'....        BL       strlen
   \       0x2A   0x4601             MOV      R1,R0
   \       0x2C   0xA802             ADD      R0,SP,#+8
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0x2306             MOVS     R3,#+6
   \       0x32   0x222F             MOVS     R2,#+47
   \       0x34   0x6820             LDR      R0,[R4, #+0]
   \       0x36   0x....'....        BL       dm_utils_memtok
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD002             BEQ.N    ??dm_msg_proc_thing_service_request_0
    276                  return FAIL_RETURN;
   \       0x3E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x42   0xE02E             B.N      ??dm_msg_proc_thing_service_request_1
    277              }
    278              dm_log_info("Service Identifier: %.*s", (int)(strlen(source->uri) - serviceid_pos - 1),
    279                          source->uri + serviceid_pos + 1);
    280          
    281              /* Parse Product Key And Device Name */
    282              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    283                                          device_name);
    284              if (res != SUCCESS_RETURN) {
   \                     ??dm_msg_proc_thing_service_request_0: (+1)
   \       0x44   0x6820             LDR      R0,[R4, #+0]
   \       0x46   0x....'....        BL       strlen
   \       0x4A   0xA92A             ADD      R1,SP,#+168
   \       0x4C   0x9101             STR      R1,[SP, #+4]
   \       0x4E   0xA903             ADD      R1,SP,#+12
   \       0x50   0x9100             STR      R1,[SP, #+0]
   \       0x52   0x2304             MOVS     R3,#+4
   \       0x54   0x2202             MOVS     R2,#+2
   \       0x56   0x4601             MOV      R1,R0
   \       0x58   0x6820             LDR      R0,[R4, #+0]
   \       0x5A   0x....'....        BL       dm_msg_uri_parse_pkdn
   \       0x5E   0x2800             CMP      R0,#+0
   \       0x60   0xD002             BEQ.N    ??dm_msg_proc_thing_service_request_2
    285                  return FAIL_RETURN;
   \       0x62   0xF04F 0x30FF      MOV      R0,#-1
   \       0x66   0xE01C             B.N      ??dm_msg_proc_thing_service_request_1
    286              }
    287          
    288              /* Request */
    289              res = dm_msg_request_parse((char *)source->payload, source->payload_len, &request);
    290              if (res != SUCCESS_RETURN) {
   \                     ??dm_msg_proc_thing_service_request_2: (+1)
   \       0x68   0xAA0A             ADD      R2,SP,#+40
   \       0x6A   0x68A1             LDR      R1,[R4, #+8]
   \       0x6C   0x6860             LDR      R0,[R4, #+4]
   \       0x6E   0x....'....        BL       dm_msg_request_parse
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD002             BEQ.N    ??dm_msg_proc_thing_service_request_3
    291                  return FAIL_RETURN;
   \       0x76   0xF04F 0x30FF      MOV      R0,#-1
   \       0x7A   0xE012             B.N      ??dm_msg_proc_thing_service_request_1
    292              }
    293          
    294              /* Operation */
    295              return dm_msg_thing_service_request(product_key, device_name, (char *)source->uri + serviceid_pos + 1,
    296                                                  strlen(source->uri) - serviceid_pos - 1, &request, source->context);
   \                     ??dm_msg_proc_thing_service_request_3: (+1)
   \       0x7C   0x6820             LDR      R0,[R4, #+0]
   \       0x7E   0x....'....        BL       strlen
   \       0x82   0x4603             MOV      R3,R0
   \       0x84   0x68E0             LDR      R0,[R4, #+12]
   \       0x86   0x9001             STR      R0,[SP, #+4]
   \       0x88   0xA80A             ADD      R0,SP,#+40
   \       0x8A   0x9000             STR      R0,[SP, #+0]
   \       0x8C   0x9802             LDR      R0,[SP, #+8]
   \       0x8E   0x1A1B             SUBS     R3,R3,R0
   \       0x90   0x1E5B             SUBS     R3,R3,#+1
   \       0x92   0x6820             LDR      R0,[R4, #+0]
   \       0x94   0x9902             LDR      R1,[SP, #+8]
   \       0x96   0x4408             ADD      R0,R0,R1
   \       0x98   0x1C42             ADDS     R2,R0,#+1
   \       0x9A   0xA92A             ADD      R1,SP,#+168
   \       0x9C   0xA803             ADD      R0,SP,#+12
   \       0x9E   0x....'....        BL       dm_msg_thing_service_request
   \                     ??dm_msg_proc_thing_service_request_1: (+1)
   \       0xA2   0xB034             ADD      SP,SP,#+208
   \       0xA4   0xBD10             POP      {R4,PC}          ;; return
    297          }
    298          

   \                                 In section .text, align 2, keep-with-next
    299          int dm_msg_proc_thing_event_post_reply(_IN_ dm_msg_source_t *source)
    300          {
   \                     dm_msg_proc_thing_event_post_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A6             SUB      SP,SP,#+152
   \        0x4   0x4604             MOV      R4,R0
    301              int res = 0, eventid_start_pos = 0, eventid_end_pos = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9001             STR      R0,[SP, #+4]
   \        0xA   0x9002             STR      R0,[SP, #+8]
    302              dm_msg_response_payload_t response;
    303          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    304              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0xC   0xA803             ADD      R0,SP,#+12
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x460A             MOV      R2,R1
   \       0x12   0x460B             MOV      R3,R1
   \       0x14   0xE880 0x000E      STM      R0,{R1-R3}
    305          #endif
    306          
    307              res = dm_utils_memtok((char *)source->uri, strlen(source->uri), DM_URI_SERVICE_DELIMITER, 6 + DM_URI_OFFSET,
    308                                    &eventid_start_pos);
    309              if (res != SUCCESS_RETURN) {
   \       0x18   0x6820             LDR      R0,[R4, #+0]
   \       0x1A   0x....'....        BL       strlen
   \       0x1E   0x4601             MOV      R1,R0
   \       0x20   0xA801             ADD      R0,SP,#+4
   \       0x22   0x9000             STR      R0,[SP, #+0]
   \       0x24   0x2306             MOVS     R3,#+6
   \       0x26   0x222F             MOVS     R2,#+47
   \       0x28   0x6820             LDR      R0,[R4, #+0]
   \       0x2A   0x....'....        BL       dm_utils_memtok
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD113             BNE.N    ??dm_msg_proc_thing_event_post_reply_0
    310                  return FAIL_RETURN;
    311              }
    312          
    313              res = dm_utils_memtok((char *)source->uri, strlen(source->uri), DM_URI_SERVICE_DELIMITER, 7 + DM_URI_OFFSET,
    314                                    &eventid_end_pos);
    315              if (res != SUCCESS_RETURN) {
   \       0x32   0x6820             LDR      R0,[R4, #+0]
   \       0x34   0x....'....        BL       strlen
   \       0x38   0xA902             ADD      R1,SP,#+8
   \       0x3A   0x9100             STR      R1,[SP, #+0]
   \       0x3C   0x2307             MOVS     R3,#+7
   \       0x3E   0x222F             MOVS     R2,#+47
   \       0x40   0x4601             MOV      R1,R0
   \       0x42   0x6820             LDR      R0,[R4, #+0]
   \       0x44   0x....'....        BL       dm_utils_memtok
   \       0x48   0x2800             CMP      R0,#+0
   \       0x4A   0xD106             BNE.N    ??dm_msg_proc_thing_event_post_reply_0
    316                  return FAIL_RETURN;
    317              }
    318              dm_log_info("Event Id: %.*s", eventid_end_pos - eventid_start_pos - 1, source->uri + eventid_start_pos + 1);
    319          
    320              /* Response */
    321              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    322              if (res != SUCCESS_RETURN) {
   \       0x4C   0xAA06             ADD      R2,SP,#+24
   \       0x4E   0x68A1             LDR      R1,[R4, #+8]
   \       0x50   0x6860             LDR      R0,[R4, #+4]
   \       0x52   0x....'....        BL       dm_msg_response_parse
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD002             BEQ.N    ??dm_msg_proc_thing_event_post_reply_1
    323                  return FAIL_RETURN;
   \                     ??dm_msg_proc_thing_event_post_reply_0: (+1)
   \       0x5A   0xF04F 0x30FF      MOV      R0,#-1
   \       0x5E   0xE02B             B.N      ??dm_msg_proc_thing_event_post_reply_2
    324              }
    325          
    326              /* Operation */
    327              if ((strlen("property") == eventid_end_pos - eventid_start_pos - 1) &&
    328                  (memcmp("property", source->uri + eventid_start_pos + 1, eventid_end_pos - eventid_start_pos - 1) == 0)) {
   \                     ??dm_msg_proc_thing_event_post_reply_1: (+1)
   \       0x60   0x9902             LDR      R1,[SP, #+8]
   \       0x62   0x9801             LDR      R0,[SP, #+4]
   \       0x64   0x1A09             SUBS     R1,R1,R0
   \       0x66   0x1E49             SUBS     R1,R1,#+1
   \       0x68   0x2908             CMP      R1,#+8
   \       0x6A   0xD10F             BNE.N    ??dm_msg_proc_thing_event_post_reply_3
   \       0x6C   0x9A02             LDR      R2,[SP, #+8]
   \       0x6E   0x1A12             SUBS     R2,R2,R0
   \       0x70   0x1E52             SUBS     R2,R2,#+1
   \       0x72   0x6820             LDR      R0,[R4, #+0]
   \       0x74   0x9901             LDR      R1,[SP, #+4]
   \       0x76   0x4408             ADD      R0,R0,R1
   \       0x78   0x1C41             ADDS     R1,R0,#+1
   \       0x7A   0x....             LDR.N    R0,??DataTable3_1
   \       0x7C   0x....'....        BL       memcmp
   \       0x80   0x2800             CMP      R0,#+0
   \       0x82   0xD103             BNE.N    ??dm_msg_proc_thing_event_post_reply_3
    329                  dm_msg_thing_event_property_post_reply(&response);
   \       0x84   0xA806             ADD      R0,SP,#+24
   \       0x86   0x....'....        BL       dm_msg_thing_event_property_post_reply
   \       0x8A   0xE00A             B.N      ??dm_msg_proc_thing_event_post_reply_4
    330              } else {
    331                  dm_msg_thing_event_post_reply((char *)source->uri + eventid_start_pos + 1, eventid_end_pos - eventid_start_pos - 1,
    332                                                &response);
   \                     ??dm_msg_proc_thing_event_post_reply_3: (+1)
   \       0x8C   0xAA06             ADD      R2,SP,#+24
   \       0x8E   0x9902             LDR      R1,[SP, #+8]
   \       0x90   0x9801             LDR      R0,[SP, #+4]
   \       0x92   0x1A09             SUBS     R1,R1,R0
   \       0x94   0x1E49             SUBS     R1,R1,#+1
   \       0x96   0x6820             LDR      R0,[R4, #+0]
   \       0x98   0x9B01             LDR      R3,[SP, #+4]
   \       0x9A   0x4418             ADD      R0,R0,R3
   \       0x9C   0x1C40             ADDS     R0,R0,#+1
   \       0x9E   0x....'....        BL       dm_msg_thing_event_post_reply
    333              }
    334          
    335              /* Remove Message From Cache */
    336          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    337              memcpy(int_id, response.id.value, response.id.value_length);
   \                     ??dm_msg_proc_thing_event_post_reply_4: (+1)
   \       0xA2   0x9A08             LDR      R2,[SP, #+32]
   \       0xA4   0x9907             LDR      R1,[SP, #+28]
   \       0xA6   0xA803             ADD      R0,SP,#+12
   \       0xA8   0x....'....        BL       __aeabi_memcpy
    338              dm_msg_cache_remove(atoi(int_id));
   \       0xAC   0xA803             ADD      R0,SP,#+12
   \       0xAE   0x....'....        BL       atoi
   \       0xB2   0x....'....        BL       dm_msg_cache_remove
    339          #endif
    340              return SUCCESS_RETURN;
   \       0xB6   0x2000             MOVS     R0,#+0
   \                     ??dm_msg_proc_thing_event_post_reply_2: (+1)
   \       0xB8   0xB026             ADD      SP,SP,#+152
   \       0xBA   0xBD10             POP      {R4,PC}          ;; return
    341          }
    342          
    343          #ifdef DEVICE_MODEL_SHADOW

   \                                 In section .text, align 2, keep-with-next
    344          int dm_msg_proc_thing_property_desired_get_reply(_IN_ dm_msg_source_t *source)
    345          {
   \                     dm_msg_proc_thing_property_desired_get_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A4             SUB      SP,SP,#+144
    346              int res = 0;
    347              dm_msg_response_payload_t response;
    348          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    349              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x4613             MOV      R3,R2
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0xE881 0x001C      STM      R1,{R2-R4}
    350          #endif
    351          
    352              dm_log_info(DM_URI_THING_PROPERTY_DESIRED_GET_REPLY);
    353          
    354              /* Response */
    355              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    356              if (res != SUCCESS_RETURN) {
   \       0x10   0xAA04             ADD      R2,SP,#+16
   \       0x12   0x6881             LDR      R1,[R0, #+8]
   \       0x14   0x6840             LDR      R0,[R0, #+4]
   \       0x16   0x....'....        BL       dm_msg_response_parse
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD002             BEQ.N    ??dm_msg_proc_thing_property_desired_get_reply_0
    357                  return FAIL_RETURN;
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE00D             B.N      ??dm_msg_proc_thing_property_desired_get_reply_1
    358              }
    359          
    360              /* Operation */
    361              res = dm_msg_thing_property_desired_get_reply(&response);
   \                     ??dm_msg_proc_thing_property_desired_get_reply_0: (+1)
   \       0x24   0xA804             ADD      R0,SP,#+16
   \       0x26   0x....'....        BL       dm_msg_thing_property_desired_get_reply
    362          
    363              /* Remove Message From Cache */
    364          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    365              memcpy(int_id, response.id.value, response.id.value_length);
   \       0x2A   0x9A06             LDR      R2,[SP, #+24]
   \       0x2C   0x9905             LDR      R1,[SP, #+20]
   \       0x2E   0x4668             MOV      R0,SP
   \       0x30   0x....'....        BL       __aeabi_memcpy
    366              dm_msg_cache_remove(atoi(int_id));
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....'....        BL       atoi
   \       0x3A   0x....'....        BL       dm_msg_cache_remove
    367          #endif
    368              return SUCCESS_RETURN;
   \       0x3E   0x4620             MOV      R0,R4
   \                     ??dm_msg_proc_thing_property_desired_get_reply_1: (+1)
   \       0x40   0xB024             ADD      SP,SP,#+144
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
    369          }
    370          

   \                                 In section .text, align 2, keep-with-next
    371          int dm_msg_proc_thing_property_desired_delete_reply(_IN_ dm_msg_source_t *source)
    372          {
   \                     dm_msg_proc_thing_property_desired_delete_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A4             SUB      SP,SP,#+144
    373              int res = 0;
    374              dm_msg_response_payload_t response;
    375          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    376              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x4613             MOV      R3,R2
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0xE881 0x001C      STM      R1,{R2-R4}
    377          #endif
    378          
    379              dm_log_info(DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY);
    380          
    381              /* Response */
    382              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    383              if (res != SUCCESS_RETURN) {
   \       0x10   0xAA04             ADD      R2,SP,#+16
   \       0x12   0x6881             LDR      R1,[R0, #+8]
   \       0x14   0x6840             LDR      R0,[R0, #+4]
   \       0x16   0x....'....        BL       dm_msg_response_parse
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD002             BEQ.N    ??dm_msg_proc_thing_property_desired_delete_rep_0
    384                  return FAIL_RETURN;
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE00D             B.N      ??dm_msg_proc_thing_property_desired_delete_rep_1
    385              }
    386          
    387              /* Operation */
    388              res = dm_msg_thing_property_desired_delete_reply(&response);
   \                     ??dm_msg_proc_thing_property_desired_delete_rep_0: (+1)
   \       0x24   0xA804             ADD      R0,SP,#+16
   \       0x26   0x....'....        BL       dm_msg_thing_property_desired_delete_reply
    389          
    390              /* Remove Message From Cache */
    391          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    392              memcpy(int_id, response.id.value, response.id.value_length);
   \       0x2A   0x9A06             LDR      R2,[SP, #+24]
   \       0x2C   0x9905             LDR      R1,[SP, #+20]
   \       0x2E   0x4668             MOV      R0,SP
   \       0x30   0x....'....        BL       __aeabi_memcpy
    393              dm_msg_cache_remove(atoi(int_id));
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....'....        BL       atoi
   \       0x3A   0x....'....        BL       dm_msg_cache_remove
    394          #endif
    395              return SUCCESS_RETURN;
   \       0x3E   0x4620             MOV      R0,R4
   \                     ??dm_msg_proc_thing_property_desired_delete_rep_1: (+1)
   \       0x40   0xB024             ADD      SP,SP,#+144
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
    396          }
    397          #endif
    398          

   \                                 In section .text, align 2, keep-with-next
    399          int dm_msg_proc_thing_deviceinfo_update_reply(_IN_ dm_msg_source_t *source)
    400          {
   \                     dm_msg_proc_thing_deviceinfo_update_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A4             SUB      SP,SP,#+144
    401              int res = 0;
    402              dm_msg_response_payload_t response;
    403          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    404              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x4613             MOV      R3,R2
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0xE881 0x001C      STM      R1,{R2-R4}
    405          #endif
    406          
    407              dm_log_info(DM_URI_THING_DEVICEINFO_UPDATE_REPLY);
    408          
    409              /* Response */
    410              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    411              if (res != SUCCESS_RETURN) {
   \       0x10   0xAA04             ADD      R2,SP,#+16
   \       0x12   0x6881             LDR      R1,[R0, #+8]
   \       0x14   0x6840             LDR      R0,[R0, #+4]
   \       0x16   0x....'....        BL       dm_msg_response_parse
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD002             BEQ.N    ??dm_msg_proc_thing_deviceinfo_update_reply_0
    412                  return FAIL_RETURN;
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE00D             B.N      ??dm_msg_proc_thing_deviceinfo_update_reply_1
    413              }
    414          
    415              /* Operation */
    416              dm_msg_thing_deviceinfo_update_reply(&response);
   \                     ??dm_msg_proc_thing_deviceinfo_update_reply_0: (+1)
   \       0x24   0xA804             ADD      R0,SP,#+16
   \       0x26   0x....'....        BL       dm_msg_thing_deviceinfo_update_reply
    417          
    418              /* Remove Message From Cache */
    419          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    420              memcpy(int_id, response.id.value, response.id.value_length);
   \       0x2A   0x9A06             LDR      R2,[SP, #+24]
   \       0x2C   0x9905             LDR      R1,[SP, #+20]
   \       0x2E   0x4668             MOV      R0,SP
   \       0x30   0x....'....        BL       __aeabi_memcpy
    421              dm_msg_cache_remove(atoi(int_id));
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....'....        BL       atoi
   \       0x3A   0x....'....        BL       dm_msg_cache_remove
    422          #endif
    423              return SUCCESS_RETURN;
   \       0x3E   0x4620             MOV      R0,R4
   \                     ??dm_msg_proc_thing_deviceinfo_update_reply_1: (+1)
   \       0x40   0xB024             ADD      SP,SP,#+144
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
    424          }
    425          

   \                                 In section .text, align 2, keep-with-next
    426          int dm_msg_proc_thing_deviceinfo_delete_reply(_IN_ dm_msg_source_t *source)
    427          {
   \                     dm_msg_proc_thing_deviceinfo_delete_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A4             SUB      SP,SP,#+144
    428              int res = 0;
    429              dm_msg_response_payload_t response;
    430          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    431              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x4613             MOV      R3,R2
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0xE881 0x001C      STM      R1,{R2-R4}
    432          #endif
    433          
    434              dm_log_info(DM_URI_THING_DEVICEINFO_DELETE_REPLY);
    435          
    436              /* Response */
    437              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    438              if (res != SUCCESS_RETURN) {
   \       0x10   0xAA04             ADD      R2,SP,#+16
   \       0x12   0x6881             LDR      R1,[R0, #+8]
   \       0x14   0x6840             LDR      R0,[R0, #+4]
   \       0x16   0x....'....        BL       dm_msg_response_parse
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD002             BEQ.N    ??dm_msg_proc_thing_deviceinfo_delete_reply_0
    439                  return FAIL_RETURN;
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE00D             B.N      ??dm_msg_proc_thing_deviceinfo_delete_reply_1
    440              }
    441          
    442              /* Operation */
    443              dm_msg_thing_deviceinfo_delete_reply(&response);
   \                     ??dm_msg_proc_thing_deviceinfo_delete_reply_0: (+1)
   \       0x24   0xA804             ADD      R0,SP,#+16
   \       0x26   0x....'....        BL       dm_msg_thing_deviceinfo_delete_reply
    444          
    445              /* Remove Message From Cache */
    446          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    447              memcpy(int_id, response.id.value, response.id.value_length);
   \       0x2A   0x9A06             LDR      R2,[SP, #+24]
   \       0x2C   0x9905             LDR      R1,[SP, #+20]
   \       0x2E   0x4668             MOV      R0,SP
   \       0x30   0x....'....        BL       __aeabi_memcpy
    448              dm_msg_cache_remove(atoi(int_id));
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....'....        BL       atoi
   \       0x3A   0x....'....        BL       dm_msg_cache_remove
    449          #endif
    450              return SUCCESS_RETURN;
   \       0x3E   0x4620             MOV      R0,R4
   \                     ??dm_msg_proc_thing_deviceinfo_delete_reply_1: (+1)
   \       0x40   0xB024             ADD      SP,SP,#+144
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
    451          }
    452          

   \                                 In section .text, align 2, keep-with-next
    453          int dm_msg_proc_thing_dynamictsl_get_reply(_IN_ dm_msg_source_t *source)
    454          {
   \                     dm_msg_proc_thing_dynamictsl_get_reply: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB0A4             SUB      SP,SP,#+144
    455              int res = 0;
    456              dm_msg_response_payload_t response;
    457          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    458              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
   \        0x4   0x4669             MOV      R1,SP
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x4613             MOV      R3,R2
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0xE881 0x001C      STM      R1,{R2-R4}
    459          #endif
    460          
    461              dm_log_info(DM_URI_THING_DYNAMICTSL_GET_REPLY);
    462          
    463              /* Response */
    464              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    465              if (res != SUCCESS_RETURN) {
   \       0x10   0xAA04             ADD      R2,SP,#+16
   \       0x12   0x6881             LDR      R1,[R0, #+8]
   \       0x14   0x6840             LDR      R0,[R0, #+4]
   \       0x16   0x....'....        BL       dm_msg_response_parse
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD002             BEQ.N    ??dm_msg_proc_thing_dynamictsl_get_reply_0
    466                  return FAIL_RETURN;
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE00D             B.N      ??dm_msg_proc_thing_dynamictsl_get_reply_1
    467              }
    468          
    469              /* Operation */
    470              dm_msg_thing_dynamictsl_get_reply(&response);
   \                     ??dm_msg_proc_thing_dynamictsl_get_reply_0: (+1)
   \       0x24   0xA804             ADD      R0,SP,#+16
   \       0x26   0x....'....        BL       dm_msg_thing_dynamictsl_get_reply
    471          
    472              /* Remove Message From Cache */
    473          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    474              memcpy(int_id, response.id.value, response.id.value_length);
   \       0x2A   0x9A06             LDR      R2,[SP, #+24]
   \       0x2C   0x9905             LDR      R1,[SP, #+20]
   \       0x2E   0x4668             MOV      R0,SP
   \       0x30   0x....'....        BL       __aeabi_memcpy
    475              dm_msg_cache_remove(atoi(int_id));
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....'....        BL       atoi
   \       0x3A   0x....'....        BL       dm_msg_cache_remove
    476          #endif
    477              return SUCCESS_RETURN;
   \       0x3E   0x4620             MOV      R0,R4
   \                     ??dm_msg_proc_thing_dynamictsl_get_reply_1: (+1)
   \       0x40   0xB024             ADD      SP,SP,#+144
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
    478          }
    479          

   \                                 In section .text, align 2, keep-with-next
    480          int dm_msg_proc_rrpc_request(_IN_ dm_msg_source_t *source)
    481          {
   \                     dm_msg_proc_rrpc_request: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB0B3             SUB      SP,SP,#+204
   \        0x4   0x4604             MOV      R4,R0
    482              int res = 0, rrpcid_pos = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9002             STR      R0,[SP, #+8]
    483              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
   \        0xA   0xA803             ADD      R0,SP,#+12
   \        0xC   0x2118             MOVS     R1,#+24
   \        0xE   0x....'....        BL       __aeabi_memclr4
    484              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
   \       0x12   0xA82A             ADD      R0,SP,#+168
   \       0x14   0x2124             MOVS     R1,#+36
   \       0x16   0x....'....        BL       __aeabi_memclr4
    485              dm_msg_request_payload_t request;
    486          
    487              memset(&request, 0, sizeof(dm_msg_request_payload_t));
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x2180             MOVS     R1,#+128
   \       0x1E   0xA80A             ADD      R0,SP,#+40
   \       0x20   0x....'....        BL       __aeabi_memset4
    488          
    489              res = dm_utils_memtok((char *)source->uri, strlen(source->uri), DM_URI_SERVICE_DELIMITER, 6, &rrpcid_pos);
    490              if (res != SUCCESS_RETURN) {
   \       0x24   0x6820             LDR      R0,[R4, #+0]
   \       0x26   0x....'....        BL       strlen
   \       0x2A   0x4601             MOV      R1,R0
   \       0x2C   0xA802             ADD      R0,SP,#+8
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0x2306             MOVS     R3,#+6
   \       0x32   0x222F             MOVS     R2,#+47
   \       0x34   0x6820             LDR      R0,[R4, #+0]
   \       0x36   0x....'....        BL       dm_utils_memtok
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD002             BEQ.N    ??dm_msg_proc_rrpc_request_0
    491                  return FAIL_RETURN;
   \       0x3E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x42   0xE02C             B.N      ??dm_msg_proc_rrpc_request_1
    492              }
    493              dm_log_info("Rrpc Id: %.*s", (int)(strlen(source->uri) - rrpcid_pos - 1), source->uri + rrpcid_pos + 1);
    494          
    495              /* Parse Product Key And Device Name */
    496              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    497                                          device_name);
    498              if (res != SUCCESS_RETURN) {
   \                     ??dm_msg_proc_rrpc_request_0: (+1)
   \       0x44   0x6820             LDR      R0,[R4, #+0]
   \       0x46   0x....'....        BL       strlen
   \       0x4A   0xA92A             ADD      R1,SP,#+168
   \       0x4C   0x9101             STR      R1,[SP, #+4]
   \       0x4E   0xA903             ADD      R1,SP,#+12
   \       0x50   0x9100             STR      R1,[SP, #+0]
   \       0x52   0x2304             MOVS     R3,#+4
   \       0x54   0x2202             MOVS     R2,#+2
   \       0x56   0x4601             MOV      R1,R0
   \       0x58   0x6820             LDR      R0,[R4, #+0]
   \       0x5A   0x....'....        BL       dm_msg_uri_parse_pkdn
   \       0x5E   0x2800             CMP      R0,#+0
   \       0x60   0xD002             BEQ.N    ??dm_msg_proc_rrpc_request_2
    499                  return FAIL_RETURN;
   \       0x62   0xF04F 0x30FF      MOV      R0,#-1
   \       0x66   0xE01A             B.N      ??dm_msg_proc_rrpc_request_1
    500              }
    501          
    502              /* Request */
    503              res = dm_msg_request_parse((char *)source->payload, source->payload_len, &request);
    504              if (res != SUCCESS_RETURN) {
   \                     ??dm_msg_proc_rrpc_request_2: (+1)
   \       0x68   0xAA0A             ADD      R2,SP,#+40
   \       0x6A   0x68A1             LDR      R1,[R4, #+8]
   \       0x6C   0x6860             LDR      R0,[R4, #+4]
   \       0x6E   0x....'....        BL       dm_msg_request_parse
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD002             BEQ.N    ??dm_msg_proc_rrpc_request_3
    505                  return FAIL_RETURN;
   \       0x76   0xF04F 0x30FF      MOV      R0,#-1
   \       0x7A   0xE010             B.N      ??dm_msg_proc_rrpc_request_1
    506              }
    507          
    508              /* Operation */
    509              return dm_msg_rrpc_request(product_key, device_name, (char *)source->uri + rrpcid_pos + 1,
    510                                         strlen(source->uri) - rrpcid_pos - 1, &request);
   \                     ??dm_msg_proc_rrpc_request_3: (+1)
   \       0x7C   0x6820             LDR      R0,[R4, #+0]
   \       0x7E   0x....'....        BL       strlen
   \       0x82   0x4603             MOV      R3,R0
   \       0x84   0xA80A             ADD      R0,SP,#+40
   \       0x86   0x9000             STR      R0,[SP, #+0]
   \       0x88   0x9802             LDR      R0,[SP, #+8]
   \       0x8A   0x1A1B             SUBS     R3,R3,R0
   \       0x8C   0x1E5B             SUBS     R3,R3,#+1
   \       0x8E   0x6820             LDR      R0,[R4, #+0]
   \       0x90   0x9902             LDR      R1,[SP, #+8]
   \       0x92   0x4408             ADD      R0,R0,R1
   \       0x94   0x1C42             ADDS     R2,R0,#+1
   \       0x96   0xA92A             ADD      R1,SP,#+168
   \       0x98   0xA803             ADD      R0,SP,#+12
   \       0x9A   0x....'....        BL       dm_msg_rrpc_request
   \                     ??dm_msg_proc_rrpc_request_1: (+1)
   \       0x9E   0xB034             ADD      SP,SP,#+208
   \       0xA0   0xBD10             POP      {R4,PC}          ;; return
    511          }
    512          

   \                                 In section .text, align 2, keep-with-next
    513          int dm_disp_ntp_response(_IN_ dm_msg_source_t *source)
    514          {
    515              dm_log_info(DM_URI_NTP_RESPONSE);
    516          
    517              /* Operation */
    518              return dm_msg_ntp_response((char *)source->payload, source->payload_len);
   \                     dm_disp_ntp_response: (+1)
   \        0x0   0x6881             LDR      R1,[R0, #+8]
   \        0x2   0x6840             LDR      R0,[R0, #+4]
   \        0x4   0x....'....        B.W      dm_msg_ntp_response
    519          }
    520          

   \                                 In section .text, align 2, keep-with-next
    521          int dm_disp_ext_error_response(_IN_ dm_msg_source_t *source)
    522          {
   \                     dm_disp_ext_error_response: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xB0A0             SUB      SP,SP,#+128
    523              int res = 0;
    524              dm_msg_response_payload_t response;
    525              /* char int_id[DM_UTILS_UINT32_STRLEN] = {0}; */
    526          
    527              /* Response */
    528              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    529              if (res != SUCCESS_RETURN) {
   \        0x4   0x466A             MOV      R2,SP
   \        0x6   0x6881             LDR      R1,[R0, #+8]
   \        0x8   0x6840             LDR      R0,[R0, #+4]
   \        0xA   0x....'....        BL       dm_msg_response_parse
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD002             BEQ.N    ??dm_disp_ext_error_response_0
    530                  return FAIL_RETURN;
   \       0x12   0xF04F 0x30FF      MOV      R0,#-1
   \       0x16   0xE002             B.N      ??dm_disp_ext_error_response_1
    531              }
    532          
    533              /* Operation */
    534              return dm_msg_ext_error_reply(&response);
   \                     ??dm_disp_ext_error_response_0: (+1)
   \       0x18   0x4668             MOV      R0,SP
   \       0x1A   0x....'....        BL       dm_msg_ext_error_reply
   \                     ??dm_disp_ext_error_response_1: (+1)
   \       0x1E   0xB021             ADD      SP,SP,#+132
   \       0x20   0xBD00             POP      {PC}             ;; return
    535          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     DM_URI_SYS_PREFIX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x70 0x72          DC8 "property"
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    536          #endif
    537          
    538          #ifdef DEVICE_MODEL_GATEWAY
    539          int dm_msg_proc_thing_topo_add_notify(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    540                                                _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    541          {
    542              int res = 0;
    543              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
    544              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
    545          
    546              dm_log_info(DM_URI_THING_TOPO_ADD_NOTIFY);
    547          
    548              /* Request */
    549              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    550                                          device_name);
    551              if (res < SUCCESS_RETURN) {
    552                  return res;
    553              }
    554          
    555              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    556              if (res < SUCCESS_RETURN) {
    557                  return res ;
    558              }
    559          
    560              /* Operation */
    561              res = dm_msg_topo_add_notify(request->params.value, request->params.value_length);
    562              if (res < SUCCESS_RETURN) {
    563                  return res ;
    564              }
    565          
    566              /* Response */
    567              response->service_prefix = DM_URI_SYS_PREFIX;
    568              response->service_name = dest->uri_name;
    569              memcpy(response->product_key, product_key, strlen(product_key));
    570              memcpy(response->device_name, device_name, strlen(device_name));
    571              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    572          
    573              return SUCCESS_RETURN;
    574          }
    575          
    576          int dm_msg_proc_thing_disable(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    577                                        _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    578          {
    579              int res = 0;
    580              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
    581              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
    582          
    583              dm_log_info(DM_URI_THING_DISABLE);
    584          
    585              /* Request */
    586              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    587                                          device_name);
    588              if (res < SUCCESS_RETURN) {
    589                  return res;
    590              }
    591          
    592              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    593              if (res != SUCCESS_RETURN) {
    594                  return res;
    595              }
    596          
    597              /* Operation */
    598              res = dm_msg_thing_disable(product_key, device_name);
    599          
    600              /* Response */
    601              response->service_prefix = DM_URI_SYS_PREFIX;
    602              response->service_name = dest->uri_name;
    603              memcpy(response->product_key, product_key, strlen(product_key));
    604              memcpy(response->device_name, device_name, strlen(device_name));
    605              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    606          
    607              return SUCCESS_RETURN;
    608          }
    609          
    610          int dm_msg_proc_thing_enable(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    611                                       _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    612          {
    613              int res = 0;
    614              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
    615              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
    616          
    617              dm_log_info(DM_URI_THING_DISABLE);
    618          
    619              /* Request */
    620              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    621                                          device_name);
    622              if (res < SUCCESS_RETURN) {
    623                  return res;
    624              }
    625          
    626              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    627              if (res != SUCCESS_RETURN) {
    628                  return res;
    629              }
    630          
    631              /* Operation */
    632              res = dm_msg_thing_enable(product_key, device_name);
    633          
    634              /* Response */
    635              response->service_prefix = DM_URI_SYS_PREFIX;
    636              response->service_name = dest->uri_name;
    637              memcpy(response->product_key, product_key, strlen(product_key));
    638              memcpy(response->device_name, device_name, strlen(device_name));
    639              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    640          
    641              return SUCCESS_RETURN;
    642          }
    643          
    644          int dm_msg_proc_thing_delete(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    645                                       _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    646          {
    647              int res = 0;
    648              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
    649              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
    650          
    651              dm_log_info(DM_URI_THING_DELETE);
    652          
    653              /* Request */
    654              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    655                                          device_name);
    656              if (res < SUCCESS_RETURN) {
    657                  return res;
    658              }
    659          
    660              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    661              if (res != SUCCESS_RETURN) {
    662                  return res;
    663              }
    664          
    665              /* Operation */
    666              res = dm_msg_thing_delete(product_key, device_name);
    667          
    668              /* Response */
    669              response->service_prefix = DM_URI_SYS_PREFIX;
    670              response->service_name = dest->uri_name;
    671              memcpy(response->product_key, product_key, strlen(product_key));
    672              memcpy(response->device_name, device_name, strlen(device_name));
    673              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    674          
    675              return SUCCESS_RETURN;
    676          }
    677          
    678          int dm_msg_proc_thing_gateway_permit(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    679                                               _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response)
    680          {
    681              int res = 0;
    682              char product_key[IOTX_PRODUCT_KEY_LEN + 1] = {0};
    683              char device_name[IOTX_DEVICE_NAME_LEN + 1] = {0};
    684          
    685              dm_log_info(DM_URI_THING_DELETE);
    686          
    687              /* Request */
    688              res = dm_msg_uri_parse_pkdn((char *)source->uri, strlen(source->uri), 2 + DM_URI_OFFSET, 4 + DM_URI_OFFSET, product_key,
    689                                          device_name);
    690              if (res < SUCCESS_RETURN) {
    691                  return res;
    692              }
    693          
    694              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    695              if (res != SUCCESS_RETURN) {
    696                  return res;
    697              }
    698          
    699              /* Operation */
    700              res = dm_msg_thing_gateway_permit(request->params.value, request->params.value_length);
    701          
    702              /* Response */
    703              response->service_prefix = DM_URI_SYS_PREFIX;
    704              response->service_name = dest->uri_name;
    705              memcpy(response->product_key, product_key, strlen(product_key));
    706              memcpy(response->device_name, device_name, strlen(device_name));
    707              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    708          
    709              return SUCCESS_RETURN;
    710          }
    711          
    712          int dm_msg_proc_thing_sub_register_reply(_IN_ dm_msg_source_t *source)
    713          {
    714              int res = 0;
    715              dm_msg_response_payload_t response;
    716          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    717              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    718          #endif
    719          
    720              dm_log_info(DM_URI_THING_SUB_REGISTER_REPLY);
    721          
    722              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    723          
    724              /* Response */
    725              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    726              if (res != SUCCESS_RETURN) {
    727                  return FAIL_RETURN;
    728              }
    729          
    730              /* Operation */
    731              dm_msg_thing_sub_register_reply(&response);
    732          
    733              /* Remove Message From Cache */
    734          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    735              memcpy(int_id, response.id.value, response.id.value_length);
    736              dm_msg_cache_remove(atoi(int_id));
    737          #endif
    738          
    739              return SUCCESS_RETURN;
    740          }
    741          
    742          int dm_msg_proc_thing_sub_unregister_reply(_IN_ dm_msg_source_t *source)
    743          {
    744              int res = 0;
    745              dm_msg_response_payload_t response;
    746          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    747              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    748          #endif
    749          
    750              dm_log_info(DM_URI_THING_SUB_UNREGISTER_REPLY);
    751          
    752              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    753          
    754              /* Response */
    755              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    756              if (res != SUCCESS_RETURN) {
    757                  return FAIL_RETURN;
    758              }
    759          
    760              /* Operation */
    761              dm_msg_thing_sub_unregister_reply(&response);
    762          
    763              /* Remove Message From Cache */
    764          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    765              memcpy(int_id, response.id.value, response.id.value_length);
    766              dm_msg_cache_remove(atoi(int_id));
    767          #endif
    768              return SUCCESS_RETURN;
    769          }
    770          
    771          int dm_msg_proc_thing_topo_add_reply(_IN_ dm_msg_source_t *source)
    772          {
    773              int res = 0;
    774              dm_msg_response_payload_t response;
    775          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    776              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    777          #endif
    778          
    779              dm_log_info(DM_URI_THING_TOPO_ADD_REPLY);
    780          
    781              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    782          
    783              /* Response */
    784              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    785              if (res != SUCCESS_RETURN) {
    786                  return FAIL_RETURN;
    787              }
    788          
    789              /* Operation */
    790              dm_msg_thing_topo_add_reply(&response);
    791          
    792              /* Remove Message From Cache */
    793          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    794              memcpy(int_id, response.id.value, response.id.value_length);
    795              dm_msg_cache_remove(atoi(int_id));
    796          #endif
    797              return SUCCESS_RETURN;
    798          }
    799          
    800          int dm_msg_proc_thing_topo_delete_reply(_IN_ dm_msg_source_t *source)
    801          {
    802              int res = 0;
    803              dm_msg_response_payload_t response;
    804          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    805              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    806          #endif
    807          
    808              dm_log_info(DM_URI_THING_TOPO_DELETE_REPLY);
    809          
    810              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    811          
    812              /* Response */
    813              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    814              if (res != SUCCESS_RETURN) {
    815                  return FAIL_RETURN;
    816              }
    817          
    818              /* Operation */
    819              dm_msg_thing_topo_delete_reply(&response);
    820          
    821              /* Remove Message From Cache */
    822          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    823              memcpy(int_id, response.id.value, response.id.value_length);
    824              dm_msg_cache_remove(atoi(int_id));
    825          #endif
    826              return SUCCESS_RETURN;
    827          }
    828          
    829          int dm_msg_proc_thing_topo_get_reply(_IN_ dm_msg_source_t *source)
    830          {
    831              int res = 0;
    832              dm_msg_response_payload_t response;
    833          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    834              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    835          #endif
    836          
    837              dm_log_info(DM_URI_THING_TOPO_GET_REPLY);
    838          
    839              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    840          
    841              /* Response */
    842              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    843              if (res != SUCCESS_RETURN) {
    844                  return FAIL_RETURN;
    845              }
    846          
    847              /* Operation */
    848              dm_msg_topo_get_reply(&response);
    849          
    850              /* Remove Message From Cache */
    851          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    852              memcpy(int_id, response.id.value, response.id.value_length);
    853              dm_msg_cache_remove(atoi(int_id));
    854          #endif
    855              return SUCCESS_RETURN;
    856          }
    857          
    858          int dm_msg_proc_thing_list_found_reply(_IN_ dm_msg_source_t *source)
    859          {
    860              int res = 0;
    861              dm_msg_response_payload_t response;
    862          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    863              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    864          #endif
    865          
    866              dm_log_info(DM_URI_THING_TOPO_GET_REPLY);
    867          
    868              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    869          
    870              /* Response */
    871              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    872              if (res != SUCCESS_RETURN) {
    873                  return FAIL_RETURN;
    874              }
    875          
    876              /* Operation */
    877              dm_msg_thing_list_found_reply(&response);
    878          
    879              /* Remove Message From Cache */
    880          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    881              memcpy(int_id, response.id.value, response.id.value_length);
    882              dm_msg_cache_remove(atoi(int_id));
    883          #endif
    884              return SUCCESS_RETURN;
    885          }
    886          
    887          int dm_msg_proc_combine_login_reply(_IN_ dm_msg_source_t *source)
    888          {
    889              int res = 0;
    890              dm_msg_response_payload_t response;
    891          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    892              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    893          #endif
    894          
    895              dm_log_info(DM_URI_THING_TOPO_GET_REPLY);
    896          
    897              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    898          
    899              /* Response */
    900              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    901              if (res != SUCCESS_RETURN) {
    902                  return FAIL_RETURN;
    903              }
    904          
    905              /* Operation */
    906              dm_msg_combine_login_reply(&response);
    907          
    908              /* Remove Message From Cache */
    909          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    910              memcpy(int_id, response.id.value, response.id.value_length);
    911              dm_msg_cache_remove(atoi(int_id));
    912          #endif
    913              return SUCCESS_RETURN;
    914          }
    915          
    916          int dm_msg_proc_combine_logout_reply(_IN_ dm_msg_source_t *source)
    917          {
    918              int res = 0;
    919              dm_msg_response_payload_t response;
    920          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    921              char int_id[DM_UTILS_UINT32_STRLEN] = {0};
    922          #endif
    923          
    924              dm_log_info(DM_URI_THING_TOPO_GET_REPLY);
    925          
    926              memset(&response, 0, sizeof(dm_msg_response_payload_t));
    927          
    928              /* Response */
    929              res = dm_msg_response_parse((char *)source->payload, source->payload_len, &response);
    930              if (res != SUCCESS_RETURN) {
    931                  return FAIL_RETURN;
    932              }
    933          
    934              /* Operation */
    935              dm_msg_combine_logout_reply(&response);
    936          
    937              /* Remove Message From Cache */
    938          #if !defined(DM_MESSAGE_CACHE_DISABLED)
    939              memcpy(int_id, response.id.value, response.id.value_length);
    940              dm_msg_cache_remove(atoi(int_id));
    941          #endif
    942              return SUCCESS_RETURN;
    943          }
    944          #endif
    945          
    946          #ifdef ALCS_ENABLED
    947          int dm_msg_proc_thing_dev_core_service_dev(_IN_ dm_msg_source_t *source, _IN_ dm_msg_dest_t *dest,
    948                  _OU_ dm_msg_request_payload_t *request, _OU_ dm_msg_response_t *response,
    949                  _OU_ unsigned char **data, int *data_len)
    950          {
    951              int res = 0;
    952          
    953              dm_log_info(DM_URI_DEV_CORE_SERVICE_DEV);
    954          
    955              /* Request */
    956              res = dm_msg_request_parse((char *)source->payload, source->payload_len, request);
    957              if (res < SUCCESS_RETURN) {
    958                  return res ;
    959              }
    960          
    961              /* Operation */
    962              res = dm_msg_dev_core_service_dev((char **)data, data_len);
    963              if (res < SUCCESS_RETURN) {
    964                  return res;
    965              }
    966          
    967              /* Response */
    968              response->service_prefix = NULL;
    969              response->service_name = dest->uri_name;
    970              response->code = (res == SUCCESS_RETURN) ? (IOTX_DM_ERR_CODE_SUCCESS) : (IOTX_DM_ERR_CODE_REQUEST_ERROR);
    971          
    972              return SUCCESS_RETURN;
    973          }
    974          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     136   dm_disp_ext_error_response
       136   -> dm_msg_ext_error_reply
       136   -> dm_msg_response_parse
       0   dm_disp_ntp_response
         0   -> dm_msg_ntp_response
     216   dm_msg_proc_rrpc_request
       216   -> __aeabi_memclr4
       216   -> __aeabi_memset4
       216   -> dm_msg_request_parse
       216   -> dm_msg_rrpc_request
       216   -> dm_msg_uri_parse_pkdn
       216   -> dm_utils_memtok
       216   -> strlen
     152   dm_msg_proc_thing_deviceinfo_delete_reply
       152   -> __aeabi_memcpy
       152   -> atoi
       152   -> dm_msg_cache_remove
       152   -> dm_msg_response_parse
       152   -> dm_msg_thing_deviceinfo_delete_reply
     152   dm_msg_proc_thing_deviceinfo_update_reply
       152   -> __aeabi_memcpy
       152   -> atoi
       152   -> dm_msg_cache_remove
       152   -> dm_msg_response_parse
       152   -> dm_msg_thing_deviceinfo_update_reply
     152   dm_msg_proc_thing_dynamictsl_get_reply
       152   -> __aeabi_memcpy
       152   -> atoi
       152   -> dm_msg_cache_remove
       152   -> dm_msg_response_parse
       152   -> dm_msg_thing_dynamictsl_get_reply
     160   dm_msg_proc_thing_event_post_reply
       160   -> __aeabi_memcpy
       160   -> atoi
       160   -> dm_msg_cache_remove
       160   -> dm_msg_response_parse
       160   -> dm_msg_thing_event_post_reply
       160   -> dm_msg_thing_event_property_post_reply
       160   -> dm_utils_memtok
       160   -> memcmp
       160   -> strlen
      80   dm_msg_proc_thing_model_down_raw
        80   -> __aeabi_memclr4
        80   -> dm_msg_thing_model_down_raw
        80   -> dm_msg_uri_parse_pkdn
        80   -> strlen
      80   dm_msg_proc_thing_model_up_raw_reply
        80   -> __aeabi_memclr4
        80   -> dm_msg_thing_model_up_raw_reply
        80   -> dm_msg_uri_parse_pkdn
        80   -> strlen
     152   dm_msg_proc_thing_property_desired_delete_reply
       152   -> __aeabi_memcpy
       152   -> atoi
       152   -> dm_msg_cache_remove
       152   -> dm_msg_response_parse
       152   -> dm_msg_thing_property_desired_delete_reply
     152   dm_msg_proc_thing_property_desired_get_reply
       152   -> __aeabi_memcpy
       152   -> atoi
       152   -> dm_msg_cache_remove
       152   -> dm_msg_response_parse
       152   -> dm_msg_thing_property_desired_get_reply
      88   dm_msg_proc_thing_service_property_get
        88   -> __aeabi_memclr4
        88   -> dm_mgr_search_device_by_pkdn
        88   -> dm_msg_property_get
        88   -> dm_msg_request_parse
        88   -> dm_msg_uri_parse_pkdn
        88   -> strlen
      88   dm_msg_proc_thing_service_property_post
        88   -> __aeabi_memclr4
        88   -> __aeabi_memcpy
        88   -> __aeabi_memcpy4
        88   -> dm_msg_request_parse
        88   -> dm_msg_uri_parse_pkdn
        88   -> strlen
      96   dm_msg_proc_thing_service_property_set
        96   -> __aeabi_memclr4
        96   -> __aeabi_memcpy
        96   -> __aeabi_memcpy4
        96   -> dm_mgr_search_device_by_pkdn
        96   -> dm_msg_property_set
        96   -> dm_msg_request_parse
        96   -> dm_msg_uri_parse_pkdn
        96   -> strlen
     216   dm_msg_proc_thing_service_request
       216   -> __aeabi_memclr4
       216   -> __aeabi_memset4
       216   -> dm_msg_request_parse
       216   -> dm_msg_thing_service_request
       216   -> dm_msg_uri_parse_pkdn
       216   -> dm_utils_memtok
       216   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
      24  ?_0
      36  ?_1
      24  ?_10
      36  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
      12  ?_15
      12  ?_16
      12  ?_17
      12  ?_18
      24  ?_19
      24  ?_2
      36  ?_20
      36  ?_3
      24  ?_4
      36  ?_5
      24  ?_6
      36  ?_7
      24  ?_8
      36  ?_9
      24  DM_URI_DEV_CORE_SERVICE_DEV
      20  DM_URI_EXT_ERROR_PREFIX
      16  DM_URI_EXT_NTP_PREFIX
      20  DM_URI_EXT_SESSION_PREFIX
       8  DM_URI_NTP_REQUEST
      12  DM_URI_NTP_RESPONSE
      28  DM_URI_OTA_DEVICE_INFORM
       8  DM_URI_REPLY_SUFFIX
      16  DM_URI_RRPC_REQUEST_WILDCARD
      12  DM_URI_SYS_PREFIX
      24  DM_URI_THING_DEVICEINFO_DELETE
      32  DM_URI_THING_DEVICEINFO_DELETE_REPLY
      24  DM_URI_THING_DEVICEINFO_UPDATE
      32  DM_URI_THING_DEVICEINFO_UPDATE_REPLY
      24  DM_URI_THING_DSLTEMPLATE_GET
      28  DM_URI_THING_DSLTEMPLATE_GET_REPLY
      24  DM_URI_THING_DYNAMICTSL_GET
      28  DM_URI_THING_DYNAMICTSL_GET_REPLY
      24  DM_URI_THING_EVENT_POST
      28  DM_URI_THING_EVENT_POST_REPLY
      28  DM_URI_THING_EVENT_POST_REPLY_WILDCARD
      28  DM_URI_THING_EVENT_PROPERTY_POST
      32  DM_URI_THING_EVENT_PROPERTY_POST_REPLY
      16  DM_URI_THING_LOG_POST
      24  DM_URI_THING_MODEL_DOWN_RAW
      28  DM_URI_THING_MODEL_DOWN_RAW_REPLY
      20  DM_URI_THING_MODEL_UP_RAW
      28  DM_URI_THING_MODEL_UP_RAW_REPLY
      32  DM_URI_THING_PROPERTY_DESIRED_DELETE
      36  DM_URI_THING_PROPERTY_DESIRED_DELETE_REPLY
      28  DM_URI_THING_PROPERTY_DESIRED_GET
      36  DM_URI_THING_PROPERTY_DESIRED_GET_REPLY
      28  DM_URI_THING_SERVICE_PROPERTY_GET
      36  DM_URI_THING_SERVICE_PROPERTY_GET_REPLY
      28  DM_URI_THING_SERVICE_PROPERTY_SET
      36  DM_URI_THING_SERVICE_PROPERTY_SET_REPLY
      20  DM_URI_THING_SERVICE_REQUEST
      16  DM_URI_THING_SERVICE_REQUEST_WILDCARD
      16  DM_URI_THING_SERVICE_REQUEST_WILDCARD2
      28  DM_URI_THING_SERVICE_RESPONSE
      34  dm_disp_ext_error_response
       8  dm_disp_ntp_response
     162  dm_msg_proc_rrpc_request
      68  dm_msg_proc_thing_deviceinfo_delete_reply
      68  dm_msg_proc_thing_deviceinfo_update_reply
      68  dm_msg_proc_thing_dynamictsl_get_reply
     188  dm_msg_proc_thing_event_post_reply
      74  dm_msg_proc_thing_model_down_raw
      86  dm_msg_proc_thing_model_up_raw_reply
      68  dm_msg_proc_thing_property_desired_delete_reply
      68  dm_msg_proc_thing_property_desired_get_reply
     100  dm_msg_proc_thing_service_property_get
     140  dm_msg_proc_thing_service_property_post
     164  dm_msg_proc_thing_service_property_set
     166  dm_msg_proc_thing_service_request

 
 1 480 bytes in section .rodata
 1 470 bytes in section .text
 
 1 470 bytes of CODE  memory
 1 480 bytes of CONST memory

Errors: none
Warnings: none
