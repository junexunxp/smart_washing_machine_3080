###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:47:58
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\at_tcp.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW8991.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\atm\at_tcp.c -D
#        DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D XIP_BOOT_HEADER_ENABLE=1
#        -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS -D PRINTF_ADVANCED_ENABLE
#        -D "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\at_tcp.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\at_tcp.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\atm\at_tcp.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          
      5          #include <stdio.h>
      6          #include <string.h>
      7          
      8          #include "infra_types.h"
      9          #include "infra_config.h"
     10          
     11          #include "at_conn_mgmt.h"
     12          
     13          #include "at_wrapper.h"
     14          
     15          #ifdef AT_PARSER_ENABLED
     16          #include "at_parser.h"
     17          #endif
     18          

   \                                 In section .text, align 2, keep-with-next
     19          static uint64_t _get_time_ms(void)
     20          {
     21              return HAL_UptimeMs();
   \                     _get_time_ms: (+1)
   \        0x0   0x....'....        B.W      HAL_UptimeMs
     22          }
     23          

   \                                 In section .text, align 2, keep-with-next
     24          static uint64_t _time_left(uint64_t t_end, uint64_t t_now)
     25          {
     26              uint64_t t_left;
     27          
     28              if (t_end > t_now) {
   \                     _time_left: (+1)
   \        0x0   0x428B             CMP      R3,R1
   \        0x2   0xD805             BHI.N    ??_time_left_0
   \        0x4   0xD301             BCC.N    ??_time_left_1
   \        0x6   0x4282             CMP      R2,R0
   \        0x8   0xD202             BCS.N    ??_time_left_0
     29                  t_left = t_end - t_now;
   \                     ??_time_left_1: (+1)
   \        0xA   0x1A80             SUBS     R0,R0,R2
   \        0xC   0x4199             SBCS     R1,R1,R3
   \        0xE   0x4770             BX       LR
     30              } else {
     31                  t_left = 0;
   \                     ??_time_left_0: (+1)
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x4601             MOV      R1,R0
     32              }
     33          
     34              return t_left;
   \       0x14   0x4770             BX       LR               ;; return
     35          }
     36          

   \                                 In section .text, align 2, keep-with-next
     37          uintptr_t AT_TCP_Establish(const char *host, uint16_t port)
     38          {
   \                     AT_TCP_Establish: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
     39              int fd = 0;
     40              int rc = 0;
     41              char resultip[16];
     42          
     43              HAL_Printf("establish tcp connection with server(host='%s', port=[%u])\n", host, port);
   \        0x8   0x462A             MOV      R2,R5
   \        0xA   0x4621             MOV      R1,R4
   \        0xC   0x....             LDR.N    R0,??DataTable4
   \        0xE   0x....'....        BL       HAL_Printf
     44          	//HAL_SleepMs(100);
     45              if ((rc = at_conn_getaddrinfo(host, resultip)) != 0) {
   \       0x12   0x4669             MOV      R1,SP
   \       0x14   0x4620             MOV      R0,R4
   \       0x16   0x....'....        BL       at_conn_getaddrinfo
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD008             BEQ.N    ??AT_TCP_Establish_0
     46                  HAL_Printf("getaddrinfo error(%d), host = '%s', port = [%d]\n", rc, host, port);
   \       0x1E   0x462B             MOV      R3,R5
   \       0x20   0x4622             MOV      R2,R4
   \       0x22   0x4601             MOV      R1,R0
   \       0x24   0x....             LDR.N    R0,??DataTable4_1
   \       0x26   0x....'....        BL       HAL_Printf
     47                  return (uintptr_t)(-1);
   \       0x2A   0xF04F 0x30FF      MOV      R0,#-1
   \       0x2E   0xE024             B.N      ??AT_TCP_Establish_1
     48              }
     49          
     50              fd = at_conn_setup(NETCONN_TCP);
   \                     ??AT_TCP_Establish_0: (+1)
   \       0x30   0x2001             MOVS     R0,#+1
   \       0x32   0x....'....        BL       at_conn_setup
   \       0x36   0x0004             MOVS     R4,R0
     51              if (fd < 0) {
   \       0x38   0xD505             BPL.N    ??AT_TCP_Establish_2
     52                  HAL_Printf("create at conn error\n");
   \       0x3A   0x....             LDR.N    R0,??DataTable4_2
   \       0x3C   0x....'....        BL       HAL_Printf
     53                  return (uintptr_t)(-1);
   \       0x40   0xF04F 0x30FF      MOV      R0,#-1
   \       0x44   0xE019             B.N      ??AT_TCP_Establish_1
     54              }
     55          
     56              if (at_conn_start(fd, resultip, port) == 0) {
   \                     ??AT_TCP_Establish_2: (+1)
   \       0x46   0x462A             MOV      R2,R5
   \       0x48   0x4669             MOV      R1,SP
   \       0x4A   0x....'....        BL       at_conn_start
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD007             BEQ.N    ??AT_TCP_Establish_3
     57                  rc = fd;
     58              } else {
     59                  at_conn_close(fd);
   \       0x52   0x4620             MOV      R0,R4
   \       0x54   0x....'....        BL       at_conn_close
     60                  HAL_Printf("connect error\n");
   \       0x58   0x....             LDR.N    R0,??DataTable4_3
   \       0x5A   0x....'....        BL       HAL_Printf
     61                  rc = -1;
   \       0x5E   0xF04F 0x34FF      MOV      R4,#-1
     62              }
     63          
     64              if (-1 == rc) {
   \                     ??AT_TCP_Establish_3: (+1)
   \       0x62   0xF114 0x0F01      CMN      R4,#+1
   \       0x66   0xD103             BNE.N    ??AT_TCP_Establish_4
     65                  HAL_Printf("fail to establish tcp\n");
   \       0x68   0x....             LDR.N    R0,??DataTable4_4
   \       0x6A   0x....'....        BL       HAL_Printf
   \       0x6E   0xE003             B.N      ??AT_TCP_Establish_5
     66              } else {
     67                  HAL_Printf("success to establish tcp, fd=%d\n", rc);
   \                     ??AT_TCP_Establish_4: (+1)
   \       0x70   0x4621             MOV      R1,R4
   \       0x72   0x....             LDR.N    R0,??DataTable4_5
   \       0x74   0x....'....        BL       HAL_Printf
     68              }
     69          
     70              return (uintptr_t)rc;
   \                     ??AT_TCP_Establish_5: (+1)
   \       0x78   0x4620             MOV      R0,R4
   \                     ??AT_TCP_Establish_1: (+1)
   \       0x7A   0xB005             ADD      SP,SP,#+20
   \       0x7C   0xBD30             POP      {R4,R5,PC}       ;; return
     71          }
     72          

   \                                 In section .text, align 2, keep-with-next
     73          int AT_TCP_Destroy(uintptr_t fd)
     74          {
   \                     AT_TCP_Destroy: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     75              int rc;
     76          
     77              rc = at_conn_close((int) fd);
     78              if (0 != rc) {
   \        0x2   0x....'....        BL       at_conn_close
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD005             BEQ.N    ??AT_TCP_Destroy_0
     79                  HAL_Printf("closesocket error\n");
   \        0xA   0x....             LDR.N    R0,??DataTable4_6
   \        0xC   0x....'....        BL       HAL_Printf
     80                  return -1;
   \       0x10   0xF04F 0x30FF      MOV      R0,#-1
   \       0x14   0xBD02             POP      {R1,PC}
     81              }
     82          
     83              return 0;
   \                     ??AT_TCP_Destroy_0: (+1)
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBD02             POP      {R1,PC}          ;; return
     84          }
     85          

   \                                 In section .text, align 2, keep-with-next
     86          int32_t AT_TCP_Write(uintptr_t fd, const char *buf, uint32_t len, uint32_t timeout_ms)
     87          {
   \                     AT_TCP_Write: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4682             MOV      R10,R0
   \        0x6   0x4689             MOV      R9,R1
   \        0x8   0x4690             MOV      R8,R2
   \        0xA   0x461C             MOV      R4,R3
     88              int ret;
     89              uint32_t len_sent;
     90              uint64_t t_end;
     91              int net_err = 0;
   \        0xC   0x2600             MOVS     R6,#+0
     92          
     93              t_end = _get_time_ms() + timeout_ms;
   \        0xE   0x....'....        BL       _get_time_ms
   \       0x12   0x4622             MOV      R2,R4
   \       0x14   0x4633             MOV      R3,R6
   \       0x16   0x1884             ADDS     R4,R0,R2
   \       0x18   0xEB41 0x0503      ADC      R5,R1,R3
     94              len_sent = 0;
   \       0x1C   0x461F             MOV      R7,R3
     95              ret = 1; /* send one time if timeout_ms is value 0 */
     96          
     97              do {
     98                  ret = at_conn_send(fd, buf + len_sent, len - len_sent);
   \                     ??AT_TCP_Write_0: (+1)
   \       0x1E   0xEBA8 0x0207      SUB      R2,R8,R7
   \       0x22   0xEB09 0x0107      ADD      R1,R9,R7
   \       0x26   0x4650             MOV      R0,R10
   \       0x28   0x....'....        BL       at_conn_send
     99                  if (ret > 0) {
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xDB04             BLT.N    ??AT_TCP_Write_1
    100                      len_sent += ret;
   \       0x30   0x19C7             ADDS     R7,R0,R7
   \       0x32   0xE007             B.N      ??AT_TCP_Write_2
    101                  } else if (0 == ret) {
    102                      HAL_Printf("No data be sent\n");
    103                  } else {
    104                      HAL_Printf("send fail, ret = send() = %d\n", ret);
    105                      net_err = 1;
    106                      break;
    107                  }
    108              } while (!net_err && (len_sent < len) && (_time_left(t_end, _get_time_ms()) > 0));
    109          
    110              if (net_err) {
    111                  return -1;
   \                     ??AT_TCP_Write_3: (+1)
   \       0x34   0xF04F 0x30FF      MOV      R0,#-1
   \       0x38   0xE01C             B.N      ??AT_TCP_Write_4
    112              } else {
   \                     ??AT_TCP_Write_1: (+1)
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD111             BNE.N    ??AT_TCP_Write_5
   \       0x3E   0x....             LDR.N    R0,??DataTable4_7
   \       0x40   0x....'....        BL       HAL_Printf
   \                     ??AT_TCP_Write_2: (+1)
   \       0x44   0x4547             CMP      R7,R8
   \       0x46   0xD212             BCS.N    ??AT_TCP_Write_6
   \       0x48   0x....'....        BL       _get_time_ms
   \       0x4C   0x4602             MOV      R2,R0
   \       0x4E   0x460B             MOV      R3,R1
   \       0x50   0x4620             MOV      R0,R4
   \       0x52   0x4629             MOV      R1,R5
   \       0x54   0x....'....        BL       _time_left
   \       0x58   0x2900             CMP      R1,#+0
   \       0x5A   0xD1E0             BNE.N    ??AT_TCP_Write_0
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD1DE             BNE.N    ??AT_TCP_Write_0
   \       0x60   0xE005             B.N      ??AT_TCP_Write_6
   \                     ??AT_TCP_Write_5: (+1)
   \       0x62   0x4601             MOV      R1,R0
   \       0x64   0x....             LDR.N    R0,??DataTable4_8
   \       0x66   0x....'....        BL       HAL_Printf
   \       0x6A   0x2001             MOVS     R0,#+1
   \       0x6C   0x4606             MOV      R6,R0
   \                     ??AT_TCP_Write_6: (+1)
   \       0x6E   0x2E00             CMP      R6,#+0
   \       0x70   0xD1E0             BNE.N    ??AT_TCP_Write_3
    113                  return len_sent;
   \       0x72   0x4638             MOV      R0,R7
   \                     ??AT_TCP_Write_4: (+1)
   \       0x74   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    114              }
    115          }
    116          

   \                                 In section .text, align 2, keep-with-next
    117          int32_t AT_TCP_Read(uintptr_t fd, char *buf, uint32_t len, uint32_t timeout_ms)
    118          {
   \                     AT_TCP_Read: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x468A             MOV      R10,R1
   \        0x8   0x4691             MOV      R9,R2
   \        0xA   0x461C             MOV      R4,R3
    119              int ret, err_code;
    120              uint32_t len_recv;
    121              uint64_t t_end, t_left;
    122              int empty;
    123          
    124              t_end = _get_time_ms() + timeout_ms;
   \        0xC   0x....'....        BL       _get_time_ms
   \       0x10   0x4622             MOV      R2,R4
   \       0x12   0x2300             MOVS     R3,#+0
   \       0x14   0x1884             ADDS     R4,R0,R2
   \       0x16   0xEB41 0x0503      ADC      R5,R1,R3
    125              len_recv = 0;
   \       0x1A   0x461E             MOV      R6,R3
    126              err_code = 0;
   \       0x1C   0x4698             MOV      R8,R3
    127          
    128              do {
    129                  t_left = _time_left(t_end, _get_time_ms());
    130                  if (0 == t_left) {
   \                     ??AT_TCP_Read_0: (+1)
   \       0x1E   0x....'....        BL       _get_time_ms
   \       0x22   0x4602             MOV      R2,R0
   \       0x24   0x460B             MOV      R3,R1
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0x4629             MOV      R1,R5
   \       0x2A   0x....'....        BL       _time_left
   \       0x2E   0x2900             CMP      R1,#+0
   \       0x30   0xD111             BNE.N    ??AT_TCP_Read_1
   \       0x32   0x2800             CMP      R0,#+0
   \       0x34   0xD10F             BNE.N    ??AT_TCP_Read_1
   \       0x36   0xE03A             B.N      ??AT_TCP_Read_2
    131                      break;
    132                  }
    133          
    134                  while(1) {
    135          #ifdef AT_PARSER_ENABLED
    136          #if AT_SINGLE_TASK
    137                      at_yield(NULL, 0, NULL, 100);
    138          #endif
    139          #endif
    140                      empty = at_conn_recvbufempty(fd);
    141                      if (0 == empty) {
    142                          ret = 1;
    143                          break;
    144                      } else if (empty < 0) {
    145                          ret = -1;
    146                      }
    147          
    148                      t_left = _time_left(t_end, _get_time_ms());
    149                      if (0 == t_left) {
   \                     ??AT_TCP_Read_3: (+1)
   \       0x38   0x....'....        BL       _get_time_ms
   \       0x3C   0x4602             MOV      R2,R0
   \       0x3E   0x460B             MOV      R3,R1
   \       0x40   0x4620             MOV      R0,R4
   \       0x42   0x4629             MOV      R1,R5
   \       0x44   0x....'....        BL       _time_left
   \       0x48   0x2900             CMP      R1,#+0
   \       0x4A   0xD101             BNE.N    ??AT_TCP_Read_4
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD009             BEQ.N    ??AT_TCP_Read_5
    150                          ret = 0;
    151                          break;
    152                      }
    153          
    154                      HAL_SleepMs(10);
   \                     ??AT_TCP_Read_4: (+1)
   \       0x50   0x200A             MOVS     R0,#+10
   \       0x52   0x....'....        BL       HAL_SleepMs
   \                     ??AT_TCP_Read_1: (+1)
   \       0x56   0x4638             MOV      R0,R7
   \       0x58   0x....'....        BL       at_conn_recvbufempty
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD1EB             BNE.N    ??AT_TCP_Read_3
   \       0x60   0x2001             MOVS     R0,#+1
   \       0x62   0xE000             B.N      ??AT_TCP_Read_6
   \                     ??AT_TCP_Read_5: (+1)
   \       0x64   0x4640             MOV      R0,R8
    155                  }
    156          
    157                  if (ret > 0) {
   \                     ??AT_TCP_Read_6: (+1)
   \       0x66   0x2801             CMP      R0,#+1
   \       0x68   0xDB1A             BLT.N    ??AT_TCP_Read_7
    158                      ret = at_conn_recv(fd, buf + len_recv, len - len_recv);
   \       0x6A   0xEBA9 0x0206      SUB      R2,R9,R6
   \       0x6E   0xEB0A 0x0106      ADD      R1,R10,R6
   \       0x72   0x4638             MOV      R0,R7
   \       0x74   0x....'....        BL       at_conn_recv
    159                      if (ret > 0) {
   \       0x78   0x2801             CMP      R0,#+1
   \       0x7A   0xDB03             BLT.N    ??AT_TCP_Read_8
    160                          len_recv += ret;
   \       0x7C   0x1986             ADDS     R6,R0,R6
    161                      } else if (0 == ret) {
    162                          HAL_Printf("connection is closed\n");
    163                          err_code = -1;
    164                          break;
    165                      } else {
    166                          HAL_Printf("recv fail\n");
    167                          err_code = -2;
    168                          break;
    169                      }
    170                  } else if (0 == ret) {
    171                      break;
    172                  } else {
    173                      HAL_Printf("select-recv fail\n");
    174                      err_code = -2;
    175                      break;
    176                  }
    177              } while ((len_recv < len));
   \       0x7E   0x454E             CMP      R6,R9
   \       0x80   0xD3CD             BCC.N    ??AT_TCP_Read_0
   \       0x82   0xE014             B.N      ??AT_TCP_Read_2
   \                     ??AT_TCP_Read_8: (+1)
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD105             BNE.N    ??AT_TCP_Read_9
   \       0x88   0x....             LDR.N    R0,??DataTable4_9
   \       0x8A   0x....'....        BL       HAL_Printf
   \       0x8E   0xF04F 0x38FF      MOV      R8,#-1
   \       0x92   0xE00C             B.N      ??AT_TCP_Read_2
   \                     ??AT_TCP_Read_9: (+1)
   \       0x94   0x....             LDR.N    R0,??DataTable4_10
   \       0x96   0x....'....        BL       HAL_Printf
   \       0x9A   0xF06F 0x0801      MVN      R8,#+1
   \       0x9E   0xE006             B.N      ??AT_TCP_Read_2
   \                     ??AT_TCP_Read_7: (+1)
   \       0xA0   0x2800             CMP      R0,#+0
   \       0xA2   0xD004             BEQ.N    ??AT_TCP_Read_2
   \       0xA4   0x....             LDR.N    R0,??DataTable4_11
   \       0xA6   0x....'....        BL       HAL_Printf
   \       0xAA   0xF06F 0x0801      MVN      R8,#+1
    178          
    179              /* priority to return data bytes if any data be received from TCP connection. */
    180              /* It will get error code on next calling */
    181              return (0 != len_recv) ? len_recv : err_code;
   \                     ??AT_TCP_Read_2: (+1)
   \       0xAE   0x2E00             CMP      R6,#+0
   \       0xB0   0xD001             BEQ.N    ??AT_TCP_Read_10
   \       0xB2   0x4630             MOV      R0,R6
   \       0xB4   0xE000             B.N      ??AT_TCP_Read_11
   \                     ??AT_TCP_Read_10: (+1)
   \       0xB6   0x4640             MOV      R0,R8
   \                     ??AT_TCP_Read_11: (+1)
   \       0xB8   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    182          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x65 0x73          DC8 65H, 73H, 74H, 61H, 62H, 6CH, 69H, 73H
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x69 0x73    
   \        0x8   0x68 0x20          DC8 68H, 20H, 74H, 63H, 70H, 20H, 63H, 6FH
   \              0x74 0x63    
   \              0x70 0x20    
   \              0x63 0x6F    
   \       0x10   0x6E 0x6E          DC8 6EH, 6EH, 65H, 63H, 74H, 69H, 6FH, 6EH
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \       0x18   0x20 0x77          DC8 20H, 77H, 69H, 74H, 68H, 20H, 73H, 65H
   \              0x69 0x74    
   \              0x68 0x20    
   \              0x73 0x65    
   \       0x20   0x72 0x76          DC8 72H, 76H, 65H, 72H, 28H, 68H, 6FH, 73H
   \              0x65 0x72    
   \              0x28 0x68    
   \              0x6F 0x73    
   \       0x28   0x74 0x3D          DC8 74H, 3DH, 27H, 25H, 73H, 27H, 2CH, 20H
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x2C 0x20    
   \       0x30   0x70 0x6F          DC8 70H, 6FH, 72H, 74H, 3DH, 5BH, 25H, 75H
   \              0x72 0x74    
   \              0x3D 0x5B    
   \              0x25 0x75    
   \       0x38   0x5D 0x29          DC8 5DH, 29H, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x67 0x65          DC8 "getaddrinfo error(%d), host = '%s', port = [%d]\012"
   \              0x74 0x61    
   \              0x64 0x64    
   \              0x72 0x69    
   \              0x6E 0x66    
   \              0x6F 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x28    
   \              0x25 0x64    
   \              0x29 0x2C    
   \              0x20 0x68    
   \              0x6F 0x73    
   \              0x74 0x20    
   \              0x3D 0x20    
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x2C 0x20    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x20 0x3D    
   \              0x20 0x5B    
   \              0x25 0x64    
   \              0x5D 0x0A    
   \              0x00         
   \       0x31   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x63 0x72          DC8 "create at conn error\012"
   \              0x65 0x61    
   \              0x74 0x65    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x20 0x65    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x0A 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x63 0x6F          DC8 "connect error\012"
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x0A    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x66 0x61          DC8 "fail to establish tcp\012"
   \              0x69 0x6C    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x65 0x73    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x69 0x73    
   \              0x68 0x20    
   \              0x74 0x63    
   \              0x70 0x0A    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x73 0x75          DC8 "success to establish tcp, fd=%d\012"
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x20    
   \              0x74 0x6F    
   \              0x20 0x65    
   \              0x73 0x74    
   \              0x61 0x62    
   \              0x6C 0x69    
   \              0x73 0x68    
   \              0x20 0x74    
   \              0x63 0x70    
   \              0x2C 0x20    
   \              0x66 0x64    
   \              0x3D 0x25    
   \              0x64 0x0A    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x63 0x6C          DC8 "closesocket error\012"
   \              0x6F 0x73    
   \              0x65 0x73    
   \              0x6F 0x63    
   \              0x6B 0x65    
   \              0x74 0x20    
   \              0x65 0x72    
   \              0x72 0x6F    
   \              0x72 0x0A    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x4E 0x6F          DC8 "No data be sent\012"
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x62 0x65    
   \              0x20 0x73    
   \              0x65 0x6E    
   \              0x74 0x0A    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x73 0x65          DC8 "send fail, ret = send() = %d\012"
   \              0x6E 0x64    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x2C    
   \              0x20 0x72    
   \              0x65 0x74    
   \              0x20 0x3D    
   \              0x20 0x73    
   \              0x65 0x6E    
   \              0x64 0x28    
   \              0x29 0x20    
   \              0x3D 0x20    
   \              0x25 0x64    
   \              0x0A 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x63 0x6F          DC8 "connection is closed\012"
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x63 0x6C    
   \              0x6F 0x73    
   \              0x65 0x64    
   \              0x0A 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x72 0x65          DC8 "recv fail\012"
   \              0x63 0x76    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x0A    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x73 0x65          DC8 "select-recv fail\012"
   \              0x6C 0x65    
   \              0x63 0x74    
   \              0x2D 0x72    
   \              0x65 0x63    
   \              0x76 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x0A 0x00    
   \       0x12   0x00 0x00          DC8 0, 0
    183          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   AT_TCP_Destroy
         8   -> HAL_Printf
         8   -> at_conn_close
      32   AT_TCP_Establish
        32   -> HAL_Printf
        32   -> at_conn_close
        32   -> at_conn_getaddrinfo
        32   -> at_conn_setup
        32   -> at_conn_start
      32   AT_TCP_Read
        32   -> HAL_Printf
        32   -> HAL_SleepMs
        32   -> _get_time_ms
        32   -> _time_left
        32   -> at_conn_recv
        32   -> at_conn_recvbufempty
      32   AT_TCP_Write
        32   -> HAL_Printf
        32   -> _get_time_ms
        32   -> _time_left
        32   -> at_conn_send
       0   _get_time_ms
         0   -> HAL_UptimeMs
       0   _time_left


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      60  ?_0
      52  ?_1
      12  ?_10
      20  ?_11
      24  ?_2
      16  ?_3
      24  ?_4
      36  ?_5
      20  ?_6
      20  ?_7
      32  ?_8
      24  ?_9
      26  AT_TCP_Destroy
     126  AT_TCP_Establish
     188  AT_TCP_Read
     120  AT_TCP_Write
       4  _get_time_ms
      22  _time_left

 
 340 bytes in section .rodata
 534 bytes in section .text
 
 534 bytes of CODE  memory
 340 bytes of CONST memory

Errors: none
Warnings: none
