###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:10
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\mbedtls\library\debug.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWB56B.tmp
#        (C:\Development\smart_washing_machine_3080\mbedtls\library\debug.c -D
#        DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D XIP_BOOT_HEADER_ENABLE=1
#        -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS -D PRINTF_ADVANCED_ENABLE
#        -D "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\debug.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\debug.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\mbedtls\library\debug.c
      1          /*
      2           *  Debugging routines
      3           *
      4           *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
      5           *  SPDX-License-Identifier: Apache-2.0
      6           *
      7           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      8           *  not use this file except in compliance with the License.
      9           *  You may obtain a copy of the License at
     10           *
     11           *  http://www.apache.org/licenses/LICENSE-2.0
     12           *
     13           *  Unless required by applicable law or agreed to in writing, software
     14           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     15           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     16           *  See the License for the specific language governing permissions and
     17           *  limitations under the License.
     18           *
     19           *  This file is part of mbed TLS (https://tls.mbed.org)
     20           */
     21          
     22          #if !defined(MBEDTLS_CONFIG_FILE)
     23          #include "mbedtls/config.h"
     24          #else
     25          #include MBEDTLS_CONFIG_FILE
     26          #endif
     27          #define MBEDTLS_DEBUG_C
     28          #if defined(MBEDTLS_DEBUG_C)
     29          
     30          #if defined(MBEDTLS_PLATFORM_C)
     31          #include "mbedtls/platform.h"
     32          #else
     33          #include <stdlib.h>
     34          #define mbedtls_calloc      calloc
     35          #define mbedtls_free        free
     36          #define mbedtls_time_t      time_t
     37          #define mbedtls_snprintf    snprintf
     38          #endif
     39          
     40          #include "mbedtls/debug.h"
     41          
     42          #include <stdarg.h>
     43          #include <stdio.h>
     44          #include <string.h>
     45          
     46          #if ( defined(__ARMCC_VERSION) || defined(_MSC_VER) ) && \
     47              !defined(inline) && !defined(__cplusplus)
     48          #define inline __inline
     49          #endif
     50          
     51          #define DEBUG_BUF_SIZE      512
     52          

   \                                 In section .bss, align 4
     53          static int debug_threshold = 0;
   \                     debug_threshold:
   \        0x0                      DS8 4
     54          

   \                                 In section .text, align 2, keep-with-next
     55          void mbedtls_debug_set_threshold( int threshold )
     56          {
     57              debug_threshold = threshold;
   \                     mbedtls_debug_set_threshold: (+1)
   \        0x0   0x....'....        LDR.W    R1,??DataTable7_3
   \        0x4   0x6008             STR      R0,[R1, #+0]
     58          }
   \        0x6   0x4770             BX       LR               ;; return
     59          
     60          /*
     61           * All calls to f_dbg must be made via this function
     62           */

   \                                 In section .text, align 2, keep-with-next
     63          static inline void debug_send_line( const mbedtls_ssl_context *ssl, int level,
     64                                              const char *file, int line,
     65                                              const char *str )
     66          {
   \                     debug_send_line: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x9804             LDR      R0,[SP, #+16]
     67              /*
     68               * If in a threaded environment, we need a thread identifier.
     69               * Since there is no portable way to get one, use the address of the ssl
     70               * context instead, as it shouldn't be shared between threads.
     71               */
     72          #if defined(MBEDTLS_THREADING_C)
     73              char idstr[20 + DEBUG_BUF_SIZE]; /* 0x + 16 nibbles + ': ' */
     74              mbedtls_snprintf( idstr, sizeof( idstr ), "%p: %s", (void*)ssl, str );
     75              ssl->conf->f_dbg( ssl->conf->p_dbg, level, file, line, idstr );
     76          #else
     77              ssl->conf->f_dbg( ssl->conf->p_dbg, level, file, line, str );
   \        0x6   0x9000             STR      R0,[SP, #+0]
   \        0x8   0x6820             LDR      R0,[R4, #+0]
   \        0xA   0x6940             LDR      R0,[R0, #+20]
   \        0xC   0x6824             LDR      R4,[R4, #+0]
   \        0xE   0x6924             LDR      R4,[R4, #+16]
   \       0x10   0x47A0             BLX      R4
     78          #endif
     79          }
   \       0x12   0xBD13             POP      {R0,R1,R4,PC}    ;; return
     80          

   \                                 In section .text, align 2, keep-with-next
     81          void mbedtls_debug_print_msg( const mbedtls_ssl_context *ssl, int level,
     82                                        const char *file, int line,
     83                                        const char *format, ... )
     84          {
   \                     mbedtls_debug_print_msg: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xF5AD 0x7D01      SUB      SP,SP,#+516
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460F             MOV      R7,R1
   \        0xA   0x4615             MOV      R5,R2
   \        0xC   0x461E             MOV      R6,R3
     85              va_list argp;
     86              char str[DEBUG_BUF_SIZE];
     87              int ret;
     88          
     89              if( NULL == ssl || NULL == ssl->conf || NULL == ssl->conf->f_dbg || level > debug_threshold )
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD023             BEQ.N    ??mbedtls_debug_print_msg_0
   \       0x12   0x6820             LDR      R0,[R4, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD020             BEQ.N    ??mbedtls_debug_print_msg_0
   \       0x18   0x6900             LDR      R0,[R0, #+16]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD01D             BEQ.N    ??mbedtls_debug_print_msg_0
   \       0x1E   0x....'....        LDR.W    R0,??DataTable7_3
   \       0x22   0x6800             LDR      R0,[R0, #+0]
   \       0x24   0x42B8             CMP      R0,R7
   \       0x26   0xDB18             BLT.N    ??mbedtls_debug_print_msg_0
     90                  return;
   \       0x28   0x9A86             LDR      R2,[SP, #+536]
     91          
     92              va_start( argp, format );
   \       0x2A   0xAB87             ADD      R3,SP,#+540
     93          #if defined(_WIN32)
     94          #if defined(_TRUNCATE) && !defined(__MINGW32__)
     95              ret = _vsnprintf_s( str, DEBUG_BUF_SIZE, _TRUNCATE, format, argp );
     96          #else
     97              ret = _vsnprintf( str, DEBUG_BUF_SIZE, format, argp );
     98              if( ret < 0 || (size_t) ret == DEBUG_BUF_SIZE )
     99              {
    100                  str[DEBUG_BUF_SIZE-1] = '\0';
    101                  ret = -1;
    102              }
    103          #endif
    104          #else
    105              ret = vsnprintf( str, DEBUG_BUF_SIZE, format, argp );
   \       0x2C   0xF44F 0x7100      MOV      R1,#+512
   \       0x30   0xA801             ADD      R0,SP,#+4
   \       0x32   0x....'....        BL       vsnprintf
    106          #endif
    107              va_end( argp );
    108          
    109              if( ret >= 0 && ret < DEBUG_BUF_SIZE - 1 )
   \       0x36   0xF240 0x11FF      MOVW     R1,#+511
   \       0x3A   0x4288             CMP      R0,R1
   \       0x3C   0xD205             BCS.N    ??mbedtls_debug_print_msg_1
    110              {
    111                  str[ret]     = '\n';
   \       0x3E   0x210A             MOVS     R1,#+10
   \       0x40   0xAA01             ADD      R2,SP,#+4
   \       0x42   0x5411             STRB     R1,[R2, R0]
    112                  str[ret + 1] = '\0';
   \       0x44   0x2100             MOVS     R1,#+0
   \       0x46   0x4410             ADD      R0,R2,R0
   \       0x48   0x7041             STRB     R1,[R0, #+1]
    113              }
    114          
    115              debug_send_line( ssl, level, file, line, str );
   \                     ??mbedtls_debug_print_msg_1: (+1)
   \       0x4A   0xA801             ADD      R0,SP,#+4
   \       0x4C   0x9000             STR      R0,[SP, #+0]
   \       0x4E   0x4633             MOV      R3,R6
   \       0x50   0x462A             MOV      R2,R5
   \       0x52   0x4639             MOV      R1,R7
   \       0x54   0x4620             MOV      R0,R4
   \       0x56   0x....'....        BL       debug_send_line
    116          }
   \                     ??mbedtls_debug_print_msg_0: (+1)
   \       0x5A   0xF50D 0x7D01      ADD      SP,SP,#+516
   \       0x5E   0xBDF0             POP      {R4-R7,PC}       ;; return
    117          

   \                                 In section .text, align 2, keep-with-next
    118          void mbedtls_debug_print_ret( const mbedtls_ssl_context *ssl, int level,
    119                                const char *file, int line,
    120                                const char *text, int ret )
    121          {
   \                     mbedtls_debug_print_ret: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xF5AD 0x7D02      SUB      SP,SP,#+520
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0x4616             MOV      R6,R2
   \        0xC   0x461F             MOV      R7,R3
    122              char str[DEBUG_BUF_SIZE];
    123          
    124              if( ssl->conf == NULL || ssl->conf->f_dbg == NULL || level > debug_threshold )
   \        0xE   0x6820             LDR      R0,[R4, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD01E             BEQ.N    ??mbedtls_debug_print_ret_0
   \       0x14   0x6900             LDR      R0,[R0, #+16]
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD01B             BEQ.N    ??mbedtls_debug_print_ret_0
   \       0x1A   0x....'....        LDR.W    R0,??DataTable7_3
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0x42A8             CMP      R0,R5
   \       0x22   0xDB16             BLT.N    ??mbedtls_debug_print_ret_0
    125                  return;
   \       0x24   0x9889             LDR      R0,[SP, #+548]
    126          
    127              /*
    128               * With non-blocking I/O and examples that just retry immediately,
    129               * the logs would be quickly flooded with WANT_READ, so ignore that.
    130               * Don't ignore WANT_WRITE however, since is is usually rare.
    131               */
    132              if( ret == MBEDTLS_ERR_SSL_WANT_READ )
   \       0x26   0xF510 0x4FD2      CMN      R0,#+26880
   \       0x2A   0xD012             BEQ.N    ??mbedtls_debug_print_ret_0
    133                  return;
   \       0x2C   0x9B88             LDR      R3,[SP, #+544]
    134          
    135              mbedtls_snprintf( str, sizeof( str ), "%s() returned %d (-0x%04x)\n",
    136                        text, ret, -ret );
   \       0x2E   0x4241             RSBS     R1,R0,#+0
   \       0x30   0x9101             STR      R1,[SP, #+4]
   \       0x32   0x9000             STR      R0,[SP, #+0]
   \       0x34   0x....'....        LDR.W    R2,??DataTable7_4
   \       0x38   0xF44F 0x7100      MOV      R1,#+512
   \       0x3C   0xA802             ADD      R0,SP,#+8
   \       0x3E   0x....'....        BL       snprintf
    137          
    138              debug_send_line( ssl, level, file, line, str );
   \       0x42   0xA802             ADD      R0,SP,#+8
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x463B             MOV      R3,R7
   \       0x48   0x4632             MOV      R2,R6
   \       0x4A   0x4629             MOV      R1,R5
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       debug_send_line
    139          }
   \                     ??mbedtls_debug_print_ret_0: (+1)
   \       0x52   0xF50D 0x7D03      ADD      SP,SP,#+524
   \       0x56   0xBDF0             POP      {R4-R7,PC}       ;; return
    140          

   \                                 In section .text, align 2, keep-with-next
    141          void mbedtls_debug_print_buf( const mbedtls_ssl_context *ssl, int level,
    142                                const char *file, int line, const char *text,
    143                                const unsigned char *buf, size_t len )
    144          {
   \                     mbedtls_debug_print_buf: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xF5AD 0x7D06      SUB      SP,SP,#+536
   \        0x8   0x4680             MOV      R8,R0
    145              char str[DEBUG_BUF_SIZE];
    146              char txt[17];
    147              size_t i, idx = 0;
   \        0xA   0x2700             MOVS     R7,#+0
    148          
    149              if( ssl->conf == NULL || ssl->conf->f_dbg == NULL || level > debug_threshold )
   \        0xC   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xF000 0x808A      BEQ.W    ??mbedtls_debug_print_buf_0
   \       0x16   0x6900             LDR      R0,[R0, #+16]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xF000 0x8086      BEQ.W    ??mbedtls_debug_print_buf_0
   \       0x1E   0x4689             MOV      R9,R1
   \       0x20   0x....'....        LDR.W    R0,??DataTable7_3
   \       0x24   0x6800             LDR      R0,[R0, #+0]
   \       0x26   0x4548             CMP      R0,R9
   \       0x28   0xF2C0 0x807F      BLT.W    ??mbedtls_debug_print_buf_0
    150                  return;
   \       0x2C   0x9D92             LDR      R5,[SP, #+584]
   \       0x2E   0x9890             LDR      R0,[SP, #+576]
   \       0x30   0x469A             MOV      R10,R3
   \       0x32   0x4616             MOV      R6,R2
    151          
    152              mbedtls_snprintf( str + idx, sizeof( str ) - idx, "dumping '%s' (%u bytes)\n",
    153                        text, (unsigned int) len );
   \       0x34   0x9500             STR      R5,[SP, #+0]
   \       0x36   0x4603             MOV      R3,R0
   \       0x38   0x....'....        LDR.W    R2,??DataTable7_5
   \       0x3C   0xF44F 0x7100      MOV      R1,#+512
   \       0x40   0xA806             ADD      R0,SP,#+24
   \       0x42   0x....'....        BL       snprintf
    154          
    155              debug_send_line( ssl, level, file, line, str );
   \       0x46   0xA806             ADD      R0,SP,#+24
   \       0x48   0x9000             STR      R0,[SP, #+0]
   \       0x4A   0x4653             MOV      R3,R10
   \       0x4C   0x4632             MOV      R2,R6
   \       0x4E   0x4649             MOV      R1,R9
   \       0x50   0x4640             MOV      R0,R8
   \       0x52   0x....'....        BL       debug_send_line
    156          
    157              idx = 0;
    158              memset( txt, 0, sizeof( txt ) );
   \       0x56   0x463A             MOV      R2,R7
   \       0x58   0x2111             MOVS     R1,#+17
   \       0x5A   0xA801             ADD      R0,SP,#+4
   \       0x5C   0x....'....        BL       __aeabi_memset4
    159              for( i = 0; i < len; i++ )
   \       0x60   0x463C             MOV      R4,R7
   \       0x62   0xF8DD 0xB244      LDR      R11,[SP, #+580]
   \                     ??mbedtls_debug_print_buf_1: (+1)
   \       0x66   0x42AC             CMP      R4,R5
   \       0x68   0xD263             BCS.N    ??mbedtls_debug_print_buf_2
    160              {
    161                  if( i >= 4096 )
   \       0x6A   0xF5B4 0x5F80      CMP      R4,#+4096
   \       0x6E   0xD260             BCS.N    ??mbedtls_debug_print_buf_2
    162                      break;
    163          
    164                  if( i % 16 == 0 )
   \       0x70   0xF014 0x0F0F      TST      R4,#0xF
   \       0x74   0xD122             BNE.N    ??mbedtls_debug_print_buf_3
    165                  {
    166                      if( i > 0 )
   \       0x76   0x2C00             CMP      R4,#+0
   \       0x78   0xD016             BEQ.N    ??mbedtls_debug_print_buf_4
    167                      {
    168                          mbedtls_snprintf( str + idx, sizeof( str ) - idx, "  %s\n", txt );
   \       0x7A   0xAB01             ADD      R3,SP,#+4
   \       0x7C   0x....'....        LDR.W    R2,??DataTable7_6
   \       0x80   0xF5C7 0x7100      RSB      R1,R7,#+512
   \       0x84   0xA806             ADD      R0,SP,#+24
   \       0x86   0x4438             ADD      R0,R0,R7
   \       0x88   0x....'....        BL       snprintf
    169                          debug_send_line( ssl, level, file, line, str );
   \       0x8C   0xA806             ADD      R0,SP,#+24
   \       0x8E   0x9000             STR      R0,[SP, #+0]
   \       0x90   0x4653             MOV      R3,R10
   \       0x92   0x4632             MOV      R2,R6
   \       0x94   0x4649             MOV      R1,R9
   \       0x96   0x4640             MOV      R0,R8
   \       0x98   0x....'....        BL       debug_send_line
    170          
    171                          idx = 0;
   \       0x9C   0x2700             MOVS     R7,#+0
    172                          memset( txt, 0, sizeof( txt ) );
   \       0x9E   0x463A             MOV      R2,R7
   \       0xA0   0x2111             MOVS     R1,#+17
   \       0xA2   0xA801             ADD      R0,SP,#+4
   \       0xA4   0x....'....        BL       __aeabi_memset4
    173                      }
    174          
    175                      idx += mbedtls_snprintf( str + idx, sizeof( str ) - idx, "%04x: ",
    176                                       (unsigned int) i );
   \                     ??mbedtls_debug_print_buf_4: (+1)
   \       0xA8   0x4623             MOV      R3,R4
   \       0xAA   0x....'....        LDR.W    R2,??DataTable7_7
   \       0xAE   0xF5C7 0x7100      RSB      R1,R7,#+512
   \       0xB2   0xA806             ADD      R0,SP,#+24
   \       0xB4   0x4438             ADD      R0,R0,R7
   \       0xB6   0x....'....        BL       snprintf
   \       0xBA   0x19C7             ADDS     R7,R0,R7
    177          
    178                  }
    179          
    180                  idx += mbedtls_snprintf( str + idx, sizeof( str ) - idx, " %02x",
    181                                   (unsigned int) buf[i] );
   \                     ??mbedtls_debug_print_buf_3: (+1)
   \       0xBC   0xF81B 0x3004      LDRB     R3,[R11, R4]
   \       0xC0   0x....'....        LDR.W    R2,??DataTable7_8
   \       0xC4   0xF5C7 0x7100      RSB      R1,R7,#+512
   \       0xC8   0xA806             ADD      R0,SP,#+24
   \       0xCA   0x4438             ADD      R0,R0,R7
   \       0xCC   0x....'....        BL       snprintf
   \       0xD0   0x19C7             ADDS     R7,R0,R7
    182                  txt[i % 16] = ( buf[i] > 31 && buf[i] < 127 ) ? buf[i] : '.' ;
   \       0xD2   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \       0xD6   0x3820             SUBS     R0,R0,#+32
   \       0xD8   0x285F             CMP      R0,#+95
   \       0xDA   0xD301             BCC.N    ??mbedtls_debug_print_buf_5
   \       0xDC   0x202E             MOVS     R0,#+46
   \       0xDE   0xE001             B.N      ??mbedtls_debug_print_buf_6
   \                     ??mbedtls_debug_print_buf_5: (+1)
   \       0xE0   0xF81B 0x0004      LDRB     R0,[R11, R4]
   \                     ??mbedtls_debug_print_buf_6: (+1)
   \       0xE4   0xA901             ADD      R1,SP,#+4
   \       0xE6   0xF004 0x020F      AND      R2,R4,#0xF
   \       0xEA   0x5488             STRB     R0,[R1, R2]
    183              }
   \       0xEC   0x1C64             ADDS     R4,R4,#+1
   \       0xEE   0xE7BA             B.N      ??mbedtls_debug_print_buf_1
    184          
    185              if( len > 0 )
    186              {
    187                  for( /* i = i */; i % 16 != 0; i++ )
    188                      idx += mbedtls_snprintf( str + idx, sizeof( str ) - idx, "   " );
   \                     ??mbedtls_debug_print_buf_7: (+1)
   \       0xF0   0x....             ADR.N    R2,??DataTable5  ;; "   "
   \       0xF2   0xF5C7 0x7100      RSB      R1,R7,#+512
   \       0xF6   0xA806             ADD      R0,SP,#+24
   \       0xF8   0x4438             ADD      R0,R0,R7
   \       0xFA   0x....'....        BL       snprintf
   \       0xFE   0x19C7             ADDS     R7,R0,R7
   \      0x100   0x1C64             ADDS     R4,R4,#+1
   \                     ??mbedtls_debug_print_buf_8: (+1)
   \      0x102   0xF014 0x0F0F      TST      R4,#0xF
   \      0x106   0xD1F3             BNE.N    ??mbedtls_debug_print_buf_7
    189          
    190                  mbedtls_snprintf( str + idx, sizeof( str ) - idx, "  %s\n", txt );
   \      0x108   0xAB01             ADD      R3,SP,#+4
   \      0x10A   0x....'....        LDR.W    R2,??DataTable7_6
   \      0x10E   0xF5C7 0x7100      RSB      R1,R7,#+512
   \      0x112   0xA806             ADD      R0,SP,#+24
   \      0x114   0x4438             ADD      R0,R0,R7
   \      0x116   0x....'....        BL       snprintf
    191                  debug_send_line( ssl, level, file, line, str );
   \      0x11A   0xA806             ADD      R0,SP,#+24
   \      0x11C   0x9000             STR      R0,[SP, #+0]
   \      0x11E   0x4653             MOV      R3,R10
   \      0x120   0x4632             MOV      R2,R6
   \      0x122   0x4649             MOV      R1,R9
   \      0x124   0x4640             MOV      R0,R8
   \      0x126   0x....'....        BL       debug_send_line
    192              }
    193          }
   \                     ??mbedtls_debug_print_buf_0: (+1)
   \      0x12A   0xF50D 0x7D07      ADD      SP,SP,#+540
   \      0x12E   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??mbedtls_debug_print_buf_2: (+1)
   \      0x132   0x0028             MOVS     R0,R5
   \      0x134   0xD1E5             BNE.N    ??mbedtls_debug_print_buf_8
   \      0x136   0xE7F8             B.N      ??mbedtls_debug_print_buf_0
    194          
    195          #if defined(MBEDTLS_ECP_C)

   \                                 In section .text, align 2, keep-with-next
    196          void mbedtls_debug_print_ecp( const mbedtls_ssl_context *ssl, int level,
    197                                const char *file, int line,
    198                                const char *text, const mbedtls_ecp_point *X )
    199          {
   \                     mbedtls_debug_print_ecp: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0xF5AD 0x7D02      SUB      SP,SP,#+520
   \        0x8   0x4604             MOV      R4,R0
   \        0xA   0x460D             MOV      R5,R1
   \        0xC   0x4616             MOV      R6,R2
   \        0xE   0x461F             MOV      R7,R3
    200              char str[DEBUG_BUF_SIZE];
    201          
    202              if( ssl->conf == NULL || ssl->conf->f_dbg == NULL || level > debug_threshold )
   \       0x10   0x6820             LDR      R0,[R4, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD030             BEQ.N    ??mbedtls_debug_print_ecp_0
   \       0x16   0x6900             LDR      R0,[R0, #+16]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD02D             BEQ.N    ??mbedtls_debug_print_ecp_0
   \       0x1C   0x....'....        LDR.W    R0,??DataTable7_3
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x42A8             CMP      R0,R5
   \       0x24   0xDB28             BLT.N    ??mbedtls_debug_print_ecp_0
    203                  return;
   \       0x26   0xF8DD 0x922C      LDR      R9,[SP, #+556]
   \       0x2A   0xF8DD 0x8228      LDR      R8,[SP, #+552]
    204          
    205              mbedtls_snprintf( str, sizeof( str ), "%s(X)", text );
   \       0x2E   0x4643             MOV      R3,R8
   \       0x30   0x....'....        LDR.W    R2,??DataTable7_9
   \       0x34   0xF44F 0x7100      MOV      R1,#+512
   \       0x38   0xA802             ADD      R0,SP,#+8
   \       0x3A   0x....'....        BL       snprintf
    206              mbedtls_debug_print_mpi( ssl, level, file, line, str, &X->X );
   \       0x3E   0xF8CD 0x9004      STR      R9,[SP, #+4]
   \       0x42   0xA802             ADD      R0,SP,#+8
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x463B             MOV      R3,R7
   \       0x48   0x4632             MOV      R2,R6
   \       0x4A   0x4629             MOV      R1,R5
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       mbedtls_debug_print_mpi
    207          
    208              mbedtls_snprintf( str, sizeof( str ), "%s(Y)", text );
   \       0x52   0x4643             MOV      R3,R8
   \       0x54   0x....'....        LDR.W    R2,??DataTable7_10
   \       0x58   0xF44F 0x7100      MOV      R1,#+512
   \       0x5C   0xA802             ADD      R0,SP,#+8
   \       0x5E   0x....'....        BL       snprintf
    209              mbedtls_debug_print_mpi( ssl, level, file, line, str, &X->Y );
   \       0x62   0xF109 0x000C      ADD      R0,R9,#+12
   \       0x66   0x9001             STR      R0,[SP, #+4]
   \       0x68   0xA802             ADD      R0,SP,#+8
   \       0x6A   0x9000             STR      R0,[SP, #+0]
   \       0x6C   0x463B             MOV      R3,R7
   \       0x6E   0x4632             MOV      R2,R6
   \       0x70   0x4629             MOV      R1,R5
   \       0x72   0x4620             MOV      R0,R4
   \       0x74   0x....'....        BL       mbedtls_debug_print_mpi
    210          }
   \                     ??mbedtls_debug_print_ecp_0: (+1)
   \       0x78   0xF50D 0x7D03      ADD      SP,SP,#+524
   \       0x7C   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    211          #endif /* MBEDTLS_ECP_C */
    212          
    213          #if defined(MBEDTLS_BIGNUM_C)

   \                                 In section .text, align 2, keep-with-next
    214          void mbedtls_debug_print_mpi( const mbedtls_ssl_context *ssl, int level,
    215                                const char *file, int line,
    216                                const char *text, const mbedtls_mpi *X )
    217          {
   \                     mbedtls_debug_print_mpi: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xF5AD 0x7D03      SUB      SP,SP,#+524
   \        0x8   0x4605             MOV      R5,R0
   \        0xA   0x460E             MOV      R6,R1
    218              char str[DEBUG_BUF_SIZE];
    219              int j, k, zeros = 1;
   \        0xC   0x2401             MOVS     R4,#+1
    220              size_t i, n, idx = 0;
   \        0xE   0xF04F 0x0B00      MOV      R11,#+0
    221          
    222              if( ssl->conf == NULL || ssl->conf->f_dbg == NULL || X == NULL || level > debug_threshold )
   \       0x12   0x6828             LDR      R0,[R5, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xF000 0x8096      BEQ.W    ??mbedtls_debug_print_mpi_0
   \       0x1A   0x6900             LDR      R0,[R0, #+16]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xF000 0x8092      BEQ.W    ??mbedtls_debug_print_mpi_0
   \       0x22   0x998D             LDR      R1,[SP, #+564]
   \       0x24   0x2900             CMP      R1,#+0
   \       0x26   0xF000 0x808E      BEQ.W    ??mbedtls_debug_print_mpi_0
   \       0x2A   0x....'....        LDR.W    R0,??DataTable7_3
   \       0x2E   0x6800             LDR      R0,[R0, #+0]
   \       0x30   0x42B0             CMP      R0,R6
   \       0x32   0xF2C0 0x8088      BLT.W    ??mbedtls_debug_print_mpi_0
    223                  return;
    224          
    225              for( n = X->n - 1; n > 0; n-- )
   \       0x36   0x684F             LDR      R7,[R1, #+4]
   \       0x38   0x1E7F             SUBS     R7,R7,#+1
   \                     ??mbedtls_debug_print_mpi_1: (+1)
   \       0x3A   0x2F00             CMP      R7,#+0
   \       0x3C   0xF000 0x8087      BEQ.W    ??mbedtls_debug_print_mpi_2
    226                  if( X->p[n] != 0 )
   \       0x40   0x6888             LDR      R0,[R1, #+8]
   \       0x42   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xF040 0x8081      BNE.W    ??mbedtls_debug_print_mpi_2
   \       0x4C   0x1E7F             SUBS     R7,R7,#+1
   \       0x4E   0xE7F4             B.N      ??mbedtls_debug_print_mpi_1
    227                      break;
    228          
    229              for( j = ( sizeof(mbedtls_mpi_uint) << 3 ) - 1; j >= 0; j-- )
    230                  if( ( ( X->p[n] >> j ) & 1 ) != 0 )
   \                     ??mbedtls_debug_print_mpi_3: (+1)
   \       0x50   0x6888             LDR      R0,[R1, #+8]
   \       0x52   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \       0x56   0xFA20 0xF00C      LSR      R0,R0,R12
   \       0x5A   0x07C0             LSLS     R0,R0,#+31
   \       0x5C   0xD47D             BMI.N    ??mbedtls_debug_print_mpi_4
   \       0x5E   0xF1AC 0x0C01      SUB      R12,R12,#+1
   \       0x62   0xE076             B.N      ??mbedtls_debug_print_mpi_5
    231                      break;
    232          
    233              mbedtls_snprintf( str + idx, sizeof( str ) - idx, "value of '%s' (%d bits) is:\n",
    234                        text, (int) ( ( n * ( sizeof(mbedtls_mpi_uint) << 3 ) ) + j + 1 ) );
    235          
    236              debug_send_line( ssl, level, file, line, str );
    237          
    238              idx = 0;
    239              for( i = n + 1, j = 0; i > 0; i-- )
    240              {
    241                  if( zeros && X->p[i - 1] == 0 )
    242                      continue;
    243          
    244                  for( k = sizeof( mbedtls_mpi_uint ) - 1; k >= 0; k-- )
    245                  {
    246                      if( zeros && ( ( X->p[i - 1] >> ( k << 3 ) ) & 0xFF ) == 0 )
   \                     ??mbedtls_debug_print_mpi_6: (+1)
   \       0x64   0x2C00             CMP      R4,#+0
   \       0x66   0xD00B             BEQ.N    ??mbedtls_debug_print_mpi_7
   \       0x68   0xF8DA 0x0008      LDR      R0,[R10, #+8]
   \       0x6C   0x9901             LDR      R1,[SP, #+4]
   \       0x6E   0xEB00 0x0081      ADD      R0,R0,R1, LSL #+2
   \       0x72   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \       0x76   0xEA4F 0x01C8      LSL      R1,R8,#+3
   \       0x7A   0x40C8             LSRS     R0,R0,R1
   \       0x7C   0x0600             LSLS     R0,R0,#+24
   \       0x7E   0xD02F             BEQ.N    ??mbedtls_debug_print_mpi_8
    247                          continue;
    248                      else
    249                          zeros = 0;
   \                     ??mbedtls_debug_print_mpi_7: (+1)
   \       0x80   0x2400             MOVS     R4,#+0
    250          
    251                      if( j % 16 == 0 )
   \       0x82   0x4638             MOV      R0,R7
   \       0x84   0x10C0             ASRS     R0,R0,#+3
   \       0x86   0xEB07 0x7010      ADD      R0,R7,R0, LSR #+28
   \       0x8A   0x1100             ASRS     R0,R0,#+4
   \       0x8C   0xEBB7 0x1000      SUBS     R0,R7,R0, LSL #+4
   \       0x90   0xD111             BNE.N    ??mbedtls_debug_print_mpi_9
    252                      {
    253                          if( j > 0 )
   \       0x92   0x2F01             CMP      R7,#+1
   \       0x94   0xDB0F             BLT.N    ??mbedtls_debug_print_mpi_9
    254                          {
    255                              mbedtls_snprintf( str + idx, sizeof( str ) - idx, "\n" );
   \       0x96   0x....             ADR.N    R2,??DataTable7  ;; "\n"
   \       0x98   0xF5CB 0x7100      RSB      R1,R11,#+512
   \       0x9C   0xA803             ADD      R0,SP,#+12
   \       0x9E   0x4458             ADD      R0,R0,R11
   \       0xA0   0x....'....        BL       snprintf
    256                              debug_send_line( ssl, level, file, line, str );
   \       0xA4   0xA803             ADD      R0,SP,#+12
   \       0xA6   0x9000             STR      R0,[SP, #+0]
   \       0xA8   0x464B             MOV      R3,R9
   \       0xAA   0x9A02             LDR      R2,[SP, #+8]
   \       0xAC   0x4631             MOV      R1,R6
   \       0xAE   0x4628             MOV      R0,R5
   \       0xB0   0x....'....        BL       debug_send_line
    257                              idx = 0;
   \       0xB4   0x46A3             MOV      R11,R4
    258                          }
    259                      }
    260          
    261                      idx += mbedtls_snprintf( str + idx, sizeof( str ) - idx, " %02x", (unsigned int)
    262                                       ( X->p[i - 1] >> ( k << 3 ) ) & 0xFF );
   \                     ??mbedtls_debug_print_mpi_9: (+1)
   \       0xB6   0xF8DA 0x0008      LDR      R0,[R10, #+8]
   \       0xBA   0x9901             LDR      R1,[SP, #+4]
   \       0xBC   0xEB00 0x0081      ADD      R0,R0,R1, LSL #+2
   \       0xC0   0xF850 0x3C04      LDR      R3,[R0, #-4]
   \       0xC4   0xEA4F 0x00C8      LSL      R0,R8,#+3
   \       0xC8   0x40C3             LSRS     R3,R3,R0
   \       0xCA   0xF003 0x03FF      AND      R3,R3,#0xFF
   \       0xCE   0x....             LDR.N    R2,??DataTable7_8
   \       0xD0   0xF5CB 0x7100      RSB      R1,R11,#+512
   \       0xD4   0xA803             ADD      R0,SP,#+12
   \       0xD6   0x4458             ADD      R0,R0,R11
   \       0xD8   0x....'....        BL       snprintf
   \       0xDC   0x4483             ADD      R11,R0,R11
    263          
    264                      j++;
   \       0xDE   0x1C7F             ADDS     R7,R7,#+1
    265                  }
   \                     ??mbedtls_debug_print_mpi_8: (+1)
   \       0xE0   0xF1A8 0x0801      SUB      R8,R8,#+1
   \                     ??mbedtls_debug_print_mpi_10: (+1)
   \       0xE4   0xF1B8 0x0F00      CMP      R8,#+0
   \       0xE8   0xD5BC             BPL.N    ??mbedtls_debug_print_mpi_6
   \       0xEA   0xF8DD 0x8008      LDR      R8,[SP, #+8]
   \       0xEE   0x9801             LDR      R0,[SP, #+4]
   \                     ??mbedtls_debug_print_mpi_11: (+1)
   \       0xF0   0x1E40             SUBS     R0,R0,#+1
   \                     ??mbedtls_debug_print_mpi_12: (+1)
   \       0xF2   0xD00F             BEQ.N    ??mbedtls_debug_print_mpi_13
   \       0xF4   0x2C00             CMP      R4,#+0
   \       0xF6   0xD007             BEQ.N    ??mbedtls_debug_print_mpi_14
   \       0xF8   0xF8DA 0x1008      LDR      R1,[R10, #+8]
   \       0xFC   0xEB01 0x0180      ADD      R1,R1,R0, LSL #+2
   \      0x100   0xF851 0x1C04      LDR      R1,[R1, #-4]
   \      0x104   0x2900             CMP      R1,#+0
   \      0x106   0xD0F3             BEQ.N    ??mbedtls_debug_print_mpi_11
   \                     ??mbedtls_debug_print_mpi_14: (+1)
   \      0x108   0x2103             MOVS     R1,#+3
   \      0x10A   0xF8CD 0x8008      STR      R8,[SP, #+8]
   \      0x10E   0x9001             STR      R0,[SP, #+4]
   \      0x110   0x4688             MOV      R8,R1
   \      0x112   0xE7E7             B.N      ??mbedtls_debug_print_mpi_10
    266          
    267              }
    268          
    269              if( zeros == 1 )
   \                     ??mbedtls_debug_print_mpi_13: (+1)
   \      0x114   0x2C01             CMP      R4,#+1
   \      0x116   0xD107             BNE.N    ??mbedtls_debug_print_mpi_15
    270                  idx += mbedtls_snprintf( str + idx, sizeof( str ) - idx, " 00" );
   \      0x118   0x....             ADR.N    R2,??DataTable7_1  ;; " 00"
   \      0x11A   0xF5CB 0x7100      RSB      R1,R11,#+512
   \      0x11E   0xA803             ADD      R0,SP,#+12
   \      0x120   0x4458             ADD      R0,R0,R11
   \      0x122   0x....'....        BL       snprintf
   \      0x126   0x4483             ADD      R11,R0,R11
    271          
    272              mbedtls_snprintf( str + idx, sizeof( str ) - idx, "\n" );
   \                     ??mbedtls_debug_print_mpi_15: (+1)
   \      0x128   0x....             ADR.N    R2,??DataTable7  ;; "\n"
   \      0x12A   0xF5CB 0x7100      RSB      R1,R11,#+512
   \      0x12E   0xA803             ADD      R0,SP,#+12
   \      0x130   0x4458             ADD      R0,R0,R11
   \      0x132   0x....'....        BL       snprintf
    273              debug_send_line( ssl, level, file, line, str );
   \      0x136   0xA803             ADD      R0,SP,#+12
   \      0x138   0x9000             STR      R0,[SP, #+0]
   \      0x13A   0x464B             MOV      R3,R9
   \      0x13C   0x4642             MOV      R2,R8
   \      0x13E   0x4631             MOV      R1,R6
   \      0x140   0x4628             MOV      R0,R5
   \      0x142   0x....'....        BL       debug_send_line
    274          }
   \                     ??mbedtls_debug_print_mpi_0: (+1)
   \      0x146   0xF50D 0x7D03      ADD      SP,SP,#+524
   \      0x14A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??mbedtls_debug_print_mpi_2: (+1)
   \      0x14E   0xF04F 0x0C1F      MOV      R12,#+31
   \                     ??mbedtls_debug_print_mpi_5: (+1)
   \      0x152   0xF1BC 0x0F00      CMP      R12,#+0
   \      0x156   0xF57F 0xAF7B      BPL.W    ??mbedtls_debug_print_mpi_3
   \                     ??mbedtls_debug_print_mpi_4: (+1)
   \      0x15A   0x468A             MOV      R10,R1
   \      0x15C   0x988C             LDR      R0,[SP, #+560]
   \      0x15E   0x4699             MOV      R9,R3
   \      0x160   0x4690             MOV      R8,R2
   \      0x162   0xEB0C 0x1C47      ADD      R12,R12,R7, LSL #+5
   \      0x166   0xF10C 0x0C01      ADD      R12,R12,#+1
   \      0x16A   0xF8CD 0xC000      STR      R12,[SP, #+0]
   \      0x16E   0x4603             MOV      R3,R0
   \      0x170   0x....             LDR.N    R2,??DataTable7_11
   \      0x172   0xF44F 0x7100      MOV      R1,#+512
   \      0x176   0xA803             ADD      R0,SP,#+12
   \      0x178   0x....'....        BL       snprintf
   \      0x17C   0xA803             ADD      R0,SP,#+12
   \      0x17E   0x9000             STR      R0,[SP, #+0]
   \      0x180   0x464B             MOV      R3,R9
   \      0x182   0x4642             MOV      R2,R8
   \      0x184   0x4631             MOV      R1,R6
   \      0x186   0x4628             MOV      R0,R5
   \      0x188   0x....'....        BL       debug_send_line
   \      0x18C   0x1C7F             ADDS     R7,R7,#+1
   \      0x18E   0x4638             MOV      R0,R7
   \      0x190   0x465F             MOV      R7,R11
   \      0x192   0xE7AE             B.N      ??mbedtls_debug_print_mpi_12
    275          #endif /* MBEDTLS_BIGNUM_C */
    276          
    277          #if defined(MBEDTLS_X509_CRT_PARSE_C)

   \                                 In section .text, align 2, keep-with-next
    278          static void debug_print_pk( const mbedtls_ssl_context *ssl, int level,
    279                                      const char *file, int line,
    280                                      const char *text, const mbedtls_pk_context *pk )
    281          {
   \                     debug_print_pk: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB08F             SUB      SP,SP,#+60
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0x4616             MOV      R6,R2
   \        0xC   0x461F             MOV      R7,R3
   \        0xE   0xF8DD 0x8064      LDR      R8,[SP, #+100]
    282              size_t i;
    283              mbedtls_pk_debug_item items[MBEDTLS_PK_DEBUG_MAX_ITEMS];
    284              char name[16];
    285          
    286              memset( items, 0, sizeof( items ) );
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0x2124             MOVS     R1,#+36
   \       0x16   0xA806             ADD      R0,SP,#+24
   \       0x18   0x....'....        BL       __aeabi_memset4
    287          
    288              if( mbedtls_pk_debug( pk, items ) != 0 )
   \       0x1C   0xA906             ADD      R1,SP,#+24
   \       0x1E   0x4640             MOV      R0,R8
   \       0x20   0x....'....        BL       mbedtls_pk_debug
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD008             BEQ.N    ??debug_print_pk_0
    289              {
    290                  debug_send_line( ssl, level, file, line,
    291                                    "invalid PK context\n" );
   \       0x28   0x....             LDR.N    R0,??DataTable7_12
   \       0x2A   0x9000             STR      R0,[SP, #+0]
   \       0x2C   0x463B             MOV      R3,R7
   \       0x2E   0x4632             MOV      R2,R6
   \       0x30   0x4629             MOV      R1,R5
   \       0x32   0x4620             MOV      R0,R4
   \       0x34   0x....'....        BL       debug_send_line
    292                  return;
   \       0x38   0xE054             B.N      ??debug_print_pk_1
    293              }
    294          
    295              for( i = 0; i < MBEDTLS_PK_DEBUG_MAX_ITEMS; i++ )
   \                     ??debug_print_pk_0: (+1)
   \       0x3A   0xF04F 0x0900      MOV      R9,#+0
   \       0x3E   0xF8DD 0x8060      LDR      R8,[SP, #+96]
   \       0x42   0xF10D 0x0B18      ADD      R11,SP,#+24
   \       0x46   0xE01E             B.N      ??debug_print_pk_2
    296              {
    297                  if( items[i].type == MBEDTLS_PK_DEBUG_NONE )
    298                      return;
    299          
    300                  mbedtls_snprintf( name, sizeof( name ), "%s%s", text, items[i].name );
    301                  name[sizeof( name ) - 1] = '\0';
    302          
    303                  if( items[i].type == MBEDTLS_PK_DEBUG_MPI )
    304                      mbedtls_debug_print_mpi( ssl, level, file, line, name, items[i].value );
    305                  else
    306          #if defined(MBEDTLS_ECP_C)
    307                  if( items[i].type == MBEDTLS_PK_DEBUG_ECP )
    308                      mbedtls_debug_print_ecp( ssl, level, file, line, name, items[i].value );
    309                  else
    310          #endif
    311                      debug_send_line( ssl, level, file, line,
    312                                        "should not happen\n" );
   \                     ??debug_print_pk_3: (+1)
   \       0x48   0x....             LDR.N    R0,??DataTable7_13
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0x463B             MOV      R3,R7
   \       0x4E   0x4632             MOV      R2,R6
   \       0x50   0x4629             MOV      R1,R5
   \       0x52   0x4620             MOV      R0,R4
   \       0x54   0x....'....        BL       debug_send_line
   \       0x58   0xE013             B.N      ??debug_print_pk_4
   \                     ??debug_print_pk_5: (+1)
   \       0x5A   0xFB0A 0xF009      MUL      R0,R10,R9
   \       0x5E   0xF81B 0x0000      LDRB     R0,[R11, R0]
   \       0x62   0x2802             CMP      R0,#+2
   \       0x64   0xD1F0             BNE.N    ??debug_print_pk_3
   \       0x66   0xA806             ADD      R0,SP,#+24
   \       0x68   0xFB0A 0xFA09      MUL      R10,R10,R9
   \       0x6C   0x4450             ADD      R0,R0,R10
   \       0x6E   0x6880             LDR      R0,[R0, #+8]
   \       0x70   0x9001             STR      R0,[SP, #+4]
   \       0x72   0xA802             ADD      R0,SP,#+8
   \       0x74   0x9000             STR      R0,[SP, #+0]
   \       0x76   0x463B             MOV      R3,R7
   \       0x78   0x4632             MOV      R2,R6
   \       0x7A   0x4629             MOV      R1,R5
   \       0x7C   0x4620             MOV      R0,R4
   \       0x7E   0x....'....        BL       mbedtls_debug_print_ecp
   \                     ??debug_print_pk_4: (+1)
   \       0x82   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??debug_print_pk_2: (+1)
   \       0x86   0xF1B9 0x0F03      CMP      R9,#+3
   \       0x8A   0xD22B             BCS.N    ??debug_print_pk_1
   \       0x8C   0xF04F 0x0A0C      MOV      R10,#+12
   \       0x90   0xFB0A 0xF009      MUL      R0,R10,R9
   \       0x94   0xF81B 0x0000      LDRB     R0,[R11, R0]
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD023             BEQ.N    ??debug_print_pk_1
   \       0x9C   0xA806             ADD      R0,SP,#+24
   \       0x9E   0xFB0A 0xF109      MUL      R1,R10,R9
   \       0xA2   0x4408             ADD      R0,R0,R1
   \       0xA4   0x6840             LDR      R0,[R0, #+4]
   \       0xA6   0x9000             STR      R0,[SP, #+0]
   \       0xA8   0x4643             MOV      R3,R8
   \       0xAA   0x....             LDR.N    R2,??DataTable7_14
   \       0xAC   0x2110             MOVS     R1,#+16
   \       0xAE   0xA802             ADD      R0,SP,#+8
   \       0xB0   0x....'....        BL       snprintf
   \       0xB4   0x2000             MOVS     R0,#+0
   \       0xB6   0xF88D 0x0017      STRB     R0,[SP, #+23]
   \       0xBA   0xFB0A 0xF009      MUL      R0,R10,R9
   \       0xBE   0xF81B 0x0000      LDRB     R0,[R11, R0]
   \       0xC2   0x2801             CMP      R0,#+1
   \       0xC4   0xD1C9             BNE.N    ??debug_print_pk_5
   \       0xC6   0xA806             ADD      R0,SP,#+24
   \       0xC8   0xFB0A 0xFA09      MUL      R10,R10,R9
   \       0xCC   0x4450             ADD      R0,R0,R10
   \       0xCE   0x6880             LDR      R0,[R0, #+8]
   \       0xD0   0x9001             STR      R0,[SP, #+4]
   \       0xD2   0xA802             ADD      R0,SP,#+8
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0x463B             MOV      R3,R7
   \       0xD8   0x4632             MOV      R2,R6
   \       0xDA   0x4629             MOV      R1,R5
   \       0xDC   0x4620             MOV      R0,R4
   \       0xDE   0x....'....        BL       mbedtls_debug_print_mpi
   \       0xE2   0xE7CE             B.N      ??debug_print_pk_4
    313              }
    314          }
   \                     ??debug_print_pk_1: (+1)
   \       0xE4   0xB00F             ADD      SP,SP,#+60
   \       0xE6   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    315          

   \                                 In section .text, align 2, keep-with-next
    316          static void debug_print_line_by_line( const mbedtls_ssl_context *ssl, int level,
    317                                                const char *file, int line, const char *text )
    318          {
   \                     debug_print_line_by_line: (+1)
   \        0x0   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \        0x4   0xF5AD 0x7D01      SUB      SP,SP,#+516
   \        0x8   0x4606             MOV      R6,R0
   \        0xA   0x460F             MOV      R7,R1
   \        0xC   0x4690             MOV      R8,R2
   \        0xE   0x4699             MOV      R9,R3
   \       0x10   0x9988             LDR      R1,[SP, #+544]
    319              char str[DEBUG_BUF_SIZE];
    320              const char *start, *cur;
    321          
    322              start = text;
    323              for( cur = text; *cur != '\0'; cur++ )
   \       0x12   0x460D             MOV      R5,R1
   \       0x14   0xE019             B.N      ??debug_print_line_by_line_0
    324              {
    325                  if( *cur == '\n' )
   \                     ??debug_print_line_by_line_1: (+1)
   \       0x16   0x280A             CMP      R0,#+10
   \       0x18   0xD116             BNE.N    ??debug_print_line_by_line_2
    326                  {
    327                      size_t len = cur - start + 1;
   \       0x1A   0x1A6C             SUBS     R4,R5,R1
   \       0x1C   0x1C64             ADDS     R4,R4,#+1
    328                      if( len > DEBUG_BUF_SIZE - 1 )
   \       0x1E   0xF5B4 0x7F00      CMP      R4,#+512
   \       0x22   0xD301             BCC.N    ??debug_print_line_by_line_3
    329                          len = DEBUG_BUF_SIZE - 1;
   \       0x24   0xF240 0x14FF      MOVW     R4,#+511
    330          
    331                      memcpy( str, start, len );
   \                     ??debug_print_line_by_line_3: (+1)
   \       0x28   0x4622             MOV      R2,R4
   \       0x2A   0xA801             ADD      R0,SP,#+4
   \       0x2C   0x....'....        BL       __aeabi_memcpy
    332                      str[len] = '\0';
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xA901             ADD      R1,SP,#+4
   \       0x34   0x5508             STRB     R0,[R1, R4]
    333          
    334                      debug_send_line( ssl, level, file, line, str );
   \       0x36   0xA801             ADD      R0,SP,#+4
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x464B             MOV      R3,R9
   \       0x3C   0x4642             MOV      R2,R8
   \       0x3E   0x4639             MOV      R1,R7
   \       0x40   0x4630             MOV      R0,R6
   \       0x42   0x....'....        BL       debug_send_line
    335          
    336                      start = cur + 1;
   \       0x46   0x1C69             ADDS     R1,R5,#+1
    337                  }
    338              }
   \                     ??debug_print_line_by_line_2: (+1)
   \       0x48   0x1C6D             ADDS     R5,R5,#+1
   \                     ??debug_print_line_by_line_0: (+1)
   \       0x4A   0x7828             LDRB     R0,[R5, #+0]
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD1E2             BNE.N    ??debug_print_line_by_line_1
    339          }
   \       0x50   0xF50D 0x7D01      ADD      SP,SP,#+516
   \       0x54   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    340          

   \                                 In section .text, align 2, keep-with-next
    341          void mbedtls_debug_print_crt( const mbedtls_ssl_context *ssl, int level,
    342                                const char *file, int line,
    343                                const char *text, const mbedtls_x509_crt *crt )
    344          {
   \                     mbedtls_debug_print_crt: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xF5AD 0x6DC1      SUB      SP,SP,#+1544
    345              char str[DEBUG_BUF_SIZE];
    346              int i = 0;
   \        0x8   0xF04F 0x0A00      MOV      R10,#+0
    347          
    348              if( ssl->conf == NULL || ssl->conf->f_dbg == NULL || crt == NULL || level > debug_threshold )
   \        0xC   0x6804             LDR      R4,[R0, #+0]
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD040             BEQ.N    ??mbedtls_debug_print_crt_0
   \       0x12   0x6924             LDR      R4,[R4, #+16]
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD03D             BEQ.N    ??mbedtls_debug_print_crt_0
   \       0x18   0xF8DD 0x462C      LDR      R4,[SP, #+1580]
   \       0x1C   0x2C00             CMP      R4,#+0
   \       0x1E   0xD039             BEQ.N    ??mbedtls_debug_print_crt_0
   \       0x20   0xF8DD 0x5628      LDR      R5,[SP, #+1576]
   \       0x24   0x....             LDR.N    R6,??DataTable7_3
   \       0x26   0x6836             LDR      R6,[R6, #+0]
   \       0x28   0x428E             CMP      R6,R1
   \       0x2A   0xDA37             BGE.N    ??mbedtls_debug_print_crt_1
    349                  return;
   \       0x2C   0xE032             B.N      ??mbedtls_debug_print_crt_0
    350          
    351              while( crt != NULL )
    352              {
    353                  char buf[1024];
    354          
    355                  mbedtls_snprintf( str, sizeof( str ), "%s #%d:\n", text, ++i );
   \                     ??mbedtls_debug_print_crt_2: (+1)
   \       0x2E   0xF10A 0x0A01      ADD      R10,R10,#+1
   \       0x32   0xF8CD 0xA000      STR      R10,[SP, #+0]
   \       0x36   0x462B             MOV      R3,R5
   \       0x38   0x....             LDR.N    R2,??DataTable7_15
   \       0x3A   0xF44F 0x7100      MOV      R1,#+512
   \       0x3E   0xF50D 0x6081      ADD      R0,SP,#+1032
   \       0x42   0x....'....        BL       snprintf
    356                  debug_send_line( ssl, level, file, line, str );
   \       0x46   0xF50D 0x6081      ADD      R0,SP,#+1032
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0x464B             MOV      R3,R9
   \       0x4E   0x4642             MOV      R2,R8
   \       0x50   0x4639             MOV      R1,R7
   \       0x52   0x4630             MOV      R0,R6
   \       0x54   0x....'....        BL       debug_send_line
    357          
    358                  mbedtls_x509_crt_info( buf, sizeof( buf ) - 1, "", crt );
   \       0x58   0x4623             MOV      R3,R4
   \       0x5A   0x....             ADR.N    R2,??DataTable7_2  ;; ""
   \       0x5C   0xF240 0x31FF      MOVW     R1,#+1023
   \       0x60   0xA802             ADD      R0,SP,#+8
   \       0x62   0x....'....        BL       mbedtls_x509_crt_info
    359                  debug_print_line_by_line( ssl, level, file, line, buf );
   \       0x66   0xA802             ADD      R0,SP,#+8
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0x464B             MOV      R3,R9
   \       0x6C   0x4642             MOV      R2,R8
   \       0x6E   0x4639             MOV      R1,R7
   \       0x70   0x4630             MOV      R0,R6
   \       0x72   0x....'....        BL       debug_print_line_by_line
    360          
    361                  debug_print_pk( ssl, level, file, line, "crt->", &crt->pk );
   \       0x76   0xF104 0x00BC      ADD      R0,R4,#+188
   \       0x7A   0x9001             STR      R0,[SP, #+4]
   \       0x7C   0x....             LDR.N    R0,??DataTable7_16
   \       0x7E   0x9000             STR      R0,[SP, #+0]
   \       0x80   0x464B             MOV      R3,R9
   \       0x82   0x4642             MOV      R2,R8
   \       0x84   0x4639             MOV      R1,R7
   \       0x86   0x4630             MOV      R0,R6
   \       0x88   0x....'....        BL       debug_print_pk
    362          
    363                  crt = crt->next;
   \       0x8C   0xF8D4 0x4130      LDR      R4,[R4, #+304]
    364              }
   \                     ??mbedtls_debug_print_crt_3: (+1)
   \       0x90   0x2C00             CMP      R4,#+0
   \       0x92   0xD1CC             BNE.N    ??mbedtls_debug_print_crt_2
    365          }
   \                     ??mbedtls_debug_print_crt_0: (+1)
   \       0x94   0xF50D 0x6DC1      ADD      SP,SP,#+1544
   \       0x98   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \                     ??mbedtls_debug_print_crt_1: (+1)
   \       0x9C   0x4606             MOV      R6,R0
   \       0x9E   0x460F             MOV      R7,R1
   \       0xA0   0x4690             MOV      R8,R2
   \       0xA2   0x4699             MOV      R9,R3
   \       0xA4   0xE7F4             B.N      ??mbedtls_debug_print_crt_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x20 0x20          DC8      "   "
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x20 0x30          DC8      " 00"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     debug_threshold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x73          DC8 "%s() returned %d (-0x%04x)\012"
   \              0x28 0x29    
   \              0x20 0x72    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x20 0x28    
   \              0x2D 0x30    
   \              0x78 0x25    
   \              0x30 0x34    
   \              0x78 0x29    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x64 0x75          DC8 "dumping '%s' (%u bytes)\012"
   \              0x6D 0x70    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x27 0x25    
   \              0x73 0x27    
   \              0x20 0x28    
   \              0x25 0x75    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x29 0x0A    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x20 0x20          DC8 "  %s\012"
   \              0x25 0x73    
   \              0x0A 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x25 0x30          DC8 "%04x: "
   \              0x34 0x78    
   \              0x3A 0x20    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x20 0x25          DC8 " %02x"
   \              0x30 0x32    
   \              0x78 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \        0x0   0x20 0x20          DC8 "   "
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x25 0x73          DC8 "%s(X)"
   \              0x28 0x58    
   \              0x29 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x25 0x73          DC8 "%s(Y)"
   \              0x28 0x59    
   \              0x29 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x76 0x61          DC8 "value of '%s' (%d bits) is:\012"
   \              0x6C 0x75    
   \              0x65 0x20    
   \              0x6F 0x66    
   \              0x20 0x27    
   \              0x25 0x73    
   \              0x27 0x20    
   \              0x28 0x25    
   \              0x64 0x20    
   \              0x62 0x69    
   \              0x74 0x73    
   \              0x29 0x20    
   \              0x69 0x73    
   \              0x3A 0x0A    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \        0x0   0x0A 0x00          DC8 "\012"

   \                                 In section .rodata, align 4
   \        0x0   0x20 0x30          DC8 " 00"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x69 0x6E          DC8 "invalid PK context\012"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x50 0x4B    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x74 0x65    
   \              0x78 0x74    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x25 0x73          DC8 "%s%s"
   \              0x25 0x73    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x73 0x68          DC8 "should not happen\012"
   \              0x6F 0x75    
   \              0x6C 0x64    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x68    
   \              0x61 0x70    
   \              0x70 0x65    
   \              0x6E 0x0A    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x25 0x73          DC8 "%s #%d:\012"
   \              0x20 0x23    
   \              0x25 0x64    
   \              0x3A 0x0A    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 1
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x63 0x72          DC8 "crt->"
   \              0x74 0x2D    
   \              0x3E 0x00    
   \        0x6   0x00 0x00          DC8 0, 0
    366          #endif /* MBEDTLS_X509_CRT_PARSE_C */
    367          
    368          #endif /* MBEDTLS_DEBUG_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     544   debug_print_line_by_line
       544   -> __aeabi_memcpy
       544   -> debug_send_line
      96   debug_print_pk
        96   -> __aeabi_memset4
        96   -> debug_send_line
        96   -> mbedtls_debug_print_ecp
        96   -> mbedtls_debug_print_mpi
        96   -> mbedtls_pk_debug
        96   -> snprintf
      16   debug_send_line
        16   -- Indirect call
     576   mbedtls_debug_print_buf
       576   -> __aeabi_memset4
       576   -> debug_send_line
       576   -> snprintf
    1576   mbedtls_debug_print_crt
      1576   -> debug_print_line_by_line
      1576   -> debug_print_pk
      1576   -> debug_send_line
      1576   -> mbedtls_x509_crt_info
      1576   -> snprintf
     552   mbedtls_debug_print_ecp
       552   -> mbedtls_debug_print_mpi
       552   -> snprintf
     560   mbedtls_debug_print_mpi
       560   -> debug_send_line
       560   -> snprintf
     536   mbedtls_debug_print_msg
       536   -> debug_send_line
       536   -> vsnprintf
     544   mbedtls_debug_print_ret
       544   -> debug_send_line
       544   -> snprintf
       0   mbedtls_debug_set_threshold


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      28  ?_0
      28  ?_1
       4  ?_10
      20  ?_11
       8  ?_12
      20  ?_13
      12  ?_14
       1  ?_15
       8  ?_16
       8  ?_2
       8  ?_3
       8  ?_4
       4  ?_5
       8  ?_6
       8  ?_7
      32  ?_8
       2  ?_9
      88  debug_print_line_by_line
     234  debug_print_pk
      20  debug_send_line
       4  debug_threshold
     312  mbedtls_debug_print_buf
     166  mbedtls_debug_print_crt
     128  mbedtls_debug_print_ecp
     404  mbedtls_debug_print_mpi
      96  mbedtls_debug_print_msg
      88  mbedtls_debug_print_ret
       8  mbedtls_debug_set_threshold

 
     4 bytes in section .bss
   207 bytes in section .rodata
 1 616 bytes in section .text
 
 1 616 bytes of CODE  memory
   207 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: none
