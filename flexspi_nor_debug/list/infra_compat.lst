###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:27
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_compat.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWFC1B.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_compat.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\infra_compat.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\infra_compat.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\infra\infra_compat.c
      1          #include "infra_config.h"
      2          
      3          #ifdef INFRA_COMPAT
      4          #include <string.h>
      5          #include "infra_types.h"
      6          #include "infra_defs.h"
      7          #include "infra_compat.h"
      8          
      9          #if !defined(INFRA_LOG)
     10          void IOT_SetLogLevel(IOT_LogLevel level) {}
     11          #endif
     12          
     13          #ifdef MQTT_COMM_ENABLED
     14          #include "dev_sign_api.h"
     15          #include "mqtt_api.h"
     16          
     17          #ifdef INFRA_LOG
     18              #include "infra_log.h"
     19              #define sdk_err(...)       log_err("infra_compat", __VA_ARGS__)
     20              #define sdk_info(...)      log_info("infra_compat", __VA_ARGS__)
     21          #else
     22              #define sdk_err(...)
     23              #define sdk_info(...)
     24          #endif
     25          
     26          void *HAL_Malloc(uint32_t size);
     27          void HAL_Free(void *ptr);
     28          

   \                                 In section .bss, align 4
     29          static sdk_impl_ctx_t g_sdk_impl_ctx = {0};
   \                     g_sdk_impl_ctx:
   \        0x0                      DS8 16
     30          /* global variable for mqtt construction */

   \                                 In section .bss, align 4
     31          static iotx_conn_info_t g_iotx_conn_info = {0};
   \                     g_iotx_conn_info:
   \        0x0                      DS8 24

   \                                 In section .bss, align 1
     32          static char g_empty_string[1] = "";
   \                     g_empty_string:
   \        0x0                      DS8 1
     33          

   \                                 In section .text, align 2, keep-with-next
     34          int IOT_SetupConnInfo(const char *product_key,
     35                                const char *device_name,
     36                                const char *device_secret,
     37                                void **info_ptr)
     38          {
   \                     IOT_SetupConnInfo: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460E             MOV      R6,R1
   \        0x4   0x4615             MOV      R5,R2
   \        0x6   0x461C             MOV      R4,R3
     39              if (product_key == NULL || device_name == NULL || device_secret == NULL ||
     40                  strlen(product_key) > IOTX_PRODUCT_KEY_LEN ||
     41                  strlen(device_name) > IOTX_DEVICE_NAME_LEN ||
     42                  strlen(device_secret) > IOTX_DEVICE_SECRET_LEN) {
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD011             BEQ.N    ??IOT_SetupConnInfo_0
   \        0xC   0x2E00             CMP      R6,#+0
   \        0xE   0xD00F             BEQ.N    ??IOT_SetupConnInfo_0
   \       0x10   0x2D00             CMP      R5,#+0
   \       0x12   0xD00D             BEQ.N    ??IOT_SetupConnInfo_0
   \       0x14   0x....'....        BL       strlen
   \       0x18   0x2815             CMP      R0,#+21
   \       0x1A   0xD209             BCS.N    ??IOT_SetupConnInfo_0
   \       0x1C   0x4630             MOV      R0,R6
   \       0x1E   0x....'....        BL       strlen
   \       0x22   0x2821             CMP      R0,#+33
   \       0x24   0xD204             BCS.N    ??IOT_SetupConnInfo_0
   \       0x26   0x4628             MOV      R0,R5
   \       0x28   0x....'....        BL       strlen
   \       0x2C   0x2841             CMP      R0,#+65
   \       0x2E   0xD302             BCC.N    ??IOT_SetupConnInfo_1
     43                  return NULL_VALUE_ERROR;
   \                     ??IOT_SetupConnInfo_0: (+1)
   \       0x30   0xF06F 0x0001      MVN      R0,#+1
   \       0x34   0xBD70             POP      {R4-R6,PC}
     44              }
     45          
     46              if (info_ptr) {
   \                     ??IOT_SetupConnInfo_1: (+1)
   \       0x36   0x2C00             CMP      R4,#+0
   \       0x38   0xD00C             BEQ.N    ??IOT_SetupConnInfo_2
     47                  memset(&g_iotx_conn_info, 0, sizeof(iotx_conn_info_t));
   \       0x3A   0x....             LDR.N    R5,??DataTable22
   \       0x3C   0x2200             MOVS     R2,#+0
   \       0x3E   0x2118             MOVS     R1,#+24
   \       0x40   0x4628             MOV      R0,R5
   \       0x42   0x....'....        BL       __aeabi_memset4
     48                  g_iotx_conn_info.host_name = g_empty_string;
   \       0x46   0x....             LDR.N    R0,??DataTable22_1
   \       0x48   0x6068             STR      R0,[R5, #+4]
     49                  g_iotx_conn_info.client_id = g_empty_string;
   \       0x4A   0x60A8             STR      R0,[R5, #+8]
     50                  g_iotx_conn_info.username = g_empty_string;
   \       0x4C   0x60E8             STR      R0,[R5, #+12]
     51                  g_iotx_conn_info.password = g_empty_string;
   \       0x4E   0x6128             STR      R0,[R5, #+16]
     52                  g_iotx_conn_info.pub_key = g_empty_string;
   \       0x50   0x6168             STR      R0,[R5, #+20]
     53          
     54                  *info_ptr = &g_iotx_conn_info;
   \       0x52   0x6025             STR      R5,[R4, #+0]
     55              }
     56              return SUCCESS_RETURN;
   \                     ??IOT_SetupConnInfo_2: (+1)
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0xBD70             POP      {R4-R6,PC}       ;; return
     57          }
     58          #endif /* #ifdef MQTT_COMM_ENABLED */
     59          
     60          #if defined(DEVICE_MODEL_CLASSIC) && defined(DEVICE_MODEL_ENABLED)
     61              #include "iotx_dm.h"
     62          #endif
     63          
     64          #if defined(DEVICE_MODEL_GATEWAY)
     65              extern int iot_linkkit_subdev_query_id(char product_key[IOTX_PRODUCT_KEY_LEN + 1], char device_name[IOTX_DEVICE_NAME_LEN + 1]);
     66          #endif
     67          

   \                                 In section .text, align 4, keep-with-next
     68          int IOT_Ioctl(int option, void *data)
     69          {
   \                     IOT_Ioctl: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
     70              int                 res = SUCCESS_RETURN;
   \        0x4   0x2500             MOVS     R5,#+0
     71              sdk_impl_ctx_t     *ctx = NULL;
     72          
     73              ctx = &g_sdk_impl_ctx;
   \        0x6   0x....             LDR.N    R6,??DataTable22_2
     74          
     75              if (option < 0 || data == NULL) {
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD44E             BMI.N    ??IOT_Ioctl_1
   \        0xC   0x2C00             CMP      R4,#+0
   \        0xE   0xD04C             BEQ.N    ??IOT_Ioctl_1
     76                  return FAIL_RETURN;
     77              }
     78          
     79              switch (option) {
   \       0x10   0x280A             CMP      R0,#+10
   \       0x12   0xD872             BHI.N    ??IOT_Ioctl_2
   \       0x14   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??IOT_Ioctl_0:
   \       0x18   0x06 0x09          DC8      0x6,0x9,0xC,0x35
   \              0x0C 0x35    
   \       0x1C   0x61 0x64          DC8      0x61,0x64,0x67,0x67
   \              0x67 0x67    
   \       0x20   0x6C 0x73          DC8      0x6C,0x73,0x73,0x0
   \              0x73 0x00    
     80                  case IOTX_IOCTL_SET_REGION: {
     81                      ctx->domain_type = *(int *)data;
   \                     ??IOT_Ioctl_3: (+1)
   \       0x24   0x6820             LDR      R0,[R4, #+0]
   \       0x26   0x6030             STR      R0,[R6, #+0]
     82                      /* iotx_guider_set_region(*(int *)data); */
     83          
     84                      res = SUCCESS_RETURN;
     85                  }
     86                  break;
   \       0x28   0xE069             B.N      ??IOT_Ioctl_4
     87                  case IOTX_IOCTL_GET_REGION: {
     88                      *(int *)data = ctx->domain_type;
   \                     ??IOT_Ioctl_5: (+1)
   \       0x2A   0x6830             LDR      R0,[R6, #+0]
   \       0x2C   0x6020             STR      R0,[R4, #+0]
     89          
     90                      res = SUCCESS_RETURN;
     91                  }
     92                  break;
   \       0x2E   0xE066             B.N      ??IOT_Ioctl_4
     93                  case IOTX_IOCTL_SET_MQTT_DOMAIN: {
     94                      ctx->domain_type = IOTX_CLOUD_REGION_CUSTOM;
   \                     ??IOT_Ioctl_6: (+1)
   \       0x30   0x2005             MOVS     R0,#+5
   \       0x32   0x6030             STR      R0,[R6, #+0]
     95          
     96                      if (ctx->cloud_custom_domain) {
   \       0x34   0x68B0             LDR      R0,[R6, #+8]
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD005             BEQ.N    ??IOT_Ioctl_7
     97                          HAL_Free(ctx->cloud_custom_domain);
   \       0x3A   0x....'....        BL       HAL_Free
     98                          ctx->cloud_custom_domain = NULL;
   \       0x3E   0x4628             MOV      R0,R5
   \       0x40   0x60B0             STR      R0,[R6, #+8]
     99                          g_infra_mqtt_domain[IOTX_CLOUD_REGION_CUSTOM] = NULL;
   \       0x42   0x....             LDR.N    R1,??DataTable22_3
   \       0x44   0x6148             STR      R0,[R1, #+20]
    100                      }
    101                      ctx->cloud_custom_domain = HAL_Malloc(strlen((char *)data) + 1);
   \                     ??IOT_Ioctl_7: (+1)
   \       0x46   0x4620             MOV      R0,R4
   \       0x48   0x....'....        BL       strlen
   \       0x4C   0x1C40             ADDS     R0,R0,#+1
   \       0x4E   0x....'....        BL       HAL_Malloc
   \       0x52   0x60B0             STR      R0,[R6, #+8]
    102                      if (ctx->cloud_custom_domain == NULL) {
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD028             BEQ.N    ??IOT_Ioctl_1
    103                          return FAIL_RETURN;
    104                      }
    105                      memset(ctx->cloud_custom_domain, 0, strlen((char *)data) + 1);
   \       0x58   0x4620             MOV      R0,R4
   \       0x5A   0x....'....        BL       strlen
   \       0x5E   0x1C40             ADDS     R0,R0,#+1
   \       0x60   0x462A             MOV      R2,R5
   \       0x62   0x4601             MOV      R1,R0
   \       0x64   0x68B0             LDR      R0,[R6, #+8]
   \       0x66   0x....'....        BL       __aeabi_memset
    106                      memcpy(ctx->cloud_custom_domain, data, strlen((char *)data));
   \       0x6A   0x4620             MOV      R0,R4
   \       0x6C   0x....'....        BL       strlen
   \       0x70   0x4602             MOV      R2,R0
   \       0x72   0x4621             MOV      R1,R4
   \       0x74   0x68B0             LDR      R0,[R6, #+8]
   \       0x76   0x....'....        BL       __aeabi_memcpy
    107                      g_infra_mqtt_domain[IOTX_CLOUD_REGION_CUSTOM] = (const char *)ctx->cloud_custom_domain;
   \       0x7A   0x68B0             LDR      R0,[R6, #+8]
   \       0x7C   0x....             LDR.N    R1,??DataTable22_3
   \       0x7E   0x6148             STR      R0,[R1, #+20]
    108                      res = SUCCESS_RETURN;
    109                  }
    110                  break;
   \       0x80   0xE03D             B.N      ??IOT_Ioctl_4
    111                  case IOTX_IOCTL_SET_HTTP_DOMAIN: {
    112                      ctx->domain_type = IOTX_HTTP_REGION_CUSTOM;
   \                     ??IOT_Ioctl_8: (+1)
   \       0x82   0x2005             MOVS     R0,#+5
   \       0x84   0x6030             STR      R0,[R6, #+0]
    113          
    114                      if (ctx->http_custom_domain) {
   \       0x86   0x68F0             LDR      R0,[R6, #+12]
   \       0x88   0x2800             CMP      R0,#+0
   \       0x8A   0xD005             BEQ.N    ??IOT_Ioctl_9
    115                          HAL_Free(ctx->http_custom_domain);
   \       0x8C   0x....'....        BL       HAL_Free
    116                          ctx->http_custom_domain = NULL;
   \       0x90   0x4628             MOV      R0,R5
   \       0x92   0x60F0             STR      R0,[R6, #+12]
    117                          g_infra_http_domain[IOTX_CLOUD_REGION_CUSTOM] = NULL;
   \       0x94   0x....             LDR.N    R1,??DataTable22_4
   \       0x96   0x6148             STR      R0,[R1, #+20]
    118                      }
    119                      ctx->http_custom_domain = HAL_Malloc(strlen((char *)data) + 1);
   \                     ??IOT_Ioctl_9: (+1)
   \       0x98   0x4620             MOV      R0,R4
   \       0x9A   0x....'....        BL       strlen
   \       0x9E   0x1C40             ADDS     R0,R0,#+1
   \       0xA0   0x....'....        BL       HAL_Malloc
   \       0xA4   0x60F0             STR      R0,[R6, #+12]
    120                      if (ctx->http_custom_domain == NULL) {
   \       0xA6   0x2800             CMP      R0,#+0
   \       0xA8   0xD102             BNE.N    ??IOT_Ioctl_10
    121                          return FAIL_RETURN;
   \                     ??IOT_Ioctl_1: (+1)
   \       0xAA   0xF04F 0x30FF      MOV      R0,#-1
   \       0xAE   0xBD70             POP      {R4-R6,PC}
    122                      }
    123                      memset(ctx->http_custom_domain, 0, strlen((char *)data) + 1);
   \                     ??IOT_Ioctl_10: (+1)
   \       0xB0   0x4620             MOV      R0,R4
   \       0xB2   0x....'....        BL       strlen
   \       0xB6   0x1C40             ADDS     R0,R0,#+1
   \       0xB8   0x462A             MOV      R2,R5
   \       0xBA   0x4601             MOV      R1,R0
   \       0xBC   0x68F0             LDR      R0,[R6, #+12]
   \       0xBE   0x....'....        BL       __aeabi_memset
    124                      memcpy(ctx->http_custom_domain, data, strlen((char *)data));
   \       0xC2   0x4620             MOV      R0,R4
   \       0xC4   0x....'....        BL       strlen
   \       0xC8   0x4602             MOV      R2,R0
   \       0xCA   0x4621             MOV      R1,R4
   \       0xCC   0x68F0             LDR      R0,[R6, #+12]
   \       0xCE   0x....'....        BL       __aeabi_memcpy
    125                      g_infra_http_domain[IOTX_CLOUD_REGION_CUSTOM] = (const char *)ctx->http_custom_domain;
   \       0xD2   0x68F0             LDR      R0,[R6, #+12]
   \       0xD4   0x....             LDR.N    R1,??DataTable22_4
   \       0xD6   0x6148             STR      R0,[R1, #+20]
    126                      res = SUCCESS_RETURN;
    127                  }
    128                  break;
   \       0xD8   0xE011             B.N      ??IOT_Ioctl_4
    129                  case IOTX_IOCTL_SET_DYNAMIC_REGISTER: {
    130                      ctx->dynamic_register = *(int *)data;
   \                     ??IOT_Ioctl_11: (+1)
   \       0xDA   0x6820             LDR      R0,[R4, #+0]
   \       0xDC   0x6070             STR      R0,[R6, #+4]
    131          
    132                      res = SUCCESS_RETURN;
    133                  }
    134                  break;
   \       0xDE   0xE00E             B.N      ??IOT_Ioctl_4
    135                  case IOTX_IOCTL_GET_DYNAMIC_REGISTER: {
    136                      *(int *)data = ctx->dynamic_register;
   \                     ??IOT_Ioctl_12: (+1)
   \       0xE0   0x6870             LDR      R0,[R6, #+4]
   \       0xE2   0x6020             STR      R0,[R4, #+0]
    137          
    138                      res = SUCCESS_RETURN;
    139                  }
    140                  break;
   \       0xE4   0xE00B             B.N      ??IOT_Ioctl_4
    141          #if defined(DEVICE_MODEL_CLASSIC) && defined(DEVICE_MODEL_ENABLED) && !defined(DEPRECATED_LINKKIT)
    142          #if !defined(DEVICE_MODEL_RAWDATA_SOLO)
    143                  case IOTX_IOCTL_RECV_EVENT_REPLY:
    144                  case IOTX_IOCTL_RECV_PROP_REPLY: {
    145                      res = iotx_dm_set_opt(IMPL_LINKKIT_IOCTL_SWITCH_EVENT_POST_REPLY, data);
   \                     ??IOT_Ioctl_13: (+1)
   \       0xE6   0x2001             MOVS     R0,#+1
   \       0xE8   0x....'....        BL       iotx_dm_set_opt
   \       0xEC   0x4605             MOV      R5,R0
    146                  }
    147                  break;
   \       0xEE   0xE006             B.N      ??IOT_Ioctl_4
    148                  case IOTX_IOCTL_SEND_PROP_SET_REPLY : {
    149                      res = iotx_dm_set_opt(IMPL_LINKKIT_IOCTL_SWITCH_PROPERTY_SET_REPLY, data);
   \                     ??IOT_Ioctl_14: (+1)
   \       0xF0   0x2002             MOVS     R0,#+2
   \       0xF2   0x....'....        BL       iotx_dm_set_opt
   \       0xF6   0x4605             MOV      R5,R0
    150                  }
    151                  break;
   \       0xF8   0xE001             B.N      ??IOT_Ioctl_4
    152          #endif
    153                  case IOTX_IOCTL_SET_SUBDEV_SIGN: {
    154                      /* todo */
    155                  }
    156                  break;
    157                  case IOTX_IOCTL_GET_SUBDEV_LOGIN: {
    158                      /* todo */
    159                  }
    160                  break;
    161          #if defined(DEVICE_MODEL_CLASSIC) && defined(DEVICE_MODEL_GATEWAY)
    162          #ifdef DEVICE_MODEL_SUBDEV_OTA
    163                  case IOTX_IOCTL_SET_OTA_DEV_ID: {
    164                      int devid = *(int *)(data);
    165                      res = iotx_dm_ota_switch_device(devid);
    166                  }
    167                  break;
    168          #endif
    169          #endif
    170          #else
    171                  case IOTX_IOCTL_RECV_EVENT_REPLY:
    172                  case IOTX_IOCTL_RECV_PROP_REPLY:
    173                  case IOTX_IOCTL_SEND_PROP_SET_REPLY:
    174                  case IOTX_IOCTL_GET_SUBDEV_LOGIN: {
    175                      res = SUCCESS_RETURN;
    176                  }
    177                  break;
    178          #endif
    179          #if defined(DEVICE_MODEL_GATEWAY)
    180                  case IOTX_IOCTL_QUERY_DEVID: {
    181                      iotx_dev_meta_info_t *dev_info = (iotx_dev_meta_info_t *)data;
    182          
    183                      res = iot_linkkit_subdev_query_id(dev_info->product_key, dev_info->device_name);
    184                  }
    185                  break;
    186          #endif
    187                  default: {
    188                      res = FAIL_RETURN;
   \                     ??IOT_Ioctl_2: (+1)
   \       0xFA   0xF04F 0x35FF      MOV      R5,#-1
    189                  }
    190                  break;
    191              }
    192          
    193              return res;
   \                     ??IOT_Ioctl_4: (+1)
   \       0xFE   0x4628             MOV      R0,R5
   \      0x100   0xBD70             POP      {R4-R6,PC}       ;; return
    194          }
    195          

   \                                 In section .text, align 2, keep-with-next
    196          void IOT_DumpMemoryStats(IOT_LogLevel level)
    197          {
    198          #ifdef INFRA_MEM_STATS
    199              int             lvl = (int)level;
    200          
    201              if (lvl > LOG_DEBUG_LEVEL) {
    202                  lvl = LOG_DEBUG_LEVEL;
    203                  HAL_Printf("Invalid input level, using default: %d => %d", level, lvl);
    204              }
    205          
    206              LITE_dump_malloc_free_stats(lvl);
    207          #endif
    208          }
   \                     IOT_DumpMemoryStats: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    209          

   \                                 In section .bss, align 4
    210          static void *g_event_monitor = NULL;
   \                     g_event_monitor:
   \        0x0                      DS8 4
    211          

   \                                 In section .text, align 2, keep-with-next
    212          int iotx_event_regist_cb(void (*monitor_cb)(int event))
    213          {
    214              g_event_monitor = (void *)monitor_cb;
   \                     iotx_event_regist_cb: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_5
   \        0x2   0x6008             STR      R0,[R1, #+0]
    215              return 0;
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return
    216          }
    217          

   \                                 In section .text, align 2, keep-with-next
    218          int iotx_event_post(int event)
    219          {
   \                     iotx_event_post: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    220              if (g_event_monitor == NULL) {
   \        0x2   0x....             LDR.N    R2,??DataTable22_5
   \        0x4   0x6811             LDR      R1,[R2, #+0]
   \        0x6   0x2900             CMP      R1,#+0
   \        0x8   0xD102             BNE.N    ??iotx_event_post_0
    221                  return -1;
   \        0xA   0xF04F 0x30FF      MOV      R0,#-1
   \        0xE   0xBD02             POP      {R1,PC}
    222              }
    223              ((void (*)(int))g_event_monitor)(event);
   \                     ??iotx_event_post_0: (+1)
   \       0x10   0x4788             BLX      R1
    224              return 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0xBD02             POP      {R1,PC}          ;; return
    225          }
    226          
    227          typedef struct {
    228              int eventid;
    229              void *callback;
    230          } impl_event_map_t;
    231          

   \                                 In section .data, align 4
    232          static impl_event_map_t g_impl_event_map[] = {
   \                     g_impl_event_map:
   \        0x0   0x0000'0000        DC32 0, 0H, 1, 0H, 2, 0H, 3, 0H, 4, 0H, 5, 0H, 6, 0H, 7, 0H, 8, 0H, 9
   \              0x0000'0000  
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0002  
   \              0x0000'0000  
   \              0x0000'0003  
   \              0x0000'0000  
   \              0x0000'0004  
   \              0x0000'0000  
   \              0x0000'0005  
   \              0x0000'0000  
   \              0x0000'0006  
   \              0x0000'0000  
   \              0x0000'0007  
   \              0x0000'0000  
   \              0x0000'0008  
   \              0x0000'0000  
   \              0x0000'0009  
   \       0x4C   0x0000'0000        DC32 0H, 10, 0H, 11, 0H, 12, 0H, 13, 0H, 14, 0H, 15, 0H, 16, 0H, 17, 0H
   \              0x0000'000A  
   \              0x0000'0000  
   \              0x0000'000B  
   \              0x0000'0000  
   \              0x0000'000C  
   \              0x0000'0000  
   \              0x0000'000D  
   \              0x0000'0000  
   \              0x0000'000E  
   \              0x0000'0000  
   \              0x0000'000F  
   \              0x0000'0000  
   \              0x0000'0010  
   \              0x0000'0000  
   \              0x0000'0011  
   \              0x0000'0000  
    233              {ITE_AWSS_STATUS,          NULL},
    234              {ITE_CONNECT_SUCC,         NULL},
    235              {ITE_CONNECT_FAIL,         NULL},
    236              {ITE_DISCONNECTED,         NULL},
    237              {ITE_RAWDATA_ARRIVED,      NULL},
    238              {ITE_SERVICE_REQUEST,       NULL},
    239              {ITE_PROPERTY_SET,         NULL},
    240              {ITE_PROPERTY_GET,         NULL},
    241          #ifdef DEVICE_MODEL_SHADOW
    242              {ITE_PROPERTY_DESIRED_GET_REPLY,         NULL},
    243          #endif
    244              {ITE_REPORT_REPLY,         NULL},
    245              {ITE_TRIGGER_EVENT_REPLY,  NULL},
    246              {ITE_TIMESTAMP_REPLY,      NULL},
    247              {ITE_TOPOLIST_REPLY,       NULL},
    248              {ITE_PERMIT_JOIN,          NULL},
    249              {ITE_INITIALIZE_COMPLETED, NULL},
    250              {ITE_FOTA,                 NULL},
    251              {ITE_COTA,                 NULL},
    252              {ITE_MQTT_CONNECT_SUCC,    NULL}
    253          };
    254          

   \                                 In section .text, align 2, keep-with-next
    255          void *iotx_event_callback(int evt)
    256          {
    257              if (evt < 0 || evt >= sizeof(g_impl_event_map) / sizeof(impl_event_map_t)) {
   \                     iotx_event_callback: (+1)
   \        0x0   0x2800             CMP      R0,#+0
   \        0x2   0xD401             BMI.N    ??iotx_event_callback_0
   \        0x4   0x2812             CMP      R0,#+18
   \        0x6   0xD301             BCC.N    ??iotx_event_callback_1
    258                  return NULL;
   \                     ??iotx_event_callback_0: (+1)
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x4770             BX       LR
    259              }
    260              return g_impl_event_map[evt].callback;
   \                     ??iotx_event_callback_1: (+1)
   \        0xC   0x....             LDR.N    R1,??DataTable22_6
   \        0xE   0xEB01 0x00C0      ADD      R0,R1,R0, LSL #+3
   \       0x12   0x6840             LDR      R0,[R0, #+4]
   \       0x14   0x4770             BX       LR               ;; return
    261          }
    262          

   \                                 In section .text, align 2, keep-with-next
    263          DEFINE_EVENT_CALLBACK(ITE_AWSS_STATUS,          int (*callback)(int))
   \                     iotx_register_for_ITE_AWSS_STATUS: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6048             STR      R0,[R1, #+4]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    264          DEFINE_EVENT_CALLBACK(ITE_CONNECT_SUCC,         int (*callback)(void))
   \                     iotx_register_for_ITE_CONNECT_SUCC: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x60C8             STR      R0,[R1, #+12]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    265          DEFINE_EVENT_CALLBACK(ITE_CONNECT_FAIL,         int (*callback)(void))
   \                     iotx_register_for_ITE_CONNECT_FAIL: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6148             STR      R0,[R1, #+20]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    266          DEFINE_EVENT_CALLBACK(ITE_DISCONNECTED,         int (*callback)(void))
   \                     iotx_register_for_ITE_DISCONNECTED: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x61C8             STR      R0,[R1, #+28]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    267          DEFINE_EVENT_CALLBACK(ITE_RAWDATA_ARRIVED,      int (*callback)(const int, const unsigned char *, const int))
   \                     iotx_register_for_ITE_RAWDATA_ARRIVED: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6248             STR      R0,[R1, #+36]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    268          DEFINE_EVENT_CALLBACK(ITE_SERVICE_REQUEST,       int (*callback)(const int, const char *, const int, const char *,
    269                                const int, char **, int *))
   \                     iotx_register_for_ITE_SERVICE_REQUEST: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x62C8             STR      R0,[R1, #+44]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    270          DEFINE_EVENT_CALLBACK(ITE_PROPERTY_SET,         int (*callback)(const int, const char *, const int))
   \                     iotx_register_for_ITE_PROPERTY_SET: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6348             STR      R0,[R1, #+52]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return
    271          #ifdef DEVICE_MODEL_SHADOW

   \                                 In section .text, align 2, keep-with-next
    272              DEFINE_EVENT_CALLBACK(ITE_PROPERTY_DESIRED_GET_REPLY,         int (*callback)(const char *, const int))
   \                     iotx_register_for_ITE_PROPERTY_DESIRED_GET_REPLY: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6448             STR      R0,[R1, #+68]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return
    273          #endif

   \                                 In section .text, align 2, keep-with-next
    274          DEFINE_EVENT_CALLBACK(ITE_PROPERTY_GET,         int (*callback)(const int, const char *, const int, char **, int *))
   \                     iotx_register_for_ITE_PROPERTY_GET: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x63C8             STR      R0,[R1, #+60]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    275          DEFINE_EVENT_CALLBACK(ITE_REPORT_REPLY,         int (*callback)(const int, const int, const int, const char *,
    276                                const int))
   \                     iotx_register_for_ITE_REPORT_REPLY: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x64C8             STR      R0,[R1, #+76]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    277          DEFINE_EVENT_CALLBACK(ITE_TRIGGER_EVENT_REPLY,  int (*callback)(const int, const int, const int, const char *,
    278                                const int, const char *, const int))
   \                     iotx_register_for_ITE_TRIGGER_EVENT_REPLY: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6548             STR      R0,[R1, #+84]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    279          DEFINE_EVENT_CALLBACK(ITE_TIMESTAMP_REPLY,      int (*callback)(const char *))
   \                     iotx_register_for_ITE_TIMESTAMP_REPLY: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x65C8             STR      R0,[R1, #+92]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    280          DEFINE_EVENT_CALLBACK(ITE_TOPOLIST_REPLY,       int (*callback)(const int, const int, const int, const char *,
    281                                const int))
   \                     iotx_register_for_ITE_TOPOLIST_REPLY: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6648             STR      R0,[R1, #+100]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    282          DEFINE_EVENT_CALLBACK(ITE_PERMIT_JOIN,          int (*callback)(const char *, int))
   \                     iotx_register_for_ITE_PERMIT_JOIN: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x66C8             STR      R0,[R1, #+108]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    283          DEFINE_EVENT_CALLBACK(ITE_INITIALIZE_COMPLETED, int (*callback)(const int))
   \                     iotx_register_for_ITE_INITIALIZE_COMPLETED: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x6748             STR      R0,[R1, #+116]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    284          DEFINE_EVENT_CALLBACK(ITE_FOTA,                 int (*callback)(const int, const char *))
   \                     iotx_register_for_ITE_FOTA: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0x67C8             STR      R0,[R1, #+124]
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    285          DEFINE_EVENT_CALLBACK(ITE_COTA,                 int (*callback)(const int, const char *, int, const char *,
    286                                const char *, const char *, const char *))
   \                     iotx_register_for_ITE_COTA: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0xF8C1 0x0084      STR      R0,[R1, #+132]
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    287          DEFINE_EVENT_CALLBACK(ITE_MQTT_CONNECT_SUCC,    int (*callback)(void))
   \                     iotx_register_for_ITE_MQTT_CONNECT_SUCC: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable22_6
   \        0x2   0xF8C1 0x008C      STR      R0,[R1, #+140]
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \        0x0   0x....'....        DC32     g_iotx_conn_info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \        0x0   0x....'....        DC32     g_empty_string

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \        0x0   0x....'....        DC32     g_sdk_impl_ctx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \        0x0   0x....'....        DC32     g_infra_mqtt_domain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_4:
   \        0x0   0x....'....        DC32     g_infra_http_domain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_5:
   \        0x0   0x....'....        DC32     g_event_monitor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_6:
   \        0x0   0x....'....        DC32     g_impl_event_map
    288          
    289          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   IOT_DumpMemoryStats
      16   IOT_Ioctl
        16   -> HAL_Free
        16   -> HAL_Malloc
        16   -> __aeabi_memcpy
        16   -> __aeabi_memset
        16   -> iotx_dm_set_opt
        16   -> strlen
      16   IOT_SetupConnInfo
        16   -> __aeabi_memset4
        16   -> strlen
       0   iotx_event_callback
       8   iotx_event_post
         8   -- Indirect call
       0   iotx_event_regist_cb
       0   iotx_register_for_ITE_AWSS_STATUS
       0   iotx_register_for_ITE_CONNECT_FAIL
       0   iotx_register_for_ITE_CONNECT_SUCC
       0   iotx_register_for_ITE_COTA
       0   iotx_register_for_ITE_DISCONNECTED
       0   iotx_register_for_ITE_FOTA
       0   iotx_register_for_ITE_INITIALIZE_COMPLETED
       0   iotx_register_for_ITE_MQTT_CONNECT_SUCC
       0   iotx_register_for_ITE_PERMIT_JOIN
       0   iotx_register_for_ITE_PROPERTY_DESIRED_GET_REPLY
       0   iotx_register_for_ITE_PROPERTY_GET
       0   iotx_register_for_ITE_PROPERTY_SET
       0   iotx_register_for_ITE_RAWDATA_ARRIVED
       0   iotx_register_for_ITE_REPORT_REPLY
       0   iotx_register_for_ITE_SERVICE_REQUEST
       0   iotx_register_for_ITE_TIMESTAMP_REPLY
       0   iotx_register_for_ITE_TOPOLIST_REPLY
       0   iotx_register_for_ITE_TRIGGER_EVENT_REPLY


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable22_3
       4  ??DataTable22_4
       4  ??DataTable22_5
       4  ??DataTable22_6
       2  IOT_DumpMemoryStats
     258  IOT_Ioctl
      88  IOT_SetupConnInfo
       1  g_empty_string
       4  g_event_monitor
     144  g_impl_event_map
      24  g_iotx_conn_info
      16  g_sdk_impl_ctx
      22  iotx_event_callback
      22  iotx_event_post
       8  iotx_event_regist_cb
       8  iotx_register_for_ITE_AWSS_STATUS
       8  iotx_register_for_ITE_CONNECT_FAIL
       8  iotx_register_for_ITE_CONNECT_SUCC
      10  iotx_register_for_ITE_COTA
       8  iotx_register_for_ITE_DISCONNECTED
       8  iotx_register_for_ITE_FOTA
       8  iotx_register_for_ITE_INITIALIZE_COMPLETED
      10  iotx_register_for_ITE_MQTT_CONNECT_SUCC
       8  iotx_register_for_ITE_PERMIT_JOIN
       8  iotx_register_for_ITE_PROPERTY_DESIRED_GET_REPLY
       8  iotx_register_for_ITE_PROPERTY_GET
       8  iotx_register_for_ITE_PROPERTY_SET
       8  iotx_register_for_ITE_RAWDATA_ARRIVED
       8  iotx_register_for_ITE_REPORT_REPLY
       8  iotx_register_for_ITE_SERVICE_REQUEST
       8  iotx_register_for_ITE_TIMESTAMP_REPLY
       8  iotx_register_for_ITE_TOPOLIST_REPLY
       8  iotx_register_for_ITE_TRIGGER_EVENT_REPLY

 
  45 bytes in section .bss
 144 bytes in section .data
 576 bytes in section .text
 
 576 bytes of CODE memory
 189 bytes of DATA memory

Errors: none
Warnings: none
