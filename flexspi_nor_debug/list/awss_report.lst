###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:00
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_report.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW9023.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_report.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\awss_report.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\awss_report.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_report.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          #include "dev_bind_internal.h"

  typedef void *p_HAL_Aes128_t;
                ^
"C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\os.h",49  Warning[Pe301]: 
          typedef name has already been declared (with same type)
      5          
      6          #if defined(__cplusplus)  /* If this is a C++ compiler, use C linkage */
      7          extern "C" {
      8          #endif
      9          
     10          #define AWSS_REPORT_LEN_MAX       (256)
     11          #define AWSS_TOKEN_TIMEOUT_MS     (45 * 1000)
     12          #define MATCH_MONITOR_TIMEOUT_MS  (10 * 1000)
     13          #define MATCH_REPORT_CNT_MAX      (2)
     14          

   \                                 In section .bss, align 1
     15          volatile char awss_report_token_suc = 0;
   \                     awss_report_token_suc:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
     16          volatile char awss_report_token_cnt = 0;
   \                     awss_report_token_cnt:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
     17          static char awss_report_id = 0;
   \                     awss_report_id:
   \        0x0                      DS8 1
     18          #ifdef WIFI_PROVISION_ENABLED
     19          static uint8_t switchap_bssid[ETH_ALEN] = {0};
     20          static char switchap_ssid[OS_MAX_SSID_LEN] = {0};
     21          static char switchap_passwd[OS_MAX_PASSWD_LEN] = {0};
     22          static void *switchap_timer = NULL;
     23          #endif
     24          

   \                                 In section .bss, align 4
     25          static uint32_t awss_report_token_time = 0;
   \                     awss_report_token_time:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     26          static void *report_token_timer = NULL;
   \                     report_token_timer:
   \        0x0                      DS8 4
     27          
     28          static int awss_report_token_to_cloud();
     29          #ifdef WIFI_PROVISION_ENABLED
     30          static int awss_switch_ap_online();
     31          static int awss_reboot_system();
     32          #endif
     33          

   \                                 In section .text, align 2, keep-with-next
     34          int awss_token_remain_time()
     35          {
   \                     awss_token_remain_time: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     36              int remain = 0;
   \        0x2   0x2400             MOVS     R4,#+0
     37              uint32_t cur = os_get_time_ms();
   \        0x4   0x....'....        BL       os_get_time_ms
     38              uint32_t diff = (uint32_t)(cur - awss_report_token_time);
   \        0x8   0x....             LDR.N    R1,??DataTable6_2
   \        0xA   0x6809             LDR      R1,[R1, #+0]
   \        0xC   0x1A41             SUBS     R1,R0,R1
     39          
     40              if (awss_report_token_suc == 0) {
   \        0xE   0x....             LDR.N    R0,??DataTable6_3
   \       0x10   0x7800             LDRB     R0,[R0, #+0]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD005             BEQ.N    ??awss_token_remain_time_0
     41                  return remain;
     42              }
     43          
     44              if (diff < AWSS_TOKEN_TIMEOUT_MS) {
   \       0x16   0xF64A 0x70C8      MOVW     R0,#+45000
   \       0x1A   0x4281             CMP      R1,R0
   \       0x1C   0xD201             BCS.N    ??awss_token_remain_time_0
     45                  remain = AWSS_TOKEN_TIMEOUT_MS - diff;
   \       0x1E   0x460C             MOV      R4,R1
   \       0x20   0x1B04             SUBS     R4,R0,R4
     46              }
     47          
     48              return remain;
   \                     ??awss_token_remain_time_0: (+1)
   \       0x22   0x4620             MOV      R0,R4
   \       0x24   0xBD10             POP      {R4,PC}          ;; return
     49          }
     50          

   \                                 In section .text, align 2, keep-with-next
     51          int awss_update_token()
     52          {
   \                     awss_update_token: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     53              awss_report_token_time = 0;
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....             LDR.N    R1,??DataTable6_2
   \        0x6   0x6008             STR      R0,[R1, #+0]
     54              awss_report_token_cnt = 0;
   \        0x8   0x....             LDR.N    R1,??DataTable6_4
   \        0xA   0x7008             STRB     R0,[R1, #+0]
     55              awss_report_token_suc = 0;
   \        0xC   0x....             LDR.N    R1,??DataTable6_3
   \        0xE   0x7008             STRB     R0,[R1, #+0]
     56          
     57              if (report_token_timer == NULL) {
   \       0x10   0x....             LDR.N    R4,??DataTable6_5
   \       0x12   0x6820             LDR      R0,[R4, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD106             BNE.N    ??awss_update_token_0
     58                  report_token_timer = HAL_Timer_Create("rp_token", (void (*)(void *))awss_report_token_to_cloud, NULL);
   \       0x18   0x2200             MOVS     R2,#+0
   \       0x1A   0x....'....        ADR.W    R1,awss_report_token_to_cloud
   \       0x1E   0x....             LDR.N    R0,??DataTable6_6
   \       0x20   0x....'....        BL       HAL_Timer_Create
   \       0x24   0x6020             STR      R0,[R4, #+0]
     59              }
     60              HAL_Timer_Stop(report_token_timer);
   \                     ??awss_update_token_0: (+1)
   \       0x26   0x6820             LDR      R0,[R4, #+0]
   \       0x28   0x....'....        BL       HAL_Timer_Stop
     61              HAL_Timer_Start(report_token_timer, 10);
   \       0x2C   0x210A             MOVS     R1,#+10
   \       0x2E   0x6820             LDR      R0,[R4, #+0]
   \       0x30   0x....'....        BL       HAL_Timer_Start
     62              awss_info("update token");
     63          
     64              produce_random(aes_random, sizeof(aes_random));
   \       0x34   0x2110             MOVS     R1,#+16
   \       0x36   0x....             LDR.N    R0,??DataTable6_7
   \       0x38   0x....'....        BL       produce_random
     65              return 0;
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0xBD10             POP      {R4,PC}          ;; return
     66          }
     67          

   \                                 In section .text, align 2, keep-with-next
     68          int awss_token_timeout()
     69          {
   \                     awss_token_timeout: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     70              uint32_t cur;
     71              if (awss_report_token_time == 0) {
   \        0x2   0x....             LDR.N    R4,??DataTable6_2
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD101             BNE.N    ??awss_token_timeout_0
     72                  return 1;
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0xBD10             POP      {R4,PC}
     73              }
     74          
     75              cur = os_get_time_ms();
   \                     ??awss_token_timeout_0: (+1)
   \        0xE   0x....'....        BL       os_get_time_ms
     76              if ((uint32_t)(cur - awss_report_token_time) > AWSS_TOKEN_TIMEOUT_MS) {
   \       0x12   0x6821             LDR      R1,[R4, #+0]
   \       0x14   0x1A40             SUBS     R0,R0,R1
   \       0x16   0xF64A 0x71C9      MOVW     R1,#+45001
   \       0x1A   0x4288             CMP      R0,R1
   \       0x1C   0x4180             SBCS     R0,R0,R0
   \       0x1E   0x43C0             MVNS     R0,R0
   \       0x20   0x0FC0             LSRS     R0,R0,#+31
     77                  return 1;
   \       0x22   0xBD10             POP      {R4,PC}          ;; return
     78              }
     79              return 0;
     80          }
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void awss_report_token_reply(void *pcontext, void *pclient, void *msg)
     83          {
   \                     awss_report_token_reply: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
   \        0x2   0x4610             MOV      R0,R2
     84              int ret, len;
     85              char *payload;
     86              char *id = NULL;
     87              char reply_id = 0;
     88              uint32_t payload_len;
     89          
     90              ret = awss_cmp_mqtt_get_payload(msg, &payload, &payload_len);
     91          
     92              if (ret != 0 || payload == NULL || payload_len == 0) {
   \        0x4   0xAA01             ADD      R2,SP,#+4
   \        0x6   0xA902             ADD      R1,SP,#+8
   \        0x8   0x....'....        BL       awss_cmp_mqtt_get_payload
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD125             BNE.N    ??awss_report_token_reply_0
   \       0x10   0x9802             LDR      R0,[SP, #+8]
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD022             BEQ.N    ??awss_report_token_reply_0
   \       0x16   0x9801             LDR      R0,[SP, #+4]
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD01F             BEQ.N    ??awss_report_token_reply_0
     93                  return;
     94              }
     95          
     96              id = json_get_value_by_name(payload, payload_len, AWSS_JSON_ID, &len, NULL);
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0x9000             STR      R0,[SP, #+0]
   \       0x20   0xAB03             ADD      R3,SP,#+12
   \       0x22   0x....             ADR.N    R2,??DataTable6  ;; 0x69, 0x64, 0x00, 0x00
   \       0x24   0x9901             LDR      R1,[SP, #+4]
   \       0x26   0x9802             LDR      R0,[SP, #+8]
   \       0x28   0x....'....        BL       json_get_value_by_name
     97              if (id == NULL) {
   \       0x2C   0x2800             CMP      R0,#+0
   \       0x2E   0xD015             BEQ.N    ??awss_report_token_reply_0
     98                  return;
     99              }
    100          
    101              reply_id = atoi(id);
   \       0x30   0x....'....        BL       atoi
    102              if (reply_id + 1 < awss_report_id) {
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x1C40             ADDS     R0,R0,#+1
   \       0x38   0x....             LDR.N    R1,??DataTable6_8
   \       0x3A   0x7809             LDRB     R1,[R1, #+0]
   \       0x3C   0x4288             CMP      R0,R1
   \       0x3E   0xDB0D             BLT.N    ??awss_report_token_reply_0
    103                  return;
    104              }
    105              awss_info("%s\r\n", __func__);
    106              awss_report_token_suc = 1;
   \       0x40   0x2001             MOVS     R0,#+1
   \       0x42   0x....             LDR.N    R1,??DataTable6_3
   \       0x44   0x7008             STRB     R0,[R1, #+0]
    107              awss_stop_timer(report_token_timer);
   \       0x46   0x....             LDR.N    R4,??DataTable6_5
   \       0x48   0x6820             LDR      R0,[R4, #+0]
   \       0x4A   0x....'....        BL       awss_stop_timer
    108              report_token_timer = NULL;
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x6020             STR      R0,[R4, #+0]
    109              AWSS_DB_UPDATE_STATIS(AWSS_DB_STATIS_SUC);
   \       0x52   0x2001             MOVS     R0,#+1
   \       0x54   0x....'....        BL       awss_bind_update_statis
    110              AWSS_DB_DISP_STATIS();
   \       0x58   0x....'....        BL       awss_bind_disp_statis
    111              return;
   \                     ??awss_report_token_reply_0: (+1)
   \       0x5C   0xBD1F             POP      {R0-R4,PC}       ;; return
    112          }
    113          
    114          #ifdef WIFI_PROVISION_ENABLED
    115          void awss_online_switchap(void *pcontext, void *pclient, void *msg)
    116          {
    117          #define SWITCHAP_RSP_LEN   (64)
    118          #define AWSS_BSSID_STR_LEN (17)
    119          #define AWSS_SSID          "ssid"
    120          #define AWSS_PASSWD        "passwd"
    121          #define AWSS_BSSID         "bssid"
    122          #define AWSS_SWITCH_MODE   "switchMode"
    123          #define AWSS_TIMEOUT       "timeout"
    124          
    125              int len = 0, timeout = 0;
    126              char *packet = NULL, *awss_info = NULL, *elem = NULL;
    127              int packet_len = SWITCHAP_RSP_LEN, awss_info_len = 0;
    128          
    129              uint32_t payload_len;
    130              char *payload;
    131              int ret;
    132          
    133              ret = awss_cmp_mqtt_get_payload(msg, &payload, &payload_len);
    134          
    135              if (ret != 0) {
    136                  goto ONLINE_SWITCHAP_FAIL;
    137              }
    138          
    139              if (payload == NULL || payload_len == 0) {
    140                  goto ONLINE_SWITCHAP_FAIL;
    141              }
    142          
    143              awss_debug("online switchap len:%u, payload:%s\r\n", payload_len, payload);
    144              packet = os_zalloc(packet_len + 1);
    145              if (packet == NULL) {
    146                  goto ONLINE_SWITCHAP_FAIL;
    147              }
    148          
    149              awss_info = json_get_value_by_name(payload, payload_len, AWSS_JSON_PARAM, &awss_info_len, NULL);
    150              if (awss_info == NULL || awss_info_len == 0) {
    151                  goto ONLINE_SWITCHAP_FAIL;
    152              }
    153          
    154              /*
    155               * get SSID , PASSWD, BSSID of router
    156               */
    157              elem = json_get_value_by_name(awss_info, awss_info_len, AWSS_SSID, &len, NULL);
    158              if (elem == NULL || len <= 0 || len >= OS_MAX_SSID_LEN) {
    159                  goto ONLINE_SWITCHAP_FAIL;
    160              }
    161          
    162              memset(switchap_ssid, 0, sizeof(switchap_ssid));
    163              memcpy(switchap_ssid, elem, len);
    164          
    165              len = 0;
    166              elem = json_get_value_by_name(awss_info, awss_info_len, AWSS_PASSWD, &len, NULL);
    167              if (elem == NULL || len <= 0 || len >= OS_MAX_PASSWD_LEN) {
    168                  goto ONLINE_SWITCHAP_FAIL;
    169              }
    170          
    171              memset(switchap_passwd, 0, sizeof(switchap_passwd));
    172              memcpy(switchap_passwd, elem, len);
    173          
    174              len = 0;
    175              memset(switchap_bssid, 0, sizeof(switchap_bssid));
    176              elem = json_get_value_by_name(awss_info, awss_info_len, AWSS_BSSID, &len, NULL);
    177          
    178              if (elem != NULL && len == AWSS_BSSID_STR_LEN) {
    179                  uint8_t i = 0;
    180                  char *bssid_str = elem;
    181                  /* convert bssid string to bssid value */
    182                  while (i < OS_ETH_ALEN) {
    183                      switchap_bssid[i ++] = (uint8_t)strtol(bssid_str, &bssid_str, 16);
    184                      ++ bssid_str;
    185                      /*
    186                       * fix the format of bssid string is not legal.
    187                       */
    188                      if ((uint32_t)((unsigned long)bssid_str - (unsigned long)elem) > AWSS_BSSID_STR_LEN) {
    189                          memset(switchap_bssid, 0, sizeof(switchap_bssid));
    190                          break;
    191                      }
    192                  }
    193              }
    194          
    195              len = 0;
    196              elem = json_get_value_by_name(awss_info, awss_info_len, AWSS_SWITCH_MODE, &len, NULL);
    197              if (elem != NULL && (elem[0] == '0' || elem[0] == 0)) {
    198                  elem = json_get_value_by_name(awss_info, awss_info_len, AWSS_TIMEOUT, &len, NULL);
    199                  if (elem) {
    200                      timeout = (int)strtol(elem, &elem, 16);
    201                  }
    202              }
    203          
    204              do {
    205                  /* reduce stack used */
    206                  char *id = NULL;
    207                  char id_str[MSG_REQ_ID_LEN] = {0};
    208                  id = json_get_value_by_name(payload, payload_len, AWSS_JSON_ID, &len, NULL);
    209                  memcpy(id_str, id, len > MSG_REQ_ID_LEN - 1 ? MSG_REQ_ID_LEN - 1 : len);
    210                  awss_build_packet(AWSS_CMP_PKT_TYPE_RSP, id_str, ILOP_VER, METHOD_EVENT_ZC_SWITCHAP, "{}", 200, packet, &packet_len);
    211              } while (0);
    212          
    213              do {
    214                  char reply[TOPIC_LEN_MAX] = {0};
    215                  awss_build_topic(TOPIC_SWITCHAP_REPLY, reply, TOPIC_LEN_MAX);
    216                  awss_cmp_mqtt_send(reply, packet, packet_len, 1);
    217                  HAL_Free(packet);
    218              } while (0);
    219          
    220              /*
    221               * make sure the response would been received
    222               */
    223              if (timeout < 1000) {
    224                  timeout = 1000;
    225              }
    226          
    227              do {
    228                  uint8_t bssid[ETH_ALEN] = {0};
    229                  char ssid[OS_MAX_SSID_LEN + 1] = {0}, passwd[OS_MAX_PASSWD_LEN + 1] = {0};
    230                  HAL_Wifi_Get_Ap_Info(ssid, passwd, bssid);
    231                  /*
    232                   * switch ap when destination ap is differenct from current ap
    233                   */
    234                  if (strncmp(ssid, switchap_ssid, sizeof(ssid)) ||
    235                      memcmp(bssid, switchap_bssid, sizeof(bssid)) ||
    236                      strncmp(passwd, switchap_passwd, sizeof(passwd))) {
    237                      if (switchap_timer == NULL) {
    238                          switchap_timer = HAL_Timer_Create("swichap_online", (void (*)(void *))awss_switch_ap_online, NULL);
    239                      }
    240          
    241                      HAL_Timer_Stop(switchap_timer);
    242                      HAL_Timer_Start(switchap_timer, timeout);
    243                  }
    244              } while (0);
    245          
    246              return;
    247          
    248          ONLINE_SWITCHAP_FAIL:
    249              awss_warn("ilop online switchap failed");
    250              memset(switchap_ssid, 0, sizeof(switchap_ssid));
    251              memset(switchap_bssid, 0, sizeof(switchap_bssid));
    252              memset(switchap_passwd, 0, sizeof(switchap_passwd));
    253              if (packet) {
    254                  HAL_Free(packet);
    255              }
    256              return;
    257          }
    258          
    259          static void *reboot_timer = NULL;
    260          static int awss_switch_ap_online()
    261          {
    262              HAL_Awss_Connect_Ap(WLAN_CONNECTION_TIMEOUT_MS, switchap_ssid, switchap_passwd,
    263                                  AWSS_AUTH_TYPE_INVALID, AWSS_ENC_TYPE_INVALID, switchap_bssid, 0);
    264          
    265              awss_stop_timer(switchap_timer);
    266              switchap_timer = NULL;
    267          
    268              memset(switchap_ssid, 0, sizeof(switchap_ssid));
    269              memset(switchap_bssid, 0, sizeof(switchap_bssid));
    270              memset(switchap_passwd, 0, sizeof(switchap_passwd));
    271          
    272              reboot_timer = HAL_Timer_Create("rb_timer", (void (*)(void *))awss_reboot_system, NULL);
    273              HAL_Timer_Start(reboot_timer, 1000);;
    274          
    275              return 0;
    276          }
    277          
    278          static int awss_reboot_system()
    279          {
    280              awss_stop_timer(reboot_timer);
    281              reboot_timer = NULL;
    282              HAL_Reboot();
    283              return 0;
    284          }
    285          #endif
    286          

   \                                 In section .text, align 4, keep-with-next
    287          static int awss_report_token_to_cloud()
    288          {
   \                     awss_report_token_to_cloud: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB0C2             SUB      SP,SP,#+264
    289              int packet_len, ret;
    290              char *packet;
    291              char topic[TOPIC_LEN_MAX] = {0};
   \        0x4   0xA822             ADD      R0,SP,#+136
   \        0x6   0x2180             MOVS     R1,#+128
   \        0x8   0x....'....        BL       __aeabi_memclr4
    292          #define REPORT_TOKEN_PARAM_LEN  (64)
    293              if (awss_report_token_suc) { /* success ,no need to report */
   \        0xC   0x....             LDR.N    R0,??DataTable6_3
   \        0xE   0x7800             LDRB     R0,[R0, #+0]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD001             BEQ.N    ??awss_report_token_to_cloud_0
    294                  return 0;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0xE083             B.N      ??awss_report_token_to_cloud_1
    295              }
    296          
    297              AWSS_DB_UPDATE_STATIS(AWSS_DB_STATIS_START);
   \                     ??awss_report_token_to_cloud_0: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x....'....        BL       awss_bind_update_statis
    298          
    299              /*
    300               * it is still failed after try to report token MATCH_REPORT_CNT_MAX times
    301               */
    302              if (awss_report_token_cnt ++ > MATCH_REPORT_CNT_MAX) {
   \       0x1E   0x....             LDR.N    R0,??DataTable6_4
   \       0x20   0x7801             LDRB     R1,[R0, #+0]
   \       0x22   0x1C4A             ADDS     R2,R1,#+1
   \       0x24   0x7002             STRB     R2,[R0, #+0]
   \       0x26   0x2903             CMP      R1,#+3
   \       0x28   0x....             LDR.N    R4,??DataTable6_5
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0xDB06             BLT.N    ??awss_report_token_to_cloud_2
    303                  awss_stop_timer(report_token_timer);
   \       0x2E   0x....'....        BL       awss_stop_timer
    304                  report_token_timer = NULL;
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x6020             STR      R0,[R4, #+0]
    305                  awss_info("try %d times fail", awss_report_token_cnt);
    306                  return -2;
   \       0x36   0xF06F 0x0001      MVN      R0,#+1
   \       0x3A   0xE071             B.N      ??awss_report_token_to_cloud_1
    307              }
    308          
    309              if (report_token_timer == NULL) {
   \                     ??awss_report_token_to_cloud_2: (+1)
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD105             BNE.N    ??awss_report_token_to_cloud_3
    310                  report_token_timer = HAL_Timer_Create("rp_token", (void (*)(void *))awss_report_token_to_cloud, NULL);
   \       0x40   0x2200             MOVS     R2,#+0
   \       0x42   0x....             LDR.N    R1,??DataTable6_9
   \       0x44   0x....             LDR.N    R0,??DataTable6_6
   \       0x46   0x....'....        BL       HAL_Timer_Create
   \       0x4A   0x6020             STR      R0,[R4, #+0]
    311              }
    312              HAL_Timer_Stop(report_token_timer);
   \                     ??awss_report_token_to_cloud_3: (+1)
   \       0x4C   0x6820             LDR      R0,[R4, #+0]
   \       0x4E   0x....'....        BL       HAL_Timer_Stop
    313              HAL_Timer_Start(report_token_timer, 3 * 1000);
   \       0x52   0xF640 0x31B8      MOVW     R1,#+3000
   \       0x56   0x6820             LDR      R0,[R4, #+0]
   \       0x58   0x....'....        BL       HAL_Timer_Start
    314          
    315              packet_len = AWSS_REPORT_LEN_MAX;
   \       0x5C   0xF44F 0x7080      MOV      R0,#+256
   \       0x60   0x9004             STR      R0,[SP, #+16]
    316          
    317              packet = os_zalloc(packet_len + 1);
   \       0x62   0xF240 0x1001      MOVW     R0,#+257
   \       0x66   0x....'....        BL       os_zalloc
   \       0x6A   0x0004             MOVS     R4,R0
    318              if (packet == NULL) {
   \       0x6C   0xD102             BNE.N    ??awss_report_token_to_cloud_4
    319                  awss_err("alloc mem(%d) failed", packet_len);
    320                  return -1;
   \       0x6E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x72   0xE055             B.N      ??awss_report_token_to_cloud_1
    321              }
    322          
    323              do {
    324                  /* reduce stack used */
    325                  uint8_t i;
    326                  char id_str[MSG_REQ_ID_LEN] = {0};
   \                     ??awss_report_token_to_cloud_4: (+1)
   \       0x74   0xA805             ADD      R0,SP,#+20
   \       0x76   0x2110             MOVS     R1,#+16
   \       0x78   0x....'....        BL       __aeabi_memclr4
    327                  char param[REPORT_TOKEN_PARAM_LEN] = {0};
   \       0x7C   0xA812             ADD      R0,SP,#+72
   \       0x7E   0x2140             MOVS     R1,#+64
   \       0x80   0x....'....        BL       __aeabi_memclr4
    328                  char token_str[(RANDOM_MAX_LEN << 1) + 1] = {0};
   \       0x84   0xA809             ADD      R0,SP,#+36
   \       0x86   0x2124             MOVS     R1,#+36
   \       0x88   0x....'....        BL       __aeabi_memclr4
    329          
    330                  for (i = 0; i < sizeof(aes_random); i ++)  /* check aes_random is initialed or not */
   \       0x8C   0x2100             MOVS     R1,#+0
   \                     ??awss_report_token_to_cloud_5: (+1)
   \       0x8E   0x4608             MOV      R0,R1
   \       0x90   0xB2C0             UXTB     R0,R0
   \       0x92   0x2810             CMP      R0,#+16
   \       0x94   0xD207             BCS.N    ??awss_report_token_to_cloud_6
    331                      if (aes_random[i] != 0x00) {
   \       0x96   0x....             LDR.N    R0,??DataTable6_7
   \       0x98   0x460A             MOV      R2,R1
   \       0x9A   0xB2D2             UXTB     R2,R2
   \       0x9C   0x5C80             LDRB     R0,[R0, R2]
   \       0x9E   0x2800             CMP      R0,#+0
   \       0xA0   0xD101             BNE.N    ??awss_report_token_to_cloud_6
   \       0xA2   0x1C49             ADDS     R1,R1,#+1
   \       0xA4   0xE7F3             B.N      ??awss_report_token_to_cloud_5
    332                          break;
    333                      }
    334          
    335                  if (i >= sizeof(aes_random)) { /* aes_random needs to be initialed */
   \                     ??awss_report_token_to_cloud_6: (+1)
   \       0xA6   0xB2C9             UXTB     R1,R1
   \       0xA8   0x2910             CMP      R1,#+16
   \       0xAA   0xD303             BCC.N    ??awss_report_token_to_cloud_7
    336                      produce_random(aes_random, sizeof(aes_random));
   \       0xAC   0x2110             MOVS     R1,#+16
   \       0xAE   0x....             LDR.N    R0,??DataTable6_7
   \       0xB0   0x....'....        BL       produce_random
    337                  }
    338          
    339                  awss_report_token_time = os_get_time_ms();
   \                     ??awss_report_token_to_cloud_7: (+1)
   \       0xB4   0x....'....        BL       os_get_time_ms
   \       0xB8   0x....             LDR.N    R1,??DataTable6_2
   \       0xBA   0x6008             STR      R0,[R1, #+0]
    340          
    341                  HAL_Snprintf(id_str, MSG_REQ_ID_LEN - 1, "\"%u\"", awss_report_id ++);
   \       0xBC   0x....             LDR.N    R0,??DataTable6_8
   \       0xBE   0x7803             LDRB     R3,[R0, #+0]
   \       0xC0   0x1C59             ADDS     R1,R3,#+1
   \       0xC2   0x7001             STRB     R1,[R0, #+0]
   \       0xC4   0x....             LDR.N    R2,??DataTable6_10
   \       0xC6   0x210F             MOVS     R1,#+15
   \       0xC8   0xA805             ADD      R0,SP,#+20
   \       0xCA   0x....'....        BL       HAL_Snprintf
    342                  utils_hex_to_str(aes_random, RANDOM_MAX_LEN, token_str, sizeof(token_str) - 1);
   \       0xCE   0x2301             MOVS     R3,#+1
   \       0xD0   0x2210             MOVS     R2,#+16
   \       0xD2   0xA909             ADD      R1,SP,#+36
   \       0xD4   0x....             LDR.N    R0,??DataTable6_7
   \       0xD6   0x....'....        BL       LITE_hexbuf_convert
    343                  HAL_Snprintf(param, REPORT_TOKEN_PARAM_LEN - 1, "{\"token\":\"%s\"}", token_str);
   \       0xDA   0xAB09             ADD      R3,SP,#+36
   \       0xDC   0x....             LDR.N    R2,??DataTable6_11
   \       0xDE   0x213F             MOVS     R1,#+63
   \       0xE0   0xA812             ADD      R0,SP,#+72
   \       0xE2   0x....'....        BL       HAL_Snprintf
    344                  awss_build_packet(AWSS_CMP_PKT_TYPE_REQ, id_str, ILOP_VER, METHOD_MATCH_REPORT, param, 0, packet, &packet_len);
   \       0xE6   0xA804             ADD      R0,SP,#+16
   \       0xE8   0x9003             STR      R0,[SP, #+12]
   \       0xEA   0x9402             STR      R4,[SP, #+8]
   \       0xEC   0x2000             MOVS     R0,#+0
   \       0xEE   0x9001             STR      R0,[SP, #+4]
   \       0xF0   0xA812             ADD      R0,SP,#+72
   \       0xF2   0x9000             STR      R0,[SP, #+0]
   \       0xF4   0x....             LDR.N    R3,??DataTable6_12
   \       0xF6   0x....             ADR.N    R2,??DataTable6_1  ;; "1.0"
   \       0xF8   0xA905             ADD      R1,SP,#+20
   \       0xFA   0x2001             MOVS     R0,#+1
   \       0xFC   0x....'....        BL       awss_build_packet
    345              } while (0);
    346          
    347              awss_debug("report token:%s\r\n", packet);
    348              awss_build_topic(TOPIC_MATCH_REPORT, topic, TOPIC_LEN_MAX);
   \      0x100   0x2280             MOVS     R2,#+128
   \      0x102   0xA922             ADD      R1,SP,#+136
   \      0x104   0x....             LDR.N    R0,??DataTable6_13
   \      0x106   0x....'....        BL       awss_build_topic
    349          
    350              ret = awss_cmp_mqtt_send(topic, packet, packet_len, 1);
   \      0x10A   0x2301             MOVS     R3,#+1
   \      0x10C   0x9A04             LDR      R2,[SP, #+16]
   \      0x10E   0x4621             MOV      R1,R4
   \      0x110   0xA822             ADD      R0,SP,#+136
   \      0x112   0x....'....        BL       awss_cmp_mqtt_send
   \      0x116   0x4605             MOV      R5,R0
    351              awss_info("report token res:%d\r\n", ret);
    352              HAL_Free(packet);
   \      0x118   0x4620             MOV      R0,R4
   \      0x11A   0x....'....        BL       HAL_Free
    353          
    354              return ret;
   \      0x11E   0x4628             MOV      R0,R5
   \                     ??awss_report_token_to_cloud_1: (+1)
   \      0x120   0xB043             ADD      SP,SP,#+268
   \      0x122   0xBD30             POP      {R4,R5,PC}       ;; return
    355          }
    356          

   \                                 In section .text, align 2, keep-with-next
    357          int awss_report_token()
    358          {
    359              awss_report_token_cnt = 0;
   \                     awss_report_token: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....             LDR.N    R1,??DataTable6_4
   \        0x4   0x7008             STRB     R0,[R1, #+0]
    360              awss_report_token_suc = 0;
   \        0x6   0x....             LDR.N    R1,??DataTable6_3
   \        0x8   0x7008             STRB     R0,[R1, #+0]
    361          
    362              return awss_report_token_to_cloud();
   \        0xA   0x....             B.N      awss_report_token_to_cloud
    363          }
    364          

   \                                 In section .text, align 2, keep-with-next
    365          int awss_stop_report_token()
    366          {
   \                     awss_stop_report_token: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    367              if (report_token_timer) {
   \        0x2   0x....             LDR.N    R4,??DataTable6_5
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD003             BEQ.N    ??awss_stop_report_token_0
    368                  awss_stop_timer(report_token_timer);
   \        0xA   0x....'....        BL       awss_stop_timer
    369                  report_token_timer = NULL;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x6020             STR      R0,[R4, #+0]
    370              }
    371          
    372              memset(aes_random, 0x00, sizeof(aes_random));
   \                     ??awss_stop_report_token_0: (+1)
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0x2110             MOVS     R1,#+16
   \       0x16   0x....             LDR.N    R0,??DataTable6_7
   \       0x18   0x....'....        BL       __aeabi_memset
    373          
    374              return 0;
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0xBD10             POP      {R4,PC}          ;; return
    375          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0x69 0x64          DC8      0x69, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0x31 0x2E          DC8      "1.0"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0x....'....        DC32     awss_report_token_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x....'....        DC32     awss_report_token_suc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x....'....        DC32     awss_report_token_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0x....'....        DC32     report_token_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0x....'....        DC32     aes_random

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x....'....        DC32     awss_report_id

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0x....'....        DC32     awss_report_token_to_cloud

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x72 0x70          DC8 "rp_token"
   \              0x5F 0x74    
   \              0x6F 0x6B    
   \              0x65 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x69 0x64          DC8 "id"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x45   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x5C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x73   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x22 0x25          DC8 "\"%u\""
   \              0x75 0x22    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x7B 0x22          DC8 "{\"token\":\"%s\"}"
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x22    
   \              0x3A 0x22    
   \              0x25 0x73    
   \              0x22 0x7D    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x31 0x2E          DC8 "1.0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x74 0x68          DC8 "thing.awss.enrollee.match"
   \              0x69 0x6E    
   \              0x67 0x2E    
   \              0x61 0x77    
   \              0x73 0x73    
   \              0x2E 0x65    
   \              0x6E 0x72    
   \              0x6F 0x6C    
   \              0x6C 0x65    
   \              0x65 0x2E    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x2F 0x73          DC8 "/sys/%s/%s/thing/awss/enrollee/match"
   \              0x79 0x73    
   \              0x2F 0x25    
   \              0x73 0x2F    
   \              0x25 0x73    
   \              0x2F 0x74    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x2F 0x61    
   \              0x77 0x73    
   \              0x73 0x2F    
   \              0x65 0x6E    
   \              0x72 0x6F    
   \              0x6C 0x6C    
   \              0x65 0x65    
   \              0x2F 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    376          
    377          #if defined(__cplusplus)  /* If this is a C++ compiler, use C linkage */
    378          }
    379          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   awss_report_token
         0   -> awss_report_token_to_cloud
      24   awss_report_token_reply
        24   -> atoi
        24   -> awss_bind_disp_statis
        24   -> awss_bind_update_statis
        24   -> awss_cmp_mqtt_get_payload
        24   -> awss_stop_timer
        24   -> json_get_value_by_name
     280   awss_report_token_to_cloud
       280   -> HAL_Free
       280   -> HAL_Snprintf
       280   -> HAL_Timer_Create
       280   -> HAL_Timer_Start
       280   -> HAL_Timer_Stop
       280   -> LITE_hexbuf_convert
       280   -> __aeabi_memclr4
       280   -> awss_bind_update_statis
       280   -> awss_build_packet
       280   -> awss_build_topic
       280   -> awss_cmp_mqtt_send
       280   -> awss_stop_timer
       280   -> os_get_time_ms
       280   -> os_zalloc
       280   -> produce_random
       8   awss_stop_report_token
         8   -> __aeabi_memset
         8   -> awss_stop_timer
       8   awss_token_remain_time
         8   -> os_get_time_ms
       8   awss_token_timeout
         8   -> os_get_time_ms
       8   awss_update_token
         8   -> HAL_Timer_Create
         8   -> HAL_Timer_Start
         8   -> HAL_Timer_Stop
         8   -> produce_random


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      12  ?_0
       4  ?_1
      40  ?_10
     128  ?_2
      16  ?_3
      64  ?_4
      36  ?_5
       8  ?_6
      16  ?_7
       4  ?_8
      28  ?_9
       1  awss_report_id
      12  awss_report_token
       1  awss_report_token_cnt
      94  awss_report_token_reply
       1  awss_report_token_suc
       4  awss_report_token_time
     292  awss_report_token_to_cloud
      32  awss_stop_report_token
      38  awss_token_remain_time
      36  awss_token_timeout
      64  awss_update_token
       4  report_token_timer

 
  11 bytes in section .bss
 356 bytes in section .rodata
 624 bytes in section .text
 
 624 bytes of CODE  memory
 356 bytes of CONST memory
  11 bytes of DATA  memory

Errors: none
Warnings: 1
