###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:08
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\CoAPObserve.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWB005.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\CoAPObserve.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\CoAPObserve.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\CoAPObserve.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\CoAPObserve.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          
      5          #include "CoAPExport.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __dlist_add(dlist_t *, dlist_t *, dlist_t *)
   \                     __dlist_add: (+1)
   \        0x0   0x6042             STR      R2,[R0, #+4]
   \        0x2   0x6001             STR      R1,[R0, #+0]
   \        0x4   0x6048             STR      R0,[R1, #+4]
   \        0x6   0x6010             STR      R0,[R2, #+0]
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void dlist_add_tail(dlist_t *, dlist_t *)
   \                     dlist_add_tail: (+1)
   \        0x0   0x460A             MOV      R2,R1
   \        0x2   0x6811             LDR      R1,[R2, #+0]
   \        0x4   0x....             B.N      __dlist_add

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void dlist_del(dlist_t *)
   \                     dlist_del: (+1)
   \        0x0   0x6801             LDR      R1,[R0, #+0]
   \        0x2   0x6840             LDR      R0,[R0, #+4]
   \        0x4   0x6048             STR      R0,[R1, #+4]
   \        0x6   0x6001             STR      R1,[R0, #+0]
   \        0x8   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void INIT_AOS_DLIST_HEAD(dlist_t *)
   \                     INIT_AOS_DLIST_HEAD: (+1)
   \        0x0   0x6040             STR      R0,[R0, #+4]
   \        0x2   0x6000             STR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
      6          #include "CoAPResource.h"
      7          #include "CoAPObserve.h"
      8          #include "CoAPMessage.h"
      9          #include "iotx_coap_internal.h"
     10          #include "CoAPPlatform.h"
     11          #include "CoAPInternal.h"
     12          
     13          #ifndef COAP_OBSERVE_SERVER_DISABLE

   \                                 In section .text, align 2, keep-with-next
     14          int CoAPObsServer_init(CoAPContext *context, unsigned char        obs_maxcount)
     15          {
   \                     CoAPObsServer_init: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
     16              CoAPIntContext *ctx = (CoAPIntContext *)context;
     17          
     18              ctx->obsserver.list_mutex = HAL_MutexCreate();
   \        0x6   0x....'....        BL       HAL_MutexCreate
   \        0xA   0x6260             STR      R0,[R4, #+36]
     19          
     20              HAL_MutexLock(ctx->obsserver.list_mutex);
   \        0xC   0x....'....        BL       HAL_MutexLock
     21              INIT_LIST_HEAD(&ctx->obsserver.list);
   \       0x10   0xF104 0x0028      ADD      R0,R4,#+40
   \       0x14   0x....'....        BL       INIT_AOS_DLIST_HEAD
     22              ctx->obsserver.count = 0;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xF884 0x0030      STRB     R0,[R4, #+48]
     23              ctx->obsserver.maxcount = obs_maxcount;
   \       0x1E   0xF884 0x5031      STRB     R5,[R4, #+49]
     24              HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \       0x22   0x6A60             LDR      R0,[R4, #+36]
   \       0x24   0x....'....        BL       HAL_MutexUnlock
     25          
     26              return COAP_SUCCESS;
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     27          }
     28          

   \                                 In section .text, align 2, keep-with-next
     29          int CoAPObsServer_deinit(CoAPContext *context)
     30          {
   \                     CoAPObsServer_deinit: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
     31              CoAPIntContext *ctx = (CoAPIntContext *)context;
     32              CoapObserver *node = NULL, *next = NULL;
     33          
     34              HAL_MutexLock(ctx->obsserver.list_mutex);
   \        0x4   0x6A60             LDR      R0,[R4, #+36]
   \        0x6   0x....'....        BL       HAL_MutexLock
     35              list_for_each_entry_safe(node, next, &ctx->obsserver.list, obslist, CoapObserver) {
   \        0xA   0x6AE0             LDR      R0,[R4, #+44]
   \        0xC   0xF1A0 0x0528      SUB      R5,R0,#+40
   \       0x10   0x6AE8             LDR      R0,[R5, #+44]
   \       0x12   0xF1A0 0x0628      SUB      R6,R0,#+40
   \       0x16   0xE00A             B.N      ??CoAPObsServer_deinit_0
     36                  list_del(&node->obslist);
   \                     ??CoAPObsServer_deinit_1: (+1)
   \       0x18   0xF105 0x0028      ADD      R0,R5,#+40
   \       0x1C   0x....'....        BL       dlist_del
     37                  COAP_DEBUG("Delete %s:%d from observe server", node->remote.addr, node->remote.port);
     38                  coap_free(node);
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       HAL_Free
     39              }
   \       0x26   0x4635             MOV      R5,R6
   \       0x28   0x6AF0             LDR      R0,[R6, #+44]
   \       0x2A   0xF1A0 0x0628      SUB      R6,R0,#+40
   \                     ??CoAPObsServer_deinit_0: (+1)
   \       0x2E   0x42A5             CMP      R5,R4
   \       0x30   0xD1F2             BNE.N    ??CoAPObsServer_deinit_1
     40              ctx->obsserver.count = 0;
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0xF884 0x0030      STRB     R0,[R4, #+48]
     41              ctx->obsserver.maxcount = 0;
   \       0x38   0xF884 0x0031      STRB     R0,[R4, #+49]
     42              HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \       0x3C   0x6A60             LDR      R0,[R4, #+36]
   \       0x3E   0x....'....        BL       HAL_MutexUnlock
     43          
     44              HAL_MutexDestroy(ctx->obsserver.list_mutex);
   \       0x42   0x6A60             LDR      R0,[R4, #+36]
   \       0x44   0x....'....        BL       HAL_MutexDestroy
     45              ctx->obsserver.list_mutex = NULL;
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0x6260             STR      R0,[R4, #+36]
     46          
     47              return COAP_SUCCESS;
   \       0x4C   0xBD70             POP      {R4-R6,PC}       ;; return
     48          }
     49          
     50          

   \                                 In section .text, align 2, keep-with-next
     51          int CoAPObsServer_add(CoAPContext *context, const char *path, NetworkAddr *remote, CoAPMessage *request)
     52          {
   \                     CoAPObsServer_add: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4606             MOV      R6,R0
   \        0x6   0x4617             MOV      R7,R2
   \        0x8   0x4698             MOV      R8,R3
     53              int ret = COAP_SUCCESS;
     54              unsigned int observe;
     55              unsigned int  acceptype = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x9000             STR      R0,[SP, #+0]
     56              CoapObserver *obs = NULL;
     57              CoAPResource *resource = NULL;
     58              CoapObserver *node = NULL;
     59              CoAPIntContext *ctx = (CoAPIntContext *)context;
     60          
     61              resource = CoAPResourceByPath_get(ctx, path);
   \        0xE   0x4630             MOV      R0,R6
   \       0x10   0x....'....        BL       CoAPResourceByPath_get
   \       0x14   0x4604             MOV      R4,R0
     62          
     63              ret = CoAPUintOption_get(request, COAP_OPTION_OBSERVE,  &observe);
   \       0x16   0xAA01             ADD      R2,SP,#+4
   \       0x18   0x2106             MOVS     R1,#+6
   \       0x1A   0x4640             MOV      R0,R8
   \       0x1C   0x....'....        BL       CoAPUintOption_get
     64          
     65              if (NULL != resource && COAP_SUCCESS == ret && 0 == observe) {
   \       0x20   0x2C00             CMP      R4,#+0
   \       0x22   0xD07C             BEQ.N    ??CoAPObsServer_add_0
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD17A             BNE.N    ??CoAPObsServer_add_0
   \       0x28   0x9801             LDR      R0,[SP, #+4]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD177             BNE.N    ??CoAPObsServer_add_0
     66                  /*Check if the observe client already exist*/
     67                  HAL_MutexLock(ctx->obsserver.list_mutex);
   \       0x2E   0x6A70             LDR      R0,[R6, #+36]
   \       0x30   0x....'....        BL       HAL_MutexLock
     68                  list_for_each_entry(node, &ctx->obsserver.list, obslist, CoapObserver) {
   \       0x34   0x6AF0             LDR      R0,[R6, #+44]
   \       0x36   0xF1A0 0x0528      SUB      R5,R0,#+40
   \       0x3A   0xE002             B.N      ??CoAPObsServer_add_1
   \                     ??CoAPObsServer_add_2: (+1)
   \       0x3C   0x6AE8             LDR      R0,[R5, #+44]
   \       0x3E   0xF1A0 0x0528      SUB      R5,R0,#+40
   \                     ??CoAPObsServer_add_1: (+1)
   \       0x42   0x42B5             CMP      R5,R6
   \       0x44   0xD06F             BEQ.N    ??CoAPObsServer_add_3
     69                      if ((node->p_resource_of_interest == resource) &&
     70                          (node->remote.port == remote->port)  &&
     71                          (0 == memcmp(node->remote.addr, remote->addr, NETWORK_ADDR_LEN))) {
   \       0x46   0x69E8             LDR      R0,[R5, #+28]
   \       0x48   0x42A0             CMP      R0,R4
   \       0x4A   0xD1F7             BNE.N    ??CoAPObsServer_add_2
   \       0x4C   0x8A28             LDRH     R0,[R5, #+16]
   \       0x4E   0x8A39             LDRH     R1,[R7, #+16]
   \       0x50   0x4288             CMP      R0,R1
   \       0x52   0xD1F3             BNE.N    ??CoAPObsServer_add_2
   \       0x54   0x2210             MOVS     R2,#+16
   \       0x56   0x4639             MOV      R1,R7
   \       0x58   0x4628             MOV      R0,R5
   \       0x5A   0x....'....        BL       memcmp
   \       0x5E   0x2800             CMP      R0,#+0
   \       0x60   0xD1EC             BNE.N    ??CoAPObsServer_add_2
     72                          COAP_DEBUG("The observe client %s:%d already exist,update it", node->remote.addr, node->remote.port);
     73                          memcpy(node->token, request->token, request->header.tokenlen);
   \       0x62   0xF898 0x2000      LDRB     R2,[R8, #+0]
   \       0x66   0x0912             LSRS     R2,R2,#+4
   \       0x68   0xF108 0x0104      ADD      R1,R8,#+4
   \       0x6C   0xF105 0x0012      ADD      R0,R5,#+18
   \       0x70   0x....'....        BL       __aeabi_memcpy
     74                          node->tokenlen = request->header.tokenlen;
   \       0x74   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x78   0x0900             LSRS     R0,R0,#+4
   \       0x7A   0x76A8             STRB     R0,[R5, #+26]
     75                          HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \       0x7C   0x6A70             LDR      R0,[R6, #+36]
   \       0x7E   0x....'....        BL       HAL_MutexUnlock
     76                          return COAP_ERROR_OBJ_ALREADY_EXIST;
   \       0x82   0xF44F 0x7087      MOV      R0,#+270
   \       0x86   0xE04C             B.N      ??CoAPObsServer_add_4
     77                      }
     78                  }
     79                  HAL_MutexUnlock(ctx->obsserver.list_mutex);
     80          
     81          
     82                  obs = coap_malloc(sizeof(CoapObserver));
     83                  if (NULL == obs) {
     84                      COAP_ERR("Allocate memory failed");
     85                      return COAP_ERROR_MALLOC;
     86                  }
     87          
     88                  memset(obs, 0x00, sizeof(CoapObserver));
   \                     ??CoAPObsServer_add_5: (+1)
   \       0x88   0x2200             MOVS     R2,#+0
   \       0x8A   0x2130             MOVS     R1,#+48
   \       0x8C   0x....'....        BL       __aeabi_memset4
     89                  obs->msg_type = request->header.type;
                                       ^
Warning[Pe188]: enumerated type mixed with another type
   \       0x90   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x94   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \       0x98   0xF885 0x0024      STRB     R0,[R5, #+36]
     90                  obs->p_resource_of_interest = resource;
   \       0x9C   0x61EC             STR      R4,[R5, #+28]
     91                  memcpy(&obs->remote, remote, sizeof(NetworkAddr));
   \       0x9E   0x2212             MOVS     R2,#+18
   \       0xA0   0x4639             MOV      R1,R7
   \       0xA2   0x4628             MOV      R0,R5
   \       0xA4   0x....'....        BL       __aeabi_memcpy
     92                  memcpy(obs->token, request->token, request->header.tokenlen);
   \       0xA8   0xF898 0x2000      LDRB     R2,[R8, #+0]
   \       0xAC   0x0912             LSRS     R2,R2,#+4
   \       0xAE   0xF108 0x0104      ADD      R1,R8,#+4
   \       0xB2   0xF105 0x0012      ADD      R0,R5,#+18
   \       0xB6   0x....'....        BL       __aeabi_memcpy
     93                  obs->tokenlen = request->header.tokenlen;
   \       0xBA   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0xBE   0x0900             LSRS     R0,R0,#+4
   \       0xC0   0x76A8             STRB     R0,[R5, #+26]
     94          
     95          
     96                  CoAPUintOption_get(request, COAP_OPTION_ACCEPT, &acceptype);
   \       0xC2   0x466A             MOV      R2,SP
   \       0xC4   0x2111             MOVS     R1,#+17
   \       0xC6   0x4640             MOV      R0,R8
   \       0xC8   0x....'....        BL       CoAPUintOption_get
     97                  obs->ctype = (acceptype == 0) ? COAP_CT_APP_JSON : acceptype;
   \       0xCC   0x9800             LDR      R0,[SP, #+0]
   \       0xCE   0x2800             CMP      R0,#+0
   \       0xD0   0xD100             BNE.N    ??CoAPObsServer_add_6
   \       0xD2   0x2032             MOVS     R0,#+50
   \                     ??CoAPObsServer_add_6: (+1)
   \       0xD4   0x76E8             STRB     R0,[R5, #+27]
     98                  obs->observer_sequence_num = 0;
   \       0xD6   0x2000             MOVS     R0,#+0
   \       0xD8   0x6228             STR      R0,[R5, #+32]
     99          
    100                  /* TODO: */
    101                  /* CoAPObsServer_find(); */
    102          
    103                  HAL_MutexLock(ctx->obsserver.list_mutex);
   \       0xDA   0x6A70             LDR      R0,[R6, #+36]
   \       0xDC   0x....'....        BL       HAL_MutexLock
    104                  if (ctx->obsserver.count >= ctx->obsserver.maxcount) {
   \       0xE0   0xF896 0x0030      LDRB     R0,[R6, #+48]
   \       0xE4   0xF896 0x1031      LDRB     R1,[R6, #+49]
   \       0xE8   0x4288             CMP      R0,R1
   \       0xEA   0xD308             BCC.N    ??CoAPObsServer_add_7
    105                      HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \       0xEC   0x6A70             LDR      R0,[R6, #+36]
   \       0xEE   0x....'....        BL       HAL_MutexUnlock
    106                      coap_free(obs);
   \       0xF2   0x4628             MOV      R0,R5
   \       0xF4   0x....'....        BL       HAL_Free
    107                      COAP_INFO("Cur have %d observer, max allow %d", ctx->obsserver.count, ctx->obsserver.maxcount);
    108                      return COAP_ERROR_DATA_SIZE;
   \       0xF8   0xF240 0x1005      MOVW     R0,#+261
   \       0xFC   0xE011             B.N      ??CoAPObsServer_add_4
    109                  } else {
    110                      list_add_tail(&obs->obslist, &ctx->obsserver.list);
   \                     ??CoAPObsServer_add_7: (+1)
   \       0xFE   0xF106 0x0128      ADD      R1,R6,#+40
   \      0x102   0xF105 0x0028      ADD      R0,R5,#+40
   \      0x106   0x....'....        BL       dlist_add_tail
    111                      ctx->obsserver.count ++;
   \      0x10A   0xF896 0x0030      LDRB     R0,[R6, #+48]
   \      0x10E   0x1C40             ADDS     R0,R0,#+1
   \      0x110   0xF886 0x0030      STRB     R0,[R6, #+48]
    112                      COAP_DEBUG("Create a observe node, cur have %d nodes", ctx->obsserver.count);
    113                      HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \      0x114   0x6A70             LDR      R0,[R6, #+36]
   \      0x116   0x....'....        BL       HAL_MutexUnlock
    114                      return COAP_SUCCESS;
   \      0x11A   0x2000             MOVS     R0,#+0
   \      0x11C   0xE001             B.N      ??CoAPObsServer_add_4
    115                  }
    116          
    117              }
    118          
    119              return COAP_ERROR_NOT_FOUND;
   \                     ??CoAPObsServer_add_0: (+1)
   \      0x11E   0xF240 0x1007      MOVW     R0,#+263
   \                     ??CoAPObsServer_add_4: (+1)
   \      0x122   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
   \                     ??CoAPObsServer_add_3: (+1)
   \      0x126   0x6A70             LDR      R0,[R6, #+36]
   \      0x128   0x....'....        BL       HAL_MutexUnlock
   \      0x12C   0x2030             MOVS     R0,#+48
   \      0x12E   0x....'....        BL       HAL_Malloc
   \      0x132   0x0005             MOVS     R5,R0
   \      0x134   0xD1A8             BNE.N    ??CoAPObsServer_add_5
   \      0x136   0xF240 0x1003      MOVW     R0,#+259
   \      0x13A   0xE7F2             B.N      ??CoAPObsServer_add_4
    120          }
    121          
    122          

   \                                 In section .text, align 2, keep-with-next
    123          int CoapObsServer_delete(CoAPContext *context,          NetworkAddr  *remote,
    124                                   CoAPResource *resource)
    125          {
   \                     CoapObsServer_delete: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4616             MOV      R6,R2
    126              CoapObserver *node = NULL, *next = NULL;
    127              CoAPIntContext *ctx = (CoAPIntContext *)context;
    128          
    129              HAL_MutexLock(ctx->obsserver.list_mutex);
   \        0xA   0x6A60             LDR      R0,[R4, #+36]
   \        0xC   0x....'....        BL       HAL_MutexLock
    130              list_for_each_entry_safe(node, next, &ctx->obsserver.list, obslist, CoapObserver) {
   \       0x10   0x6AE0             LDR      R0,[R4, #+44]
   \       0x12   0xF1A0 0x0728      SUB      R7,R0,#+40
   \       0x16   0x6AF8             LDR      R0,[R7, #+44]
   \       0x18   0xF1A0 0x0828      SUB      R8,R0,#+40
   \       0x1C   0xE004             B.N      ??CoapObsServer_delete_0
   \                     ??CoapObsServer_delete_1: (+1)
   \       0x1E   0x4647             MOV      R7,R8
   \       0x20   0xF8D8 0x002C      LDR      R0,[R8, #+44]
   \       0x24   0xF1A0 0x0828      SUB      R8,R0,#+40
   \                     ??CoapObsServer_delete_0: (+1)
   \       0x28   0x42A7             CMP      R7,R4
   \       0x2A   0xD019             BEQ.N    ??CoapObsServer_delete_2
    131                  if ((node->p_resource_of_interest == resource) &&
    132                      (node->remote.port == remote->port)  &&
    133                      (0 == memcmp(node->remote.addr, remote->addr, NETWORK_ADDR_LEN))) {
   \       0x2C   0x69F8             LDR      R0,[R7, #+28]
   \       0x2E   0x42B0             CMP      R0,R6
   \       0x30   0xD1F5             BNE.N    ??CoapObsServer_delete_1
   \       0x32   0x8A38             LDRH     R0,[R7, #+16]
   \       0x34   0x8A29             LDRH     R1,[R5, #+16]
   \       0x36   0x4288             CMP      R0,R1
   \       0x38   0xD1F1             BNE.N    ??CoapObsServer_delete_1
   \       0x3A   0x2210             MOVS     R2,#+16
   \       0x3C   0x4629             MOV      R1,R5
   \       0x3E   0x4638             MOV      R0,R7
   \       0x40   0x....'....        BL       memcmp
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD1EA             BNE.N    ??CoapObsServer_delete_1
    134                      ctx->obsserver.count --;
   \       0x48   0xF894 0x0030      LDRB     R0,[R4, #+48]
   \       0x4C   0x1E40             SUBS     R0,R0,#+1
   \       0x4E   0xF884 0x0030      STRB     R0,[R4, #+48]
    135                      list_del(&node->obslist);
   \       0x52   0xF107 0x0028      ADD      R0,R7,#+40
   \       0x56   0x....'....        BL       dlist_del
    136                      COAP_DEBUG("Delete %s:%d from observe server", node->remote.addr, node->remote.port);
    137                      coap_free(node);
   \       0x5A   0x4638             MOV      R0,R7
   \       0x5C   0x....'....        BL       HAL_Free
    138                      break;
    139                  }
    140              }
    141              HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \                     ??CoapObsServer_delete_2: (+1)
   \       0x60   0x6A60             LDR      R0,[R4, #+36]
   \       0x62   0x....'....        BL       HAL_MutexUnlock
    142          
    143              return COAP_SUCCESS;
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    144          }
    145          

   \                                 In section .text, align 2, keep-with-next
    146          int CoapObsServerAll_delete(CoAPContext *context,          NetworkAddr  *remote)
    147          {
   \                     CoapObsServerAll_delete: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x460E             MOV      R6,R1
    148              CoapObserver *node = NULL, *next = NULL;
    149              CoAPIntContext *ctx = (CoAPIntContext *)context;
    150          
    151              HAL_MutexLock(ctx->obsserver.list_mutex);
   \        0x6   0x6A68             LDR      R0,[R5, #+36]
   \        0x8   0x....'....        BL       HAL_MutexLock
    152              list_for_each_entry_safe(node, next, &ctx->obsserver.list, obslist, CoapObserver) {
   \        0xC   0x6AE8             LDR      R0,[R5, #+44]
   \        0xE   0xF1A0 0x0428      SUB      R4,R0,#+40
   \       0x12   0x6AE0             LDR      R0,[R4, #+44]
   \       0x14   0xF1A0 0x0728      SUB      R7,R0,#+40
   \       0x18   0xE01C             B.N      ??CoapObsServerAll_delete_0
    153                  if (NULL != node && (node->remote.port == remote->port)  &&
    154                      (0 == memcmp(node->remote.addr, remote->addr, NETWORK_ADDR_LEN))) {
   \                     ??CoapObsServerAll_delete_1: (+1)
   \       0x1A   0x2C00             CMP      R4,#+0
   \       0x1C   0xD016             BEQ.N    ??CoapObsServerAll_delete_2
   \       0x1E   0x8A20             LDRH     R0,[R4, #+16]
   \       0x20   0x8A31             LDRH     R1,[R6, #+16]
   \       0x22   0x4288             CMP      R0,R1
   \       0x24   0xD112             BNE.N    ??CoapObsServerAll_delete_2
   \       0x26   0x2210             MOVS     R2,#+16
   \       0x28   0x4631             MOV      R1,R6
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x....'....        BL       memcmp
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD10B             BNE.N    ??CoapObsServerAll_delete_2
    155                      ctx->obsserver.count --;
   \       0x34   0xF895 0x0030      LDRB     R0,[R5, #+48]
   \       0x38   0x1E40             SUBS     R0,R0,#+1
   \       0x3A   0xF885 0x0030      STRB     R0,[R5, #+48]
    156                      list_del(&node->obslist);
   \       0x3E   0xF104 0x0028      ADD      R0,R4,#+40
   \       0x42   0x....'....        BL       dlist_del
    157                      COAP_DEBUG("Delete %s:%d from observe server, cur observe count %d",
    158                                 node->remote.addr, node->remote.port, ctx->obsserver.count);
    159                      coap_free(node);
   \       0x46   0x4620             MOV      R0,R4
   \       0x48   0x....'....        BL       HAL_Free
    160                  }
    161              }
   \                     ??CoapObsServerAll_delete_2: (+1)
   \       0x4C   0x463C             MOV      R4,R7
   \       0x4E   0x6AF8             LDR      R0,[R7, #+44]
   \       0x50   0xF1A0 0x0728      SUB      R7,R0,#+40
   \                     ??CoapObsServerAll_delete_0: (+1)
   \       0x54   0x42AC             CMP      R4,R5
   \       0x56   0xD1E0             BNE.N    ??CoapObsServerAll_delete_1
    162              HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \       0x58   0x6A68             LDR      R0,[R5, #+36]
   \       0x5A   0x....'....        BL       HAL_MutexUnlock
    163          
    164              return COAP_SUCCESS;
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    165          }
    166          
    167          

   \                                 In section .text, align 2, keep-with-next
    168          int CoAPObsServer_notify(CoAPContext *context,
    169                                   const char *path, unsigned char *payload,
    170                                   unsigned short payloadlen, CoAPDataEncrypt handler)
    171          {
   \                     CoAPObsServer_notify: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB0A7             SUB      SP,SP,#+156
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0x4616             MOV      R6,R2
   \        0xC   0x461F             MOV      R7,R3
    172              unsigned int ret  = COAP_SUCCESS;
   \        0xE   0xF04F 0x0B00      MOV      R11,#+0
    173              CoAPResource *resource = NULL;
    174              CoapObserver *node     = NULL;
    175              CoAPLenString src;
    176              CoAPLenString dest;
    177              CoAPIntContext *ctx = (CoAPIntContext *)context;
    178          
    179              resource = CoAPResourceByPath_get(ctx, path);
   \       0x12   0x....'....        BL       CoAPResourceByPath_get
   \       0x16   0x4681             MOV      R9,R0
    180          
    181              if (NULL != resource) {
   \       0x18   0xF1B9 0x0F00      CMP      R9,#+0
   \       0x1C   0xF000 0x8088      BEQ.W    ??CoAPObsServer_notify_0
    182                  HAL_MutexLock(ctx->obsserver.list_mutex);
   \       0x20   0x6A60             LDR      R0,[R4, #+36]
   \       0x22   0x....'....        BL       HAL_MutexLock
    183                  list_for_each_entry(node, &ctx->obsserver.list, obslist, CoapObserver) {
   \       0x26   0x6AE0             LDR      R0,[R4, #+44]
   \       0x28   0xF1A0 0x0A28      SUB      R10,R0,#+40
   \       0x2C   0xF8DD 0x80C0      LDR      R8,[SP, #+192]
   \                     ??CoAPObsServer_notify_1: (+1)
   \       0x30   0x45A2             CMP      R10,R4
   \       0x32   0xD07A             BEQ.N    ??CoAPObsServer_notify_2
    184                      if (node->p_resource_of_interest == resource) {
   \       0x34   0xF8DA 0x001C      LDR      R0,[R10, #+28]
   \       0x38   0x4548             CMP      R0,R9
   \       0x3A   0xD171             BNE.N    ??CoAPObsServer_notify_3
    185                          CoAPMessage message;
    186                          CoAPMessage_init(&message);
   \       0x3C   0xA806             ADD      R0,SP,#+24
   \       0x3E   0x....'....        BL       CoAPMessage_init
    187                          CoAPMessageType_set(&message, node->msg_type);
   \       0x42   0xF89A 0x1024      LDRB     R1,[R10, #+36]
   \       0x46   0xA806             ADD      R0,SP,#+24
   \       0x48   0x....'....        BL       CoAPMessageType_set
    188                          CoAPMessageCode_set(&message, COAP_MSG_CODE_205_CONTENT);
   \       0x4C   0x2145             MOVS     R1,#+69
   \       0x4E   0xA806             ADD      R0,SP,#+24
   \       0x50   0x....'....        BL       CoAPMessageCode_set
    189                          CoAPMessageId_set(&message, CoAPMessageId_gen(ctx));
   \       0x54   0x4620             MOV      R0,R4
   \       0x56   0x....'....        BL       CoAPMessageId_gen
   \       0x5A   0x4601             MOV      R1,R0
   \       0x5C   0xA806             ADD      R0,SP,#+24
   \       0x5E   0x....'....        BL       CoAPMessageId_set
    190                          CoAPMessageHandler_set(&message, NULL);
   \       0x62   0x2100             MOVS     R1,#+0
   \       0x64   0xA806             ADD      R0,SP,#+24
   \       0x66   0x....'....        BL       CoAPMessageHandler_set
    191                          CoAPMessageUserData_set(&message, node->p_resource_of_interest);
   \       0x6A   0xF8DA 0x101C      LDR      R1,[R10, #+28]
   \       0x6E   0xA806             ADD      R0,SP,#+24
   \       0x70   0x....'....        BL       CoAPMessageUserData_set
    192                          CoAPMessageToken_set(&message, node->token, node->tokenlen);
   \       0x74   0xF89A 0x201A      LDRB     R2,[R10, #+26]
   \       0x78   0xF10A 0x0112      ADD      R1,R10,#+18
   \       0x7C   0xA806             ADD      R0,SP,#+24
   \       0x7E   0x....'....        BL       CoAPMessageToken_set
    193                          CoAPUintOption_add(&message, COAP_OPTION_OBSERVE, node->observer_sequence_num++);
   \       0x82   0xF8DA 0x2020      LDR      R2,[R10, #+32]
   \       0x86   0x1C50             ADDS     R0,R2,#+1
   \       0x88   0xF8CA 0x0020      STR      R0,[R10, #+32]
   \       0x8C   0x2106             MOVS     R1,#+6
   \       0x8E   0xA806             ADD      R0,SP,#+24
   \       0x90   0x....'....        BL       CoAPUintOption_add
    194                          CoAPUintOption_add(&message, COAP_OPTION_CONTENT_FORMAT, node->ctype);
   \       0x94   0xF89A 0x201B      LDRB     R2,[R10, #+27]
   \       0x98   0x210C             MOVS     R1,#+12
   \       0x9A   0xA806             ADD      R0,SP,#+24
   \       0x9C   0x....'....        BL       CoAPUintOption_add
    195                          CoAPUintOption_add(&message, COAP_OPTION_MAXAGE, resource->maxage);
   \       0xA0   0xF8D9 0x200C      LDR      R2,[R9, #+12]
   \       0xA4   0x210E             MOVS     R1,#+14
   \       0xA6   0xA806             ADD      R0,SP,#+24
   \       0xA8   0x....'....        BL       CoAPUintOption_add
    196                          COAP_DEBUG("Send notify message path %s to remote %s:%d ",
    197                                     path, node->remote.addr, node->remote.port);
    198          
    199                          memset(&dest, 0x00, sizeof(CoAPLenString));
   \       0xAC   0x2200             MOVS     R2,#+0
   \       0xAE   0x2108             MOVS     R1,#+8
   \       0xB0   0xA802             ADD      R0,SP,#+8
   \       0xB2   0x....'....        BL       __aeabi_memset4
    200                          if (NULL != handler) {
   \       0xB6   0x4640             MOV      R0,R8
   \       0xB8   0x2800             CMP      R0,#+0
   \       0xBA   0xD105             BNE.N    ??CoAPObsServer_notify_4
    201                              src.len = payloadlen;
    202                              src.data = payload;
    203                              ret = handler(context, path, &node->remote, &message, &src, &dest);
    204                              if (COAP_SUCCESS == ret) {
    205                                  CoAPMessagePayload_set(&message, dest.data, dest.len);
    206                              } else {
    207                                  COAP_INFO("Encrypt payload failed");
    208                              }
    209                          } else {
    210                              CoAPMessagePayload_set(&message, payload, payloadlen);
   \       0xBC   0x463A             MOV      R2,R7
   \       0xBE   0x4631             MOV      R1,R6
   \       0xC0   0xA806             ADD      R0,SP,#+24
   \       0xC2   0x....'....        BL       CoAPMessagePayload_set
   \       0xC6   0xE014             B.N      ??CoAPObsServer_notify_5
    211                          }
   \                     ??CoAPObsServer_notify_4: (+1)
   \       0xC8   0x4638             MOV      R0,R7
   \       0xCA   0x9004             STR      R0,[SP, #+16]
   \       0xCC   0x9605             STR      R6,[SP, #+20]
   \       0xCE   0xA802             ADD      R0,SP,#+8
   \       0xD0   0x9001             STR      R0,[SP, #+4]
   \       0xD2   0xA804             ADD      R0,SP,#+16
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0xAB06             ADD      R3,SP,#+24
   \       0xD8   0x4652             MOV      R2,R10
   \       0xDA   0x4629             MOV      R1,R5
   \       0xDC   0x4620             MOV      R0,R4
   \       0xDE   0x47C0             BLX      R8
   \       0xE0   0x2800             CMP      R0,#+0
   \       0xE2   0xD106             BNE.N    ??CoAPObsServer_notify_5
   \       0xE4   0x9802             LDR      R0,[SP, #+8]
   \       0xE6   0x4602             MOV      R2,R0
   \       0xE8   0xB292             UXTH     R2,R2
   \       0xEA   0x9903             LDR      R1,[SP, #+12]
   \       0xEC   0xA806             ADD      R0,SP,#+24
   \       0xEE   0x....'....        BL       CoAPMessagePayload_set
    212                          ret = CoAPMessage_send(ctx, &node->remote, &message);
   \                     ??CoAPObsServer_notify_5: (+1)
   \       0xF2   0xAA06             ADD      R2,SP,#+24
   \       0xF4   0x4651             MOV      R1,R10
   \       0xF6   0x4620             MOV      R0,R4
   \       0xF8   0x....'....        BL       CoAPMessage_send
   \       0xFC   0x4683             MOV      R11,R0
    213                          if (NULL != handler && 0 != dest.len && NULL != dest.data) {
   \       0xFE   0x4640             MOV      R0,R8
   \      0x100   0x2800             CMP      R0,#+0
   \      0x102   0xD00A             BEQ.N    ??CoAPObsServer_notify_6
   \      0x104   0x9802             LDR      R0,[SP, #+8]
   \      0x106   0x2800             CMP      R0,#+0
   \      0x108   0xD007             BEQ.N    ??CoAPObsServer_notify_6
   \      0x10A   0x9803             LDR      R0,[SP, #+12]
   \      0x10C   0x2800             CMP      R0,#+0
   \      0x10E   0xD004             BEQ.N    ??CoAPObsServer_notify_6
    214                              coap_free(dest.data);
   \      0x110   0x....'....        BL       HAL_Free
   \      0x114   0x2000             MOVS     R0,#+0
   \      0x116   0x9003             STR      R0,[SP, #+12]
    215                              dest.len = 0;
   \      0x118   0x9002             STR      R0,[SP, #+8]
    216                          }
    217                          CoAPMessage_destory(&message);
   \                     ??CoAPObsServer_notify_6: (+1)
   \      0x11A   0xA806             ADD      R0,SP,#+24
   \      0x11C   0x....'....        BL       CoAPMessage_destory
    218                      }
    219                  }
   \                     ??CoAPObsServer_notify_3: (+1)
   \      0x120   0xF8DA 0x002C      LDR      R0,[R10, #+44]
   \      0x124   0xF1A0 0x0A28      SUB      R10,R0,#+40
   \      0x128   0xE782             B.N      ??CoAPObsServer_notify_1
    220          
    221                  HAL_MutexUnlock(ctx->obsserver.list_mutex);
   \                     ??CoAPObsServer_notify_2: (+1)
   \      0x12A   0x6A60             LDR      R0,[R4, #+36]
   \      0x12C   0x....'....        BL       HAL_MutexUnlock
    222              }
    223              return ret;
   \                     ??CoAPObsServer_notify_0: (+1)
   \      0x130   0x4658             MOV      R0,R11
   \      0x132   0xB027             ADD      SP,SP,#+156
   \      0x134   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    224          }
    225          
    226          #endif
    227          
    228          #ifndef COAP_OBSERVE_CLIENT_DISABLE

   \                                 In section .text, align 2, keep-with-next
    229          int CoAPObsClient_init(CoAPContext *context, unsigned char        obs_maxcount)
    230          {
   \                     CoAPObsClient_init: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    231              CoAPIntContext *ctx = (CoAPIntContext *)context;
    232          
    233              ctx->obsclient.list_mutex = HAL_MutexCreate();
   \        0x6   0x....'....        BL       HAL_MutexCreate
   \        0xA   0x6360             STR      R0,[R4, #+52]
    234          
    235              HAL_MutexLock(ctx->obsclient.list_mutex);
   \        0xC   0x....'....        BL       HAL_MutexLock
    236              INIT_LIST_HEAD(&ctx->obsclient.list);
   \       0x10   0xF104 0x0038      ADD      R0,R4,#+56
   \       0x14   0x....'....        BL       INIT_AOS_DLIST_HEAD
    237              ctx->obsclient.count = 0;
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0xF884 0x0040      STRB     R0,[R4, #+64]
    238              ctx->obsclient.maxcount = obs_maxcount;
   \       0x1E   0xF884 0x5041      STRB     R5,[R4, #+65]
    239              HAL_MutexUnlock(ctx->obsclient.list_mutex);
   \       0x22   0x6B60             LDR      R0,[R4, #+52]
   \       0x24   0x....'....        BL       HAL_MutexUnlock
    240          
    241              return COAP_SUCCESS;
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    242          }
    243          

   \                                 In section .text, align 2, keep-with-next
    244          int CoAPObsClient_deinit(CoAPContext *context)
    245          {
   \                     CoAPObsClient_deinit: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
    246              CoAPObservable *node = NULL, *next =  NULL;
    247              CoAPIntContext *ctx = (CoAPIntContext *)context;
    248          
    249              HAL_MutexLock(ctx->obsclient.list_mutex);
   \        0x4   0x6B60             LDR      R0,[R4, #+52]
   \        0x6   0x....'....        BL       HAL_MutexLock
    250              list_for_each_entry_safe(node, next, &ctx->obsclient.list, obslist, CoAPObservable) {
   \        0xA   0x6BE0             LDR      R0,[R4, #+60]
   \        0xC   0xF1A0 0x0524      SUB      R5,R0,#+36
   \       0x10   0x6AA8             LDR      R0,[R5, #+40]
   \       0x12   0xF1A0 0x0624      SUB      R6,R0,#+36
   \       0x16   0xE008             B.N      ??CoAPObsClient_deinit_0
    251                  list_del(&node->obslist);
   \                     ??CoAPObsClient_deinit_1: (+1)
   \       0x18   0x....'....        BL       dlist_del
    252                  coap_free(node);
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x....'....        BL       HAL_Free
    253              }
   \       0x22   0x4635             MOV      R5,R6
   \       0x24   0x6AB0             LDR      R0,[R6, #+40]
   \       0x26   0xF1A0 0x0624      SUB      R6,R0,#+36
   \                     ??CoAPObsClient_deinit_0: (+1)
   \       0x2A   0xF105 0x0024      ADD      R0,R5,#+36
   \       0x2E   0xF104 0x0138      ADD      R1,R4,#+56
   \       0x32   0x4288             CMP      R0,R1
   \       0x34   0xD1F0             BNE.N    ??CoAPObsClient_deinit_1
    254              ctx->obsclient.count = 0;
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0xF884 0x0040      STRB     R0,[R4, #+64]
    255              ctx->obsclient.maxcount = 0;
   \       0x3C   0xF884 0x0041      STRB     R0,[R4, #+65]
    256              HAL_MutexUnlock(ctx->obsclient.list_mutex);
   \       0x40   0x6B60             LDR      R0,[R4, #+52]
   \       0x42   0x....'....        BL       HAL_MutexUnlock
    257          
    258              HAL_MutexDestroy(ctx->obsclient.list_mutex);
   \       0x46   0x6B60             LDR      R0,[R4, #+52]
   \       0x48   0x....'....        BL       HAL_MutexDestroy
    259              ctx->obsclient.list_mutex = NULL;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0x6360             STR      R0,[R4, #+52]
    260              return COAP_SUCCESS;
   \       0x50   0xBD70             POP      {R4-R6,PC}       ;; return
    261          }
    262          

   \                                 In section .text, align 2, keep-with-next
    263          int CoAPObsClient_add(CoAPContext *context, CoAPMessage *message, NetworkAddr *remote, CoAPSendNode *sendnode)
    264          {
   \                     CoAPObsClient_add: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x4689             MOV      R9,R1
   \        0x8   0x4616             MOV      R6,R2
   \        0xA   0x461D             MOV      R5,R3
    265              CoAPObservable *node = NULL, *next =  NULL;
    266              CoAPIntContext *ctx = (CoAPIntContext *)context;
    267          
    268              if (COAP_SUCCESS == CoAPOption_present(message, COAP_OPTION_OBSERVE)) {
   \        0xC   0x2106             MOVS     R1,#+6
   \        0xE   0x4648             MOV      R0,R9
   \       0x10   0x....'....        BL       CoAPOption_present
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xF040 0x8095      BNE.W    ??CoAPObsClient_add_0
    269                  COAP_DEBUG("There is Observe option in message, handle it");
    270                  if (NULL == sendnode) { /* Not the first response */
   \       0x1A   0x2D00             CMP      R5,#+0
   \       0x1C   0xD134             BNE.N    ??CoAPObsClient_add_1
    271          
    272                      HAL_MutexLock(ctx->obsclient.list_mutex);
   \       0x1E   0x6B60             LDR      R0,[R4, #+52]
   \       0x20   0x....'....        BL       HAL_MutexLock
    273                      list_for_each_entry(node, &ctx->obsclient.list, obslist, CoAPObservable) {
   \       0x24   0x6BE0             LDR      R0,[R4, #+60]
   \       0x26   0xF1A0 0x0524      SUB      R5,R0,#+36
   \       0x2A   0xE002             B.N      ??CoAPObsClient_add_2
   \                     ??CoAPObsClient_add_3: (+1)
   \       0x2C   0x6AA8             LDR      R0,[R5, #+40]
   \       0x2E   0xF1A0 0x0524      SUB      R5,R0,#+36
   \                     ??CoAPObsClient_add_2: (+1)
   \       0x32   0xF105 0x0024      ADD      R0,R5,#+36
   \       0x36   0xF104 0x0138      ADD      R1,R4,#+56
   \       0x3A   0x4288             CMP      R0,R1
   \       0x3C   0xF000 0x80B3      BEQ.W    ??CoAPObsClient_add_4
    274                          if (0 != node->tokenlen && node->tokenlen == message->header.tokenlen
    275                              && 0 == memcmp(node->token, message->token, node->tokenlen)) {
   \       0x40   0x7EA8             LDRB     R0,[R5, #+26]
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD0F2             BEQ.N    ??CoAPObsClient_add_3
   \       0x46   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \       0x4A   0xEBB0 0x1F11      CMP      R0,R1, LSR #+4
   \       0x4E   0xD1ED             BNE.N    ??CoAPObsClient_add_3
   \       0x50   0x4602             MOV      R2,R0
   \       0x52   0xF109 0x0104      ADD      R1,R9,#+4
   \       0x56   0xF105 0x0012      ADD      R0,R5,#+18
   \       0x5A   0x....'....        BL       memcmp
   \       0x5E   0x2800             CMP      R0,#+0
   \       0x60   0xD1E4             BNE.N    ??CoAPObsClient_add_3
    276                              CoAPUintOption_get(message, COAP_OPTION_MAXAGE, &node->max_age);
   \       0x62   0xF105 0x0220      ADD      R2,R5,#+32
   \       0x66   0x210E             MOVS     R1,#+14
   \       0x68   0x4648             MOV      R0,R9
   \       0x6A   0x....'....        BL       CoAPUintOption_get
    277                              if (NULL != node->callback) {
   \       0x6E   0x69E8             LDR      R0,[R5, #+28]
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xF000 0x8098      BEQ.W    ??CoAPObsClient_add_4
    278                                  COAP_DEBUG("Call the observe client callback %p", node->callback);
    279                                  node->callback(ctx, COAP_REQUEST_SUCCESS, node->userdata, remote, message);
   \       0x76   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \       0x7A   0x4633             MOV      R3,R6
   \       0x7C   0x6AEA             LDR      R2,[R5, #+44]
   \       0x7E   0x2100             MOVS     R1,#+0
   \       0x80   0x4620             MOV      R0,R4
   \       0x82   0x69ED             LDR      R5,[R5, #+28]
   \       0x84   0x47A8             BLX      R5
   \       0x86   0xE08E             B.N      ??CoAPObsClient_add_4
    280                              } else {
    281                                  COAP_INFO("The observe client callback is NULL");
    282                              }
    283                              break;
    284                          }
    285                      }
    286                      HAL_MutexUnlock(ctx->obsclient.list_mutex);
    287          
    288                  } else {
    289                      int found = 0;
   \                     ??CoAPObsClient_add_1: (+1)
   \       0x88   0x2700             MOVS     R7,#+0
    290                      HAL_MutexLock(ctx->obsclient.list_mutex);
   \       0x8A   0x6B60             LDR      R0,[R4, #+52]
   \       0x8C   0x....'....        BL       HAL_MutexLock
    291                      list_for_each_entry(node, &ctx->obsclient.list, obslist, CoAPObservable) {
   \       0x90   0x6BE0             LDR      R0,[R4, #+60]
   \       0x92   0xF1A0 0x0824      SUB      R8,R0,#+36
   \       0x96   0xE003             B.N      ??CoAPObsClient_add_5
   \                     ??CoAPObsClient_add_6: (+1)
   \       0x98   0xF8D8 0x0028      LDR      R0,[R8, #+40]
   \       0x9C   0xF1A0 0x0824      SUB      R8,R0,#+36
   \                     ??CoAPObsClient_add_5: (+1)
   \       0xA0   0xF108 0x0024      ADD      R0,R8,#+36
   \       0xA4   0xF104 0x0138      ADD      R1,R4,#+56
   \       0xA8   0x4288             CMP      R0,R1
   \       0xAA   0xD012             BEQ.N    ??CoAPObsClient_add_7
    292                          if (0 != node->tokenlen && node->tokenlen == message->header.tokenlen
    293                              && 0 == memcmp(node->token, message->token, node->tokenlen)) {
   \       0xAC   0xF898 0x001A      LDRB     R0,[R8, #+26]
   \       0xB0   0x2800             CMP      R0,#+0
   \       0xB2   0xD0F1             BEQ.N    ??CoAPObsClient_add_6
   \       0xB4   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \       0xB8   0xEBB0 0x1F11      CMP      R0,R1, LSR #+4
   \       0xBC   0xD1EC             BNE.N    ??CoAPObsClient_add_6
   \       0xBE   0x4602             MOV      R2,R0
   \       0xC0   0xF109 0x0104      ADD      R1,R9,#+4
   \       0xC4   0xF108 0x0012      ADD      R0,R8,#+18
   \       0xC8   0x....'....        BL       memcmp
   \       0xCC   0x2800             CMP      R0,#+0
   \       0xCE   0xD1E3             BNE.N    ??CoAPObsClient_add_6
    294                              found = 1;
   \       0xD0   0x2701             MOVS     R7,#+1
    295                              break;
    296                          }
    297                      }
    298                      if (!found && ctx->obsclient.count < ctx->obsclient.maxcount) {
   \                     ??CoAPObsClient_add_7: (+1)
   \       0xD2   0x2F00             CMP      R7,#+0
   \       0xD4   0xD167             BNE.N    ??CoAPObsClient_add_4
   \       0xD6   0xF894 0x0040      LDRB     R0,[R4, #+64]
   \       0xDA   0xF894 0x1041      LDRB     R1,[R4, #+65]
   \       0xDE   0x4288             CMP      R0,R1
   \       0xE0   0xD261             BCS.N    ??CoAPObsClient_add_4
    299                          CoAPObservable *newnode = coap_malloc(sizeof(CoAPObservable));
   \       0xE2   0x2030             MOVS     R0,#+48
   \       0xE4   0x....'....        BL       HAL_Malloc
   \       0xE8   0x0007             MOVS     R7,R0
    300                          if (NULL != newnode) {
   \       0xEA   0xD05C             BEQ.N    ??CoAPObsClient_add_4
    301                              memset(newnode, 0x00, sizeof(CoAPObservable));
   \       0xEC   0x2200             MOVS     R2,#+0
   \       0xEE   0x2130             MOVS     R1,#+48
   \       0xF0   0x....'....        BL       __aeabi_memset4
    302                              newnode->tokenlen = message->header.tokenlen;
   \       0xF4   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \       0xF8   0x0900             LSRS     R0,R0,#+4
   \       0xFA   0x76B8             STRB     R0,[R7, #+26]
    303                              memcpy(newnode->token, message->token, message->header.tokenlen);
   \       0xFC   0xF899 0x2000      LDRB     R2,[R9, #+0]
   \      0x100   0x0912             LSRS     R2,R2,#+4
   \      0x102   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x106   0xF107 0x0012      ADD      R0,R7,#+18
   \      0x10A   0x....'....        BL       __aeabi_memcpy
    304                              memcpy(&newnode->remote, remote, sizeof(NetworkAddr));
   \      0x10E   0x2212             MOVS     R2,#+18
   \      0x110   0x4631             MOV      R1,R6
   \      0x112   0x4638             MOV      R0,R7
   \      0x114   0x....'....        BL       __aeabi_memcpy
    305                              newnode->callback = sendnode->handler;
   \      0x118   0x6A28             LDR      R0,[R5, #+32]
   \      0x11A   0x61F8             STR      R0,[R7, #+28]
    306                              newnode->userdata = sendnode->user;
   \      0x11C   0x6C28             LDR      R0,[R5, #+64]
   \      0x11E   0x62F8             STR      R0,[R7, #+44]
    307                              CoAPUintOption_get(message, COAP_OPTION_MAXAGE, &newnode->max_age);
   \      0x120   0xF107 0x0220      ADD      R2,R7,#+32
   \      0x124   0x210E             MOVS     R1,#+14
   \      0x126   0x4648             MOV      R0,R9
   \      0x128   0x....'....        BL       CoAPUintOption_get
    308                              list_add_tail(&newnode->obslist, &ctx->obsclient.list);
   \      0x12C   0xF104 0x0138      ADD      R1,R4,#+56
   \      0x130   0xF107 0x0024      ADD      R0,R7,#+36
   \      0x134   0x....'....        BL       dlist_add_tail
    309                              ctx->obsclient.count ++;
   \      0x138   0xF894 0x0040      LDRB     R0,[R4, #+64]
   \      0x13C   0x1C40             ADDS     R0,R0,#+1
   \      0x13E   0xF884 0x0040      STRB     R0,[R4, #+64]
   \      0x142   0xE030             B.N      ??CoAPObsClient_add_4
    310                              COAP_DEBUG("Add a new obsclient");
    311                          }
    312                      } else {
    313                          COAP_INFO("Cur have %d obsclient, max allow %d", ctx->obsclient.count, ctx->obsclient.maxcount);
    314                      }
    315                      HAL_MutexUnlock(ctx->obsclient.list_mutex);
    316                  }
    317              } else {
    318                  HAL_MutexLock(ctx->obsclient.list_mutex);
   \                     ??CoAPObsClient_add_0: (+1)
   \      0x144   0x6B60             LDR      R0,[R4, #+52]
   \      0x146   0x....'....        BL       HAL_MutexLock
    319                  list_for_each_entry_safe(node, next, &ctx->obsclient.list, obslist, CoAPObservable) {
   \      0x14A   0x6BE0             LDR      R0,[R4, #+60]
   \      0x14C   0xF1A0 0x0524      SUB      R5,R0,#+36
   \      0x150   0x6AA8             LDR      R0,[R5, #+40]
   \      0x152   0xF1A0 0x0624      SUB      R6,R0,#+36
   \      0x156   0xE003             B.N      ??CoAPObsClient_add_8
   \                     ??CoAPObsClient_add_9: (+1)
   \      0x158   0x4635             MOV      R5,R6
   \      0x15A   0x6AB0             LDR      R0,[R6, #+40]
   \      0x15C   0xF1A0 0x0624      SUB      R6,R0,#+36
   \                     ??CoAPObsClient_add_8: (+1)
   \      0x160   0xF105 0x0024      ADD      R0,R5,#+36
   \      0x164   0xF104 0x0138      ADD      R1,R4,#+56
   \      0x168   0x4288             CMP      R0,R1
   \      0x16A   0xD01C             BEQ.N    ??CoAPObsClient_add_4
    320                      if (0 != node->tokenlen && node->tokenlen == message->header.tokenlen
    321                          && 0 == memcmp(node->token, message->token, node->tokenlen)) {
   \      0x16C   0x7EA8             LDRB     R0,[R5, #+26]
   \      0x16E   0x2800             CMP      R0,#+0
   \      0x170   0xD0F2             BEQ.N    ??CoAPObsClient_add_9
   \      0x172   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \      0x176   0xEBB0 0x1F11      CMP      R0,R1, LSR #+4
   \      0x17A   0xD1ED             BNE.N    ??CoAPObsClient_add_9
   \      0x17C   0x4602             MOV      R2,R0
   \      0x17E   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x182   0xF105 0x0012      ADD      R0,R5,#+18
   \      0x186   0x....'....        BL       memcmp
   \      0x18A   0x2800             CMP      R0,#+0
   \      0x18C   0xD1E4             BNE.N    ??CoAPObsClient_add_9
    322                          list_del(&node->obslist);
   \      0x18E   0xF105 0x0024      ADD      R0,R5,#+36
   \      0x192   0x....'....        BL       dlist_del
    323                          ctx->obsclient.count --;
   \      0x196   0xF894 0x0040      LDRB     R0,[R4, #+64]
   \      0x19A   0x1E40             SUBS     R0,R0,#+1
   \      0x19C   0xF884 0x0040      STRB     R0,[R4, #+64]
    324                          coap_free(node);
   \      0x1A0   0x4628             MOV      R0,R5
   \      0x1A2   0x....'....        BL       HAL_Free
    325                          break;
    326                      }
    327                  }
    328                  HAL_MutexUnlock(ctx->obsclient.list_mutex);
   \                     ??CoAPObsClient_add_4: (+1)
   \      0x1A6   0x6B60             LDR      R0,[R4, #+52]
   \      0x1A8   0x....'....        BL       HAL_MutexUnlock
    329          
    330              }
    331          
    332              return COAP_SUCCESS;
   \      0x1AC   0x2000             MOVS     R0,#+0
   \      0x1AE   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
    333          }
    334          

   \                                 In section .text, align 2, keep-with-next
    335          int CoAPObsClient_delete(CoAPContext *context, CoAPMessage *message)
    336          {
   \                     CoAPObsClient_delete: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    337              int ret = COAP_SUCCESS;
    338              unsigned int observe_option = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    339              CoAPObservable *node = NULL, *next = NULL;
    340              CoAPIntContext *ctx = (CoAPIntContext *)context;
    341          
    342              if (NULL == ctx || NULL == message) {
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xD001             BEQ.N    ??CoAPObsClient_delete_0
   \        0xE   0x2D00             CMP      R5,#+0
   \       0x10   0xD102             BNE.N    ??CoAPObsClient_delete_1
    343                  return COAP_ERROR_INVALID_PARAM;
   \                     ??CoAPObsClient_delete_0: (+1)
   \       0x12   0xF240 0x1001      MOVW     R0,#+257
   \       0x16   0xBDF2             POP      {R1,R4-R7,PC}
    344              }
    345              if (COAP_MSG_CODE_GET == message->header.code) {
   \                     ??CoAPObsClient_delete_1: (+1)
   \       0x18   0x7868             LDRB     R0,[R5, #+1]
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xD141             BNE.N    ??CoAPObsClient_delete_2
    346                  if (COAP_SUCCESS == CoAPOption_present(message, COAP_OPTION_OBSERVE)) {
   \       0x1E   0x2106             MOVS     R1,#+6
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       CoAPOption_present
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD13B             BNE.N    ??CoAPObsClient_delete_2
    347                      ret = CoAPUintOption_get(message, COAP_OPTION_OBSERVE, &observe_option);
    348                      if (COAP_SUCCESS == ret && 1 == observe_option) {
   \       0x2A   0x466A             MOV      R2,SP
   \       0x2C   0x2106             MOVS     R1,#+6
   \       0x2E   0x4628             MOV      R0,R5
   \       0x30   0x....'....        BL       CoAPUintOption_get
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD134             BNE.N    ??CoAPObsClient_delete_2
   \       0x38   0x9800             LDR      R0,[SP, #+0]
   \       0x3A   0x2801             CMP      R0,#+1
   \       0x3C   0xD131             BNE.N    ??CoAPObsClient_delete_2
    349                          HAL_MutexLock(ctx->obsclient.list_mutex);
   \       0x3E   0x6B60             LDR      R0,[R4, #+52]
   \       0x40   0x....'....        BL       HAL_MutexLock
    350                          list_for_each_entry_safe(node, next, &ctx->obsclient.list, obslist, CoAPObservable) {
   \       0x44   0x6BE0             LDR      R0,[R4, #+60]
   \       0x46   0xF1A0 0x0624      SUB      R6,R0,#+36
   \       0x4A   0x6AB0             LDR      R0,[R6, #+40]
   \       0x4C   0xF1A0 0x0724      SUB      R7,R0,#+36
   \       0x50   0xE003             B.N      ??CoAPObsClient_delete_3
   \                     ??CoAPObsClient_delete_4: (+1)
   \       0x52   0x463E             MOV      R6,R7
   \       0x54   0x6AB8             LDR      R0,[R7, #+40]
   \       0x56   0xF1A0 0x0724      SUB      R7,R0,#+36
   \                     ??CoAPObsClient_delete_3: (+1)
   \       0x5A   0xF106 0x0024      ADD      R0,R6,#+36
   \       0x5E   0xF104 0x0138      ADD      R1,R4,#+56
   \       0x62   0x4288             CMP      R0,R1
   \       0x64   0xD01A             BEQ.N    ??CoAPObsClient_delete_5
    351                              if (0 != node->tokenlen && node->tokenlen == message->header.tokenlen
    352                                  && 0 == memcmp(node->token, message->token, node->tokenlen)) {
   \       0x66   0x7EB0             LDRB     R0,[R6, #+26]
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD0F2             BEQ.N    ??CoAPObsClient_delete_4
   \       0x6C   0x7829             LDRB     R1,[R5, #+0]
   \       0x6E   0xEBB0 0x1F11      CMP      R0,R1, LSR #+4
   \       0x72   0xD1EE             BNE.N    ??CoAPObsClient_delete_4
   \       0x74   0x4602             MOV      R2,R0
   \       0x76   0x1D29             ADDS     R1,R5,#+4
   \       0x78   0xF106 0x0012      ADD      R0,R6,#+18
   \       0x7C   0x....'....        BL       memcmp
   \       0x80   0x2800             CMP      R0,#+0
   \       0x82   0xD1E6             BNE.N    ??CoAPObsClient_delete_4
    353                                  list_del(&node->obslist);
   \       0x84   0xF106 0x0024      ADD      R0,R6,#+36
   \       0x88   0x....'....        BL       dlist_del
    354                                  ctx->obsclient.count --;
   \       0x8C   0xF894 0x0040      LDRB     R0,[R4, #+64]
   \       0x90   0x1E40             SUBS     R0,R0,#+1
   \       0x92   0xF884 0x0040      STRB     R0,[R4, #+64]
    355                                  coap_free(node);
   \       0x96   0x4630             MOV      R0,R6
   \       0x98   0x....'....        BL       HAL_Free
    356                                  break;
    357                              }
    358                          }
    359                          HAL_MutexUnlock(ctx->obsclient.list_mutex);
   \                     ??CoAPObsClient_delete_5: (+1)
   \       0x9C   0x6B60             LDR      R0,[R4, #+52]
   \       0x9E   0x....'....        BL       HAL_MutexUnlock
    360                      }
    361                  }
    362              }
    363              return COAP_SUCCESS;
   \                     ??CoAPObsClient_delete_2: (+1)
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    364          }
    365          
    366          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   CoAPObsClient_add
        32   -- Indirect call
        32   -> CoAPOption_present
        32   -> CoAPUintOption_get
        32   -> HAL_Free
        32   -> HAL_Malloc
        32   -> HAL_MutexLock
        32   -> HAL_MutexUnlock
        32   -> __aeabi_memcpy
        32   -> __aeabi_memset4
        32   -> dlist_add_tail
        32   -> dlist_del
        32   -> memcmp
      16   CoAPObsClient_deinit
        16   -> HAL_Free
        16   -> HAL_MutexDestroy
        16   -> HAL_MutexLock
        16   -> HAL_MutexUnlock
        16   -> dlist_del
      24   CoAPObsClient_delete
        24   -> CoAPOption_present
        24   -> CoAPUintOption_get
        24   -> HAL_Free
        24   -> HAL_MutexLock
        24   -> HAL_MutexUnlock
        24   -> dlist_del
        24   -> memcmp
      16   CoAPObsClient_init
        16   -> HAL_MutexCreate
        16   -> HAL_MutexLock
        16   -> HAL_MutexUnlock
        16   -> INIT_AOS_DLIST_HEAD
      32   CoAPObsServer_add
        32   -> CoAPResourceByPath_get
        32   -> CoAPUintOption_get
        32   -> HAL_Free
        32   -> HAL_Malloc
        32   -> HAL_MutexLock
        32   -> HAL_MutexUnlock
        32   -> __aeabi_memcpy
        32   -> __aeabi_memset4
        32   -> dlist_add_tail
        32   -> memcmp
      16   CoAPObsServer_deinit
        16   -> HAL_Free
        16   -> HAL_MutexDestroy
        16   -> HAL_MutexLock
        16   -> HAL_MutexUnlock
        16   -> dlist_del
      16   CoAPObsServer_init
        16   -> HAL_MutexCreate
        16   -> HAL_MutexLock
        16   -> HAL_MutexUnlock
        16   -> INIT_AOS_DLIST_HEAD
     192   CoAPObsServer_notify
       192   -- Indirect call
       192   -> CoAPMessageCode_set
       192   -> CoAPMessageHandler_set
       192   -> CoAPMessageId_gen
       192   -> CoAPMessageId_set
       192   -> CoAPMessagePayload_set
       192   -> CoAPMessageToken_set
       192   -> CoAPMessageType_set
       192   -> CoAPMessageUserData_set
       192   -> CoAPMessage_destory
       192   -> CoAPMessage_init
       192   -> CoAPMessage_send
       192   -> CoAPResourceByPath_get
       192   -> CoAPUintOption_add
       192   -> HAL_Free
       192   -> HAL_MutexLock
       192   -> HAL_MutexUnlock
       192   -> __aeabi_memset4
      24   CoapObsServerAll_delete
        24   -> HAL_Free
        24   -> HAL_MutexLock
        24   -> HAL_MutexUnlock
        24   -> dlist_del
        24   -> memcmp
      24   CoapObsServer_delete
        24   -> HAL_Free
        24   -> HAL_MutexLock
        24   -> HAL_MutexUnlock
        24   -> dlist_del
        24   -> memcmp
       0   INIT_AOS_DLIST_HEAD
       0   __dlist_add
       0   dlist_add_tail
         0   -> __dlist_add
       0   dlist_del


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     434  CoAPObsClient_add
      82  CoAPObsClient_deinit
     166  CoAPObsClient_delete
      44  CoAPObsClient_init
     316  CoAPObsServer_add
      78  CoAPObsServer_deinit
      44  CoAPObsServer_init
     312  CoAPObsServer_notify
      98  CoapObsServerAll_delete
     108  CoapObsServer_delete
       6  INIT_AOS_DLIST_HEAD
      10  __dlist_add
       6  dlist_add_tail
      10  dlist_del

 
 1 714 bytes in section .text
 
 1 714 bytes of CODE memory

Errors: none
Warnings: 1
