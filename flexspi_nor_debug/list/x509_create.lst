###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:58
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\mbedtls\library\x509_create.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW70A8.tmp
#        (C:\Development\smart_washing_machine_3080\mbedtls\library\x509_create.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\x509_create.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\x509_create.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\mbedtls\library\x509_create.c
      1          /*
      2           *  X.509 base functions for creating certificates / CSRs
      3           *
      4           *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
      5           *  SPDX-License-Identifier: Apache-2.0
      6           *
      7           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      8           *  not use this file except in compliance with the License.
      9           *  You may obtain a copy of the License at
     10           *
     11           *  http://www.apache.org/licenses/LICENSE-2.0
     12           *
     13           *  Unless required by applicable law or agreed to in writing, software
     14           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     15           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     16           *  See the License for the specific language governing permissions and
     17           *  limitations under the License.
     18           *
     19           *  This file is part of mbed TLS (https://tls.mbed.org)
     20           */
     21          
     22          #if !defined(MBEDTLS_CONFIG_FILE)
     23          #include "mbedtls/config.h"
     24          #else
     25          #include MBEDTLS_CONFIG_FILE
     26          #endif
     27          
     28          #if defined(MBEDTLS_X509_CREATE_C)
     29          
     30          #include "mbedtls/x509.h"
     31          #include "mbedtls/asn1write.h"
     32          #include "mbedtls/oid.h"
     33          
     34          #include <string.h>
     35          
     36          typedef struct {
     37              const char *name;
     38              size_t name_len;
     39              const char*oid;
     40          } x509_attr_descriptor_t;
     41          
     42          #define ADD_STRLEN( s )     s, sizeof( s ) - 1
     43          

   \                                 In section .rodata, align 4
     44          static const x509_attr_descriptor_t x509_attrs[] =
   \                     x509_attrs:
   \        0x0   0x....'....        DC32 ?_0, 2, ?_1, ?_2, 10, ?_1, ?_3, 1, ?_4, ?_5, 11, ?_4, ?_6, 1, ?_7
   \              0x0000'0002  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000A  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0001  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000B  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0001  
   \              0x....'....  
   \       0x3C   0x....'....        DC32 ?_8, 16, ?_7, ?_9, 1, ?_10, ?_11, 8, ?_10, ?_12, 1, ?_13, ?_14, 2
   \              0x0000'0010  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0001  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0001  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0002  
   \       0x74   0x....'....        DC32 ?_15, ?_16, 22, ?_15, ?_17, 2, ?_18, ?_19, 19, ?_18, ?_20, 12
   \              0x....'....  
   \              0x0000'0016  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0002  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0013  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000C  
   \       0xA4   0x....'....        DC32 ?_13, ?_21, 12, ?_22, ?_23, 13, ?_24, ?_25, 10, ?_26, ?_27, 11
   \              0x....'....  
   \              0x0000'000C  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000D  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000A  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'000B  
   \       0xD4   0x....'....        DC32 ?_28, ?_29, 5, ?_30, ?_31, 7, ?_32, ?_33, 2, ?_32, ?_34, 9, ?_35
   \              0x....'....  
   \              0x0000'0005  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0007  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0002  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0009  
   \              0x....'....  
   \      0x108   0x....'....        DC32 ?_36, 2, ?_35, ?_37, 8, ?_38, ?_39, 9, ?_40, ?_41, 19, ?_42, ?_43
   \              0x0000'0002  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0008  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0009  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0013  
   \              0x....'....  
   \              0x....'....  
   \      0x13C   0x0000'000F        DC32 15, ?_44, ?_45, 2, ?_44, 0H, 0, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0002  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
     45          {
     46              { ADD_STRLEN( "CN" ),                       MBEDTLS_OID_AT_CN },
     47              { ADD_STRLEN( "commonName" ),               MBEDTLS_OID_AT_CN },
     48              { ADD_STRLEN( "C" ),                        MBEDTLS_OID_AT_COUNTRY },
     49              { ADD_STRLEN( "countryName" ),              MBEDTLS_OID_AT_COUNTRY },
     50              { ADD_STRLEN( "O" ),                        MBEDTLS_OID_AT_ORGANIZATION },
     51              { ADD_STRLEN( "organizationName" ),         MBEDTLS_OID_AT_ORGANIZATION },
     52              { ADD_STRLEN( "L" ),                        MBEDTLS_OID_AT_LOCALITY },
     53              { ADD_STRLEN( "locality" ),                 MBEDTLS_OID_AT_LOCALITY },
     54              { ADD_STRLEN( "R" ),                        MBEDTLS_OID_PKCS9_EMAIL },
     55              { ADD_STRLEN( "OU" ),                       MBEDTLS_OID_AT_ORG_UNIT },
     56              { ADD_STRLEN( "organizationalUnitName" ),   MBEDTLS_OID_AT_ORG_UNIT },
     57              { ADD_STRLEN( "ST" ),                       MBEDTLS_OID_AT_STATE },
     58              { ADD_STRLEN( "stateOrProvinceName" ),      MBEDTLS_OID_AT_STATE },
     59              { ADD_STRLEN( "emailAddress" ),             MBEDTLS_OID_PKCS9_EMAIL },
     60              { ADD_STRLEN( "serialNumber" ),             MBEDTLS_OID_AT_SERIAL_NUMBER },
     61              { ADD_STRLEN( "postalAddress" ),            MBEDTLS_OID_AT_POSTAL_ADDRESS },
     62              { ADD_STRLEN( "postalCode" ),               MBEDTLS_OID_AT_POSTAL_CODE },
     63              { ADD_STRLEN( "dnQualifier" ),              MBEDTLS_OID_AT_DN_QUALIFIER },
     64              { ADD_STRLEN( "title" ),                    MBEDTLS_OID_AT_TITLE },
     65              { ADD_STRLEN( "surName" ),                  MBEDTLS_OID_AT_SUR_NAME },
     66              { ADD_STRLEN( "SN" ),                       MBEDTLS_OID_AT_SUR_NAME },
     67              { ADD_STRLEN( "givenName" ),                MBEDTLS_OID_AT_GIVEN_NAME },
     68              { ADD_STRLEN( "GN" ),                       MBEDTLS_OID_AT_GIVEN_NAME },
     69              { ADD_STRLEN( "initials" ),                 MBEDTLS_OID_AT_INITIALS },
     70              { ADD_STRLEN( "pseudonym" ),                MBEDTLS_OID_AT_PSEUDONYM },
     71              { ADD_STRLEN( "generationQualifier" ),      MBEDTLS_OID_AT_GENERATION_QUALIFIER },
     72              { ADD_STRLEN( "domainComponent" ),          MBEDTLS_OID_DOMAIN_COMPONENT },
     73              { ADD_STRLEN( "DC" ),                       MBEDTLS_OID_DOMAIN_COMPONENT },
     74              { NULL, 0, NULL }
     75          };
     76          

   \                                 In section .text, align 2, keep-with-next
     77          static const char *x509_at_oid_from_name( const char *name, size_t name_len )
     78          {
   \                     x509_at_oid_from_name: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
     79              const x509_attr_descriptor_t *cur;
     80          
     81              for( cur = x509_attrs; cur->name != NULL; cur++ )
   \        0x6   0x....             LDR.N    R6,??DataTable3
   \                     ??x509_at_oid_from_name_0: (+1)
   \        0x8   0x6830             LDR      R0,[R6, #+0]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD00B             BEQ.N    ??x509_at_oid_from_name_1
     82                  if( cur->name_len == name_len &&
     83                      strncmp( cur->name, name, name_len ) == 0 )
   \        0xE   0x6870             LDR      R0,[R6, #+4]
   \       0x10   0x42A8             CMP      R0,R5
   \       0x12   0xD106             BNE.N    ??x509_at_oid_from_name_2
   \       0x14   0x462A             MOV      R2,R5
   \       0x16   0x4621             MOV      R1,R4
   \       0x18   0x6830             LDR      R0,[R6, #+0]
   \       0x1A   0x....'....        BL       strncmp
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD001             BEQ.N    ??x509_at_oid_from_name_1
   \                     ??x509_at_oid_from_name_2: (+1)
   \       0x22   0x360C             ADDS     R6,R6,#+12
   \       0x24   0xE7F0             B.N      ??x509_at_oid_from_name_0
     84                      break;
     85          
     86              return( cur->oid );
   \                     ??x509_at_oid_from_name_1: (+1)
   \       0x26   0x68B0             LDR      R0,[R6, #+8]
   \       0x28   0xBD70             POP      {R4-R6,PC}       ;; return
     87          }
     88          

   \                                 In section .text, align 2, keep-with-next
     89          int mbedtls_x509_string_to_names( mbedtls_asn1_named_data **head, const char *name )
     90          {
   \                     mbedtls_x509_string_to_names: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB0C1             SUB      SP,SP,#+260
   \        0x6   0x4606             MOV      R6,R0
   \        0x8   0x468B             MOV      R11,R1
     91              int ret = 0;
   \        0xA   0x2700             MOVS     R7,#+0
     92              const char *s = name, *c = s;
   \        0xC   0x46D8             MOV      R8,R11
     93              const char *end = s + strlen( s );
   \        0xE   0x4658             MOV      R0,R11
   \       0x10   0x....'....        BL       strlen
   \       0x14   0xEB0B 0x0900      ADD      R9,R11,R0
     94              const char *oid = NULL;
   \       0x18   0x463D             MOV      R5,R7
     95              int in_tag = 1;
   \       0x1A   0x2401             MOVS     R4,#+1
     96              char data[MBEDTLS_X509_MAX_DN_NAME_SIZE];
     97              char *d = data;
   \       0x1C   0xF10D 0x0A04      ADD      R10,SP,#+4
     98          
     99              /* Clear existing chain if present */
    100              mbedtls_asn1_free_named_data_list( head );
   \       0x20   0x4630             MOV      R0,R6
   \       0x22   0x....'....        BL       mbedtls_asn1_free_named_data_list
   \       0x26   0xE026             B.N      ??mbedtls_x509_string_to_names_0
    101          
    102              while( c <= end )
    103              {
    104                  if( in_tag && *c == '=' )
    105                  {
    106                      if( ( oid = x509_at_oid_from_name( s, c - s ) ) == NULL )
    107                      {
    108                          ret = MBEDTLS_ERR_X509_UNKNOWN_OID;
    109                          goto exit;
    110                      }
    111          
    112                      s = c + 1;
   \                     ??mbedtls_x509_string_to_names_1: (+1)
   \       0x28   0xF108 0x0B01      ADD      R11,R8,#+1
    113                      in_tag = 0;
   \       0x2C   0x463C             MOV      R4,R7
    114                      d = data;
   \       0x2E   0xF10D 0x0A04      ADD      R10,SP,#+4
    115                  }
    116          
    117                  if( !in_tag && *c == '\\' && c != end )
   \                     ??mbedtls_x509_string_to_names_2: (+1)
   \       0x32   0x2C00             CMP      R4,#+0
   \       0x34   0xD130             BNE.N    ??mbedtls_x509_string_to_names_3
   \       0x36   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x3A   0x285C             CMP      R0,#+92
   \       0x3C   0xD12C             BNE.N    ??mbedtls_x509_string_to_names_3
   \       0x3E   0x45C8             CMP      R8,R9
   \       0x40   0xD02A             BEQ.N    ??mbedtls_x509_string_to_names_3
    118                  {
    119                      c++;
   \       0x42   0xF108 0x0801      ADD      R8,R8,#+1
    120          
    121                      /* Check for valid escaped characters */
    122                      if( c == end || *c != ',' )
   \       0x46   0x45C8             CMP      R8,R9
   \       0x48   0xD048             BEQ.N    ??mbedtls_x509_string_to_names_4
   \       0x4A   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x4E   0x282C             CMP      R0,#+44
   \       0x50   0xD144             BNE.N    ??mbedtls_x509_string_to_names_4
    123                      {
    124                          ret = MBEDTLS_ERR_X509_INVALID_NAME;
    125                          goto exit;
    126                      }
    127                  }
    128                  else if( !in_tag && ( *c == ',' || c == end ) )
    129                  {
    130                      if( mbedtls_asn1_store_named_data( head, oid, strlen( oid ),
    131                                                 (unsigned char *) data,
    132                                                 d - data ) == NULL )
    133                      {
    134                          return( MBEDTLS_ERR_X509_ALLOC_FAILED );
    135                      }
    136          
    137                      while( c < end && *(c + 1) == ' ' )
    138                          c++;
    139          
    140                      s = c + 1;
    141                      in_tag = 1;
    142                  }
    143          
    144                  if( !in_tag && s != c + 1 )
   \                     ??mbedtls_x509_string_to_names_5: (+1)
   \       0x52   0x2C00             CMP      R4,#+0
   \       0x54   0xD10D             BNE.N    ??mbedtls_x509_string_to_names_6
   \       0x56   0xF108 0x0001      ADD      R0,R8,#+1
   \       0x5A   0x4583             CMP      R11,R0
   \       0x5C   0xD009             BEQ.N    ??mbedtls_x509_string_to_names_6
    145                  {
    146                      *(d++) = *c;
   \       0x5E   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x62   0xF80A 0x0B01      STRB     R0,[R10], #+1
    147          
    148                      if( d - data == MBEDTLS_X509_MAX_DN_NAME_SIZE )
   \       0x66   0xA801             ADD      R0,SP,#+4
   \       0x68   0xEBAA 0x0000      SUB      R0,R10,R0
   \       0x6C   0xF5B0 0x7F80      CMP      R0,#+256
   \       0x70   0xD034             BEQ.N    ??mbedtls_x509_string_to_names_4
    149                      {
    150                          ret = MBEDTLS_ERR_X509_INVALID_NAME;
    151                          goto exit;
    152                      }
    153                  }
    154          
    155                  c++;
   \                     ??mbedtls_x509_string_to_names_6: (+1)
   \       0x72   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??mbedtls_x509_string_to_names_0: (+1)
   \       0x76   0x45C1             CMP      R9,R8
   \       0x78   0xD331             BCC.N    ??mbedtls_x509_string_to_names_7
   \       0x7A   0x2C00             CMP      R4,#+0
   \       0x7C   0xD0D9             BEQ.N    ??mbedtls_x509_string_to_names_2
   \       0x7E   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0x82   0x283D             CMP      R0,#+61
   \       0x84   0xD1D5             BNE.N    ??mbedtls_x509_string_to_names_2
   \       0x86   0xEBA8 0x010B      SUB      R1,R8,R11
   \       0x8A   0x4658             MOV      R0,R11
   \       0x8C   0x....'....        BL       x509_at_oid_from_name
   \       0x90   0x0005             MOVS     R5,R0
   \       0x92   0xD1C9             BNE.N    ??mbedtls_x509_string_to_names_1
   \       0x94   0x....             LDR.N    R7,??DataTable3_1  ;; 0xffffdf00
   \       0x96   0xE022             B.N      ??mbedtls_x509_string_to_names_7
   \                     ??mbedtls_x509_string_to_names_3: (+1)
   \       0x98   0x2C00             CMP      R4,#+0
   \       0x9A   0xD1DA             BNE.N    ??mbedtls_x509_string_to_names_5
   \       0x9C   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0xA0   0x282C             CMP      R0,#+44
   \       0xA2   0xD001             BEQ.N    ??mbedtls_x509_string_to_names_8
   \       0xA4   0x45C8             CMP      R8,R9
   \       0xA6   0xD1D4             BNE.N    ??mbedtls_x509_string_to_names_5
   \                     ??mbedtls_x509_string_to_names_8: (+1)
   \       0xA8   0x4628             MOV      R0,R5
   \       0xAA   0x....'....        BL       strlen
   \       0xAE   0x4602             MOV      R2,R0
   \       0xB0   0xA801             ADD      R0,SP,#+4
   \       0xB2   0xEBAA 0x0000      SUB      R0,R10,R0
   \       0xB6   0x9000             STR      R0,[SP, #+0]
   \       0xB8   0xAB01             ADD      R3,SP,#+4
   \       0xBA   0x4629             MOV      R1,R5
   \       0xBC   0x4630             MOV      R0,R6
   \       0xBE   0x....'....        BL       mbedtls_asn1_store_named_data
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xD008             BEQ.N    ??mbedtls_x509_string_to_names_9
   \                     ??mbedtls_x509_string_to_names_10: (+1)
   \       0xC6   0x45C8             CMP      R8,R9
   \       0xC8   0xD20D             BCS.N    ??mbedtls_x509_string_to_names_11
   \       0xCA   0xF898 0x0001      LDRB     R0,[R8, #+1]
   \       0xCE   0x2820             CMP      R0,#+32
   \       0xD0   0xD109             BNE.N    ??mbedtls_x509_string_to_names_11
   \       0xD2   0xF108 0x0801      ADD      R8,R8,#+1
   \       0xD6   0xE7F6             B.N      ??mbedtls_x509_string_to_names_10
   \                     ??mbedtls_x509_string_to_names_9: (+1)
   \       0xD8   0x....             LDR.N    R0,??DataTable3_2  ;; 0xffffd780
   \       0xDA   0xE001             B.N      ??mbedtls_x509_string_to_names_12
   \                     ??mbedtls_x509_string_to_names_4: (+1)
   \       0xDC   0x....             LDR.N    R7,??DataTable3_3  ;; 0xffffdc80
    156              }
    157          
    158          exit:
    159          
    160              return( ret );
   \                     ??mbedtls_x509_string_to_names_7: (+1)
   \       0xDE   0x4638             MOV      R0,R7
   \                     ??mbedtls_x509_string_to_names_12: (+1)
   \       0xE0   0xB041             ADD      SP,SP,#+260
   \       0xE2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??mbedtls_x509_string_to_names_11: (+1)
   \       0xE6   0xF108 0x0B01      ADD      R11,R8,#+1
   \       0xEA   0x2401             MOVS     R4,#+1
   \       0xEC   0xE7B1             B.N      ??mbedtls_x509_string_to_names_5
    161          }
    162          
    163          /* The first byte of the value in the mbedtls_asn1_named_data structure is reserved
    164           * to store the critical boolean for us
    165           */

   \                                 In section .text, align 2, keep-with-next
    166          int mbedtls_x509_set_extension( mbedtls_asn1_named_data **head, const char *oid, size_t oid_len,
    167                                  int critical, const unsigned char *val, size_t val_len )
    168          {
   \                     mbedtls_x509_set_extension: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x461D             MOV      R5,R3
   \        0x4   0x9C05             LDR      R4,[SP, #+20]
    169              mbedtls_asn1_named_data *cur;
    170          
    171              if( ( cur = mbedtls_asn1_store_named_data( head, oid, oid_len,
    172                                                 NULL, val_len + 1 ) ) == NULL )
   \        0x6   0x1C63             ADDS     R3,R4,#+1
   \        0x8   0x9300             STR      R3,[SP, #+0]
   \        0xA   0x2300             MOVS     R3,#+0
   \        0xC   0x....'....        BL       mbedtls_asn1_store_named_data
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD101             BNE.N    ??mbedtls_x509_set_extension_0
    173              {
    174                  return( MBEDTLS_ERR_X509_ALLOC_FAILED );
   \       0x14   0x....             LDR.N    R0,??DataTable3_2  ;; 0xffffd780
   \       0x16   0xBD32             POP      {R1,R4,R5,PC}
    175              }
   \                     ??mbedtls_x509_set_extension_0: (+1)
   \       0x18   0x9904             LDR      R1,[SP, #+16]
    176          
    177              cur->val.p[0] = critical;
   \       0x1A   0x6942             LDR      R2,[R0, #+20]
   \       0x1C   0x7015             STRB     R5,[R2, #+0]
    178              memcpy( cur->val.p + 1, val, val_len );
   \       0x1E   0x4622             MOV      R2,R4
   \       0x20   0x6940             LDR      R0,[R0, #+20]
   \       0x22   0x1C40             ADDS     R0,R0,#+1
   \       0x24   0x....'....        BL       __aeabi_memcpy
    179          
    180              return( 0 );
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    181          }
    182          
    183          /*
    184           *  RelativeDistinguishedName ::=
    185           *    SET OF AttributeTypeAndValue
    186           *
    187           *  AttributeTypeAndValue ::= SEQUENCE {
    188           *    type     AttributeType,
    189           *    value    AttributeValue }
    190           *
    191           *  AttributeType ::= OBJECT IDENTIFIER
    192           *
    193           *  AttributeValue ::= ANY DEFINED BY AttributeType
    194           */

   \                                 In section .text, align 2, keep-with-next
    195          static int x509_write_name( unsigned char **p, unsigned char *start,
    196                                      const char *oid, size_t oid_len,
    197                                      const unsigned char *name, size_t name_len )
    198          {
   \                     x509_write_name: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4617             MOV      R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C08             LDR      R4,[SP, #+32]
   \        0xE   0xF8DD 0x9024      LDR      R9,[SP, #+36]
    199              int ret;
    200              size_t len = 0;
    201          
    202              // Write PrintableString for all except MBEDTLS_OID_PKCS9_EMAIL
    203              //
    204              if( MBEDTLS_OID_SIZE( MBEDTLS_OID_PKCS9_EMAIL ) == oid_len &&
    205                  memcmp( oid, MBEDTLS_OID_PKCS9_EMAIL, oid_len ) == 0 )
   \       0x12   0xF1B8 0x0F09      CMP      R8,#+9
   \       0x16   0xD10F             BNE.N    ??x509_write_name_0
   \       0x18   0x2209             MOVS     R2,#+9
   \       0x1A   0x....             LDR.N    R1,??DataTable3_4
   \       0x1C   0x4638             MOV      R0,R7
   \       0x1E   0x....'....        BL       memcmp
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD108             BNE.N    ??x509_write_name_0
    206              {
    207                  MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_ia5_string( p, start,
    208                                                            (const char *) name,
    209                                                            name_len ) );
   \       0x26   0x464B             MOV      R3,R9
   \       0x28   0x4622             MOV      R2,R4
   \       0x2A   0x4631             MOV      R1,R6
   \       0x2C   0x4628             MOV      R0,R5
   \       0x2E   0x....'....        BL       mbedtls_asn1_write_ia5_string
   \       0x32   0x0004             MOVS     R4,R0
   \       0x34   0xD508             BPL.N    ??x509_write_name_1
   \       0x36   0xE031             B.N      ??x509_write_name_2
    210              }
    211              else
    212              {
    213                  MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_printable_string( p, start,
    214                                                                  (const char *) name,
    215                                                                  name_len ) );
   \                     ??x509_write_name_0: (+1)
   \       0x38   0x464B             MOV      R3,R9
   \       0x3A   0x4622             MOV      R2,R4
   \       0x3C   0x4631             MOV      R1,R6
   \       0x3E   0x4628             MOV      R0,R5
   \       0x40   0x....'....        BL       mbedtls_asn1_write_printable_string
   \       0x44   0x0004             MOVS     R4,R0
   \       0x46   0xD429             BMI.N    ??x509_write_name_2
    216              }
    217          
    218              // Write OID
    219              //
    220              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_oid( p, start, oid, oid_len ) );
   \                     ??x509_write_name_1: (+1)
   \       0x48   0x4643             MOV      R3,R8
   \       0x4A   0x463A             MOV      R2,R7
   \       0x4C   0x4631             MOV      R1,R6
   \       0x4E   0x4628             MOV      R0,R5
   \       0x50   0x....'....        BL       mbedtls_asn1_write_oid
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD421             BMI.N    ??x509_write_name_2
   \       0x58   0x1904             ADDS     R4,R0,R4
    221          
    222              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, len ) );
   \       0x5A   0x4622             MOV      R2,R4
   \       0x5C   0x4631             MOV      R1,R6
   \       0x5E   0x4628             MOV      R0,R5
   \       0x60   0x....'....        BL       mbedtls_asn1_write_len
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD419             BMI.N    ??x509_write_name_2
   \       0x68   0x1904             ADDS     R4,R0,R4
    223              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_CONSTRUCTED |
    224                                                           MBEDTLS_ASN1_SEQUENCE ) );
   \       0x6A   0x2230             MOVS     R2,#+48
   \       0x6C   0x4631             MOV      R1,R6
   \       0x6E   0x4628             MOV      R0,R5
   \       0x70   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x74   0x2800             CMP      R0,#+0
   \       0x76   0xD411             BMI.N    ??x509_write_name_2
   \       0x78   0x1904             ADDS     R4,R0,R4
    225          
    226              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, len ) );
   \       0x7A   0x4622             MOV      R2,R4
   \       0x7C   0x4631             MOV      R1,R6
   \       0x7E   0x4628             MOV      R0,R5
   \       0x80   0x....'....        BL       mbedtls_asn1_write_len
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD409             BMI.N    ??x509_write_name_2
   \       0x88   0x1904             ADDS     R4,R0,R4
    227              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_CONSTRUCTED |
    228                                                           MBEDTLS_ASN1_SET ) );
   \       0x8A   0x2231             MOVS     R2,#+49
   \       0x8C   0x4631             MOV      R1,R6
   \       0x8E   0x4628             MOV      R0,R5
   \       0x90   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD401             BMI.N    ??x509_write_name_2
    229          
    230              return( (int) len );
   \       0x98   0x1904             ADDS     R4,R0,R4
   \       0x9A   0x4620             MOV      R0,R4
   \                     ??x509_write_name_2: (+1)
   \       0x9C   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
    231          }
    232          

   \                                 In section .text, align 2, keep-with-next
    233          int mbedtls_x509_write_names( unsigned char **p, unsigned char *start,
    234                                mbedtls_asn1_named_data *first )
    235          {
   \                     mbedtls_x509_write_names: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x4606             MOV      R6,R0
   \        0x4   0x460F             MOV      R7,R1
   \        0x6   0x4614             MOV      R4,R2
    236              int ret;
    237              size_t len = 0;
   \        0x8   0x2500             MOVS     R5,#+0
    238              mbedtls_asn1_named_data *cur = first;
   \        0xA   0xE001             B.N      ??mbedtls_x509_write_names_0
    239          
    240              while( cur != NULL )
    241              {
    242                  MBEDTLS_ASN1_CHK_ADD( len, x509_write_name( p, start, (char *) cur->oid.p,
    243                                                      cur->oid.len,
    244                                                      cur->val.p, cur->val.len ) );
   \                     ??mbedtls_x509_write_names_1: (+1)
   \        0xC   0x1945             ADDS     R5,R0,R5
    245                  cur = cur->next;
   \        0xE   0x69A4             LDR      R4,[R4, #+24]
   \                     ??mbedtls_x509_write_names_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD017             BEQ.N    ??mbedtls_x509_write_names_2
   \       0x14   0x6920             LDR      R0,[R4, #+16]
   \       0x16   0x9001             STR      R0,[SP, #+4]
   \       0x18   0x6960             LDR      R0,[R4, #+20]
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0x6863             LDR      R3,[R4, #+4]
   \       0x1E   0x68A2             LDR      R2,[R4, #+8]
   \       0x20   0x4639             MOV      R1,R7
   \       0x22   0x4630             MOV      R0,R6
   \       0x24   0x....'....        BL       x509_write_name
   \       0x28   0x2800             CMP      R0,#+0
   \       0x2A   0xD5EF             BPL.N    ??mbedtls_x509_write_names_1
   \       0x2C   0xBDFE             POP      {R1-R7,PC}
    246              }
    247          
    248              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, len ) );
   \                     ??mbedtls_x509_write_names_3: (+1)
   \       0x2E   0x1945             ADDS     R5,R0,R5
    249              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_CONSTRUCTED |
    250                                                           MBEDTLS_ASN1_SEQUENCE ) );
   \       0x30   0x2230             MOVS     R2,#+48
   \       0x32   0x4639             MOV      R1,R7
   \       0x34   0x4630             MOV      R0,R6
   \       0x36   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD401             BMI.N    ??mbedtls_x509_write_names_4
    251          
    252              return( (int) len );
   \       0x3E   0x1945             ADDS     R5,R0,R5
   \       0x40   0x4628             MOV      R0,R5
   \                     ??mbedtls_x509_write_names_4: (+1)
   \       0x42   0xBDFE             POP      {R1-R7,PC}       ;; return
   \                     ??mbedtls_x509_write_names_2: (+1)
   \       0x44   0x462A             MOV      R2,R5
   \       0x46   0x4639             MOV      R1,R7
   \       0x48   0x4630             MOV      R0,R6
   \       0x4A   0x....'....        BL       mbedtls_asn1_write_len
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD5ED             BPL.N    ??mbedtls_x509_write_names_3
   \       0x52   0xBDFE             POP      {R1-R7,PC}
    253          }
    254          

   \                                 In section .text, align 2, keep-with-next
    255          int mbedtls_x509_write_sig( unsigned char **p, unsigned char *start,
    256                              const char *oid, size_t oid_len,
    257                              unsigned char *sig, size_t size )
    258          {
   \                     mbedtls_x509_write_sig: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4617             MOV      R7,R2
   \        0xA   0x4698             MOV      R8,R3
    259              int ret;
    260              size_t len = 0;
    261          
    262              if( *p < start || (size_t)( *p - start ) < size )
   \        0xC   0x6828             LDR      R0,[R5, #+0]
   \        0xE   0x42B0             CMP      R0,R6
   \       0x10   0xD30F             BCC.N    ??mbedtls_x509_write_sig_0
   \       0x12   0x9C09             LDR      R4,[SP, #+36]
   \       0x14   0x1B80             SUBS     R0,R0,R6
   \       0x16   0x42A0             CMP      R0,R4
   \       0x18   0xD30B             BCC.N    ??mbedtls_x509_write_sig_0
   \       0x1A   0x9908             LDR      R1,[SP, #+32]
    263                  return( MBEDTLS_ERR_ASN1_BUF_TOO_SMALL );
    264          
    265              len = size;
    266              (*p) -= len;
   \       0x1C   0x6828             LDR      R0,[R5, #+0]
   \       0x1E   0x4262             RSBS     R2,R4,#+0
   \       0x20   0x4410             ADD      R0,R0,R2
   \       0x22   0x6028             STR      R0,[R5, #+0]
    267              memcpy( *p, sig, len );
   \       0x24   0x4622             MOV      R2,R4
   \       0x26   0x....'....        BL       __aeabi_memcpy
    268          
    269              if( *p - start < 1 )
   \       0x2A   0x6828             LDR      R0,[R5, #+0]
   \       0x2C   0x1B80             SUBS     R0,R0,R6
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xDA02             BGE.N    ??mbedtls_x509_write_sig_1
    270                  return( MBEDTLS_ERR_ASN1_BUF_TOO_SMALL );
   \                     ??mbedtls_x509_write_sig_0: (+1)
   \       0x32   0xF06F 0x006B      MVN      R0,#+107
   \       0x36   0xE022             B.N      ??mbedtls_x509_write_sig_2
    271          
    272              *--(*p) = 0;
   \                     ??mbedtls_x509_write_sig_1: (+1)
   \       0x38   0x6828             LDR      R0,[R5, #+0]
   \       0x3A   0x1E40             SUBS     R0,R0,#+1
   \       0x3C   0x6028             STR      R0,[R5, #+0]
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x6829             LDR      R1,[R5, #+0]
   \       0x42   0x7008             STRB     R0,[R1, #+0]
    273              len += 1;
   \       0x44   0x1C64             ADDS     R4,R4,#+1
    274          
    275              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, len ) );
   \       0x46   0x4622             MOV      R2,R4
   \       0x48   0x4631             MOV      R1,R6
   \       0x4A   0x4628             MOV      R0,R5
   \       0x4C   0x....'....        BL       mbedtls_asn1_write_len
   \       0x50   0x2800             CMP      R0,#+0
   \       0x52   0xD414             BMI.N    ??mbedtls_x509_write_sig_2
   \       0x54   0x1904             ADDS     R4,R0,R4
    276              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_BIT_STRING ) );
   \       0x56   0x2203             MOVS     R2,#+3
   \       0x58   0x4631             MOV      R1,R6
   \       0x5A   0x4628             MOV      R0,R5
   \       0x5C   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD40C             BMI.N    ??mbedtls_x509_write_sig_2
   \       0x64   0x1904             ADDS     R4,R0,R4
    277          
    278              // Write OID
    279              //
    280              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_algorithm_identifier( p, start, oid,
    281                                                                  oid_len, 0 ) );
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0x4643             MOV      R3,R8
   \       0x6C   0x463A             MOV      R2,R7
   \       0x6E   0x4631             MOV      R1,R6
   \       0x70   0x4628             MOV      R0,R5
   \       0x72   0x....'....        BL       mbedtls_asn1_write_algorithm_identifier
   \       0x76   0x2800             CMP      R0,#+0
   \       0x78   0xD401             BMI.N    ??mbedtls_x509_write_sig_2
    282          
    283              return( (int) len );
   \       0x7A   0x1904             ADDS     R4,R0,R4
   \       0x7C   0x4620             MOV      R0,R4
   \                     ??mbedtls_x509_write_sig_2: (+1)
   \       0x7E   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
    284          }
    285          

   \                                 In section .text, align 2, keep-with-next
    286          static int x509_write_extension( unsigned char **p, unsigned char *start,
    287                                           mbedtls_asn1_named_data *ext )
    288          {
   \                     x509_write_extension: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4617             MOV      R7,R2
    289              int ret;
    290              size_t len = 0;
    291          
    292              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_raw_buffer( p, start, ext->val.p + 1,
    293                                                        ext->val.len - 1 ) );
   \        0x8   0x693B             LDR      R3,[R7, #+16]
   \        0xA   0x1E5B             SUBS     R3,R3,#+1
   \        0xC   0x6978             LDR      R0,[R7, #+20]
   \        0xE   0x1C42             ADDS     R2,R0,#+1
   \       0x10   0x4620             MOV      R0,R4
   \       0x12   0x....'....        BL       mbedtls_asn1_write_raw_buffer
   \       0x16   0x0006             MOVS     R6,R0
   \       0x18   0xD446             BMI.N    ??x509_write_extension_0
    294              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, ext->val.len - 1 ) );
   \       0x1A   0x693A             LDR      R2,[R7, #+16]
   \       0x1C   0x1E52             SUBS     R2,R2,#+1
   \       0x1E   0x4629             MOV      R1,R5
   \       0x20   0x4620             MOV      R0,R4
   \       0x22   0x....'....        BL       mbedtls_asn1_write_len
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD43E             BMI.N    ??x509_write_extension_0
   \       0x2A   0x1986             ADDS     R6,R0,R6
    295              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_OCTET_STRING ) );
   \       0x2C   0x2204             MOVS     R2,#+4
   \       0x2E   0x4629             MOV      R1,R5
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD436             BMI.N    ??x509_write_extension_0
   \       0x3A   0x1986             ADDS     R6,R0,R6
    296          
    297              if( ext->val.p[0] != 0 )
   \       0x3C   0x6978             LDR      R0,[R7, #+20]
   \       0x3E   0x7800             LDRB     R0,[R0, #+0]
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD007             BEQ.N    ??x509_write_extension_1
    298              {
    299                  MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_bool( p, start, 1 ) );
   \       0x44   0x2201             MOVS     R2,#+1
   \       0x46   0x4629             MOV      R1,R5
   \       0x48   0x4620             MOV      R0,R4
   \       0x4A   0x....'....        BL       mbedtls_asn1_write_bool
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD42A             BMI.N    ??x509_write_extension_0
   \       0x52   0x1986             ADDS     R6,R0,R6
    300              }
    301          
    302              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_raw_buffer( p, start, ext->oid.p,
    303                                                        ext->oid.len ) );
   \                     ??x509_write_extension_1: (+1)
   \       0x54   0x687B             LDR      R3,[R7, #+4]
   \       0x56   0x68BA             LDR      R2,[R7, #+8]
   \       0x58   0x4629             MOV      R1,R5
   \       0x5A   0x4620             MOV      R0,R4
   \       0x5C   0x....'....        BL       mbedtls_asn1_write_raw_buffer
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD421             BMI.N    ??x509_write_extension_0
   \       0x64   0x1986             ADDS     R6,R0,R6
    304              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, ext->oid.len ) );
   \       0x66   0x687A             LDR      R2,[R7, #+4]
   \       0x68   0x4629             MOV      R1,R5
   \       0x6A   0x4620             MOV      R0,R4
   \       0x6C   0x....'....        BL       mbedtls_asn1_write_len
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD419             BMI.N    ??x509_write_extension_0
   \       0x74   0x1986             ADDS     R6,R0,R6
    305              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_OID ) );
   \       0x76   0x2206             MOVS     R2,#+6
   \       0x78   0x4629             MOV      R1,R5
   \       0x7A   0x4620             MOV      R0,R4
   \       0x7C   0x....'....        BL       mbedtls_asn1_write_tag
   \       0x80   0x2800             CMP      R0,#+0
   \       0x82   0xD411             BMI.N    ??x509_write_extension_0
   \       0x84   0x1986             ADDS     R6,R0,R6
    306          
    307              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_len( p, start, len ) );
   \       0x86   0x4632             MOV      R2,R6
   \       0x88   0x4629             MOV      R1,R5
   \       0x8A   0x4620             MOV      R0,R4
   \       0x8C   0x....'....        BL       mbedtls_asn1_write_len
   \       0x90   0x2800             CMP      R0,#+0
   \       0x92   0xD409             BMI.N    ??x509_write_extension_0
   \       0x94   0x1986             ADDS     R6,R0,R6
    308              MBEDTLS_ASN1_CHK_ADD( len, mbedtls_asn1_write_tag( p, start, MBEDTLS_ASN1_CONSTRUCTED |
    309                                                           MBEDTLS_ASN1_SEQUENCE ) );
   \       0x96   0x2230             MOVS     R2,#+48
   \       0x98   0x4629             MOV      R1,R5
   \       0x9A   0x4620             MOV      R0,R4
   \       0x9C   0x....'....        BL       mbedtls_asn1_write_tag
   \       0xA0   0x2800             CMP      R0,#+0
   \       0xA2   0xD401             BMI.N    ??x509_write_extension_0
    310          
    311              return( (int) len );
   \       0xA4   0x1986             ADDS     R6,R0,R6
   \       0xA6   0x4630             MOV      R0,R6
   \                     ??x509_write_extension_0: (+1)
   \       0xA8   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    312          }
    313          
    314          /*
    315           * Extension  ::=  SEQUENCE  {
    316           *     extnID      OBJECT IDENTIFIER,
    317           *     critical    BOOLEAN DEFAULT FALSE,
    318           *     extnValue   OCTET STRING
    319           *                 -- contains the DER encoding of an ASN.1 value
    320           *                 -- corresponding to the extension type identified
    321           *                 -- by extnID
    322           *     }
    323           */

   \                                 In section .text, align 2, keep-with-next
    324          int mbedtls_x509_write_extensions( unsigned char **p, unsigned char *start,
    325                                     mbedtls_asn1_named_data *first )
    326          {
   \                     mbedtls_x509_write_extensions: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x460E             MOV      R6,R1
   \        0x6   0x4614             MOV      R4,R2
    327              int ret;
    328              size_t len = 0;
   \        0x8   0x2700             MOVS     R7,#+0
    329              mbedtls_asn1_named_data *cur_ext = first;
   \        0xA   0xE001             B.N      ??mbedtls_x509_write_extensions_0
    330          
    331              while( cur_ext != NULL )
    332              {
    333                  MBEDTLS_ASN1_CHK_ADD( len, x509_write_extension( p, start, cur_ext ) );
   \                     ??mbedtls_x509_write_extensions_1: (+1)
   \        0xC   0x19C7             ADDS     R7,R0,R7
    334                  cur_ext = cur_ext->next;
   \        0xE   0x69A4             LDR      R4,[R4, #+24]
   \                     ??mbedtls_x509_write_extensions_0: (+1)
   \       0x10   0x2C00             CMP      R4,#+0
   \       0x12   0xD007             BEQ.N    ??mbedtls_x509_write_extensions_2
   \       0x14   0x4622             MOV      R2,R4
   \       0x16   0x4631             MOV      R1,R6
   \       0x18   0x4628             MOV      R0,R5
   \       0x1A   0x....'....        BL       x509_write_extension
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD5F4             BPL.N    ??mbedtls_x509_write_extensions_1
   \       0x22   0xBDF2             POP      {R1,R4-R7,PC}
    335              }
    336          
    337              return( (int) len );
   \                     ??mbedtls_x509_write_extensions_2: (+1)
   \       0x24   0x4638             MOV      R0,R7
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    338          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     x509_attrs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0xFFFF'DF00        DC32     0xffffdf00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0xFFFF'D780        DC32     0xffffd780

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0xFFFF'DC80        DC32     0xffffdc80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x43 0x4E          DC8 "CN"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x55 0x04          DC8 "U\004\003"
   \              0x03 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x63 0x6F          DC8 "commonName"
   \              0x6D 0x6D    
   \              0x6F 0x6E    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     ?_3:
   \        0x0   0x43 0x00          DC8 "C"

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x55 0x04          DC8 "U\004\006"
   \              0x06 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x63 0x6F          DC8 "countryName"
   \              0x75 0x6E    
   \              0x74 0x72    
   \              0x79 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 2
   \                     ?_6:
   \        0x0   0x4F 0x00          DC8 "O"

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x55 0x04          DC8 "U\004\012"
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x6F 0x72          DC8 "organizationName"
   \              0x67 0x61    
   \              0x6E 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \                     ?_9:
   \        0x0   0x4C 0x00          DC8 "L"

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x55 0x04          DC8 "U\004\007"
   \              0x07 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x6C 0x6F          DC8 "locality"
   \              0x63 0x61    
   \              0x6C 0x69    
   \              0x74 0x79    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \                     ?_12:
   \        0x0   0x52 0x00          DC8 "R"

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x2A 0x86          DC8 "*\206H\206\367\015\001\t\001"
   \              0x48 0x86    
   \              0xF7 0x0D    
   \              0x01 0x09    
   \              0x01 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x4F 0x55          DC8 "OU"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x55 0x04          DC8 "U\004\013"
   \              0x0B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x6F 0x72          DC8 "organizationalUnitName"
   \              0x67 0x61    
   \              0x6E 0x69    
   \              0x7A 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x61 0x6C    
   \              0x55 0x6E    
   \              0x69 0x74    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x53 0x54          DC8 "ST"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x55 0x04          DC8 "U\004\010"
   \              0x08 0x00    

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x73 0x74          DC8 "stateOrProvinceName"
   \              0x61 0x74    
   \              0x65 0x4F    
   \              0x72 0x50    
   \              0x72 0x6F    
   \              0x76 0x69    
   \              0x6E 0x63    
   \              0x65 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x65 0x6D          DC8 "emailAddress"
   \              0x61 0x69    
   \              0x6C 0x41    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x73 0x65          DC8 "serialNumber"
   \              0x72 0x69    
   \              0x61 0x6C    
   \              0x4E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x55 0x04          DC8 "U\004\005"
   \              0x05 0x00    

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x70 0x6F          DC8 "postalAddress"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x41 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x55 0x04          DC8 "U\004\020"
   \              0x10 0x00    

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x70 0x6F          DC8 "postalCode"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x43 0x6F    
   \              0x64 0x65    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x55 0x04          DC8 "U\004\021"
   \              0x11 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x64 0x6E          DC8 "dnQualifier"
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x55 0x04          DC8 "U\004."
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x74 0x69          DC8 "title"
   \              0x74 0x6C    
   \              0x65 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x55 0x04          DC8 "U\004\014"
   \              0x0C 0x00    

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x73 0x75          DC8 "surName"
   \              0x72 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x55 0x04          DC8 "U\004\004"
   \              0x04 0x00    

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x53 0x4E          DC8 "SN"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x67 0x69          DC8 "givenName"
   \              0x76 0x65    
   \              0x6E 0x4E    
   \              0x61 0x6D    
   \              0x65 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x55 0x04          DC8 "U\004*"
   \              0x2A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x47 0x4E          DC8 "GN"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x69 0x6E          DC8 "initials"
   \              0x69 0x74    
   \              0x69 0x61    
   \              0x6C 0x73    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x55 0x04          DC8 "U\004+"
   \              0x2B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x70 0x73          DC8 "pseudonym"
   \              0x65 0x75    
   \              0x64 0x6F    
   \              0x6E 0x79    
   \              0x6D 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x55 0x04          DC8 "U\004A"
   \              0x41 0x00    

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x67 0x65          DC8 "generationQualifier"
   \              0x6E 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x51 0x75    
   \              0x61 0x6C    
   \              0x69 0x66    
   \              0x69 0x65    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x55 0x04          DC8 "U\004,"
   \              0x2C 0x00    

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x64 0x6F          DC8 "domainComponent"
   \              0x6D 0x61    
   \              0x69 0x6E    
   \              0x43 0x6F    
   \              0x6D 0x70    
   \              0x6F 0x6E    
   \              0x65 0x6E    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x09 0x92          DC8 "\t\222&\211\223\362,d\001\031"
   \              0x26 0x89    
   \              0x93 0xF2    
   \              0x2C 0x64    
   \              0x01 0x19    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x44 0x43          DC8 "DC"
   \              0x00         
   \        0x3   0x00               DC8 0
    339          
    340          #endif /* MBEDTLS_X509_CREATE_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   mbedtls_x509_set_extension
        16   -> __aeabi_memcpy
        16   -> mbedtls_asn1_store_named_data
     296   mbedtls_x509_string_to_names
       296   -> mbedtls_asn1_free_named_data_list
       296   -> mbedtls_asn1_store_named_data
       296   -> strlen
       296   -> x509_at_oid_from_name
      24   mbedtls_x509_write_extensions
        24   -> x509_write_extension
      32   mbedtls_x509_write_names
        32   -> mbedtls_asn1_write_len
        32   -> mbedtls_asn1_write_tag
        32   -> x509_write_name
      32   mbedtls_x509_write_sig
        32   -> __aeabi_memcpy
        32   -> mbedtls_asn1_write_algorithm_identifier
        32   -> mbedtls_asn1_write_len
        32   -> mbedtls_asn1_write_tag
      16   x509_at_oid_from_name
        16   -> strncmp
      24   x509_write_extension
        24   -> mbedtls_asn1_write_bool
        24   -> mbedtls_asn1_write_len
        24   -> mbedtls_asn1_write_raw_buffer
        24   -> mbedtls_asn1_write_tag
      32   x509_write_name
        32   -> mbedtls_asn1_write_ia5_string
        32   -> mbedtls_asn1_write_len
        32   -> mbedtls_asn1_write_oid
        32   -> mbedtls_asn1_write_printable_string
        32   -> mbedtls_asn1_write_tag
        32   -> memcmp


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ?_0
       4  ?_1
       4  ?_10
      12  ?_11
       2  ?_12
      12  ?_13
       4  ?_14
       4  ?_15
      24  ?_16
       4  ?_17
       4  ?_18
      20  ?_19
      12  ?_2
      16  ?_20
      16  ?_21
       4  ?_22
      16  ?_23
       4  ?_24
      12  ?_25
       4  ?_26
      12  ?_27
       4  ?_28
       8  ?_29
       2  ?_3
       4  ?_30
       8  ?_31
       4  ?_32
       4  ?_33
      12  ?_34
       4  ?_35
       4  ?_36
      12  ?_37
       4  ?_38
      12  ?_39
       4  ?_4
       4  ?_40
      20  ?_41
       4  ?_42
      16  ?_43
      12  ?_44
       4  ?_45
      12  ?_5
       2  ?_6
       4  ?_7
      20  ?_8
       2  ?_9
      44  mbedtls_x509_set_extension
     238  mbedtls_x509_string_to_names
      40  mbedtls_x509_write_extensions
      84  mbedtls_x509_write_names
     130  mbedtls_x509_write_sig
      42  x509_at_oid_from_name
     348  x509_attrs
     170  x509_write_extension
     160  x509_write_name

 
 728 bytes in section .rodata
 928 bytes in section .text
 
 928 bytes of CODE  memory
 728 bytes of CONST memory

Errors: none
Warnings: none
