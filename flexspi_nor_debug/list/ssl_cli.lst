###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:50
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\mbedtls\library\ssl_cli.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW4CB5.tmp
#        (C:\Development\smart_washing_machine_3080\mbedtls\library\ssl_cli.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\ssl_cli.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\ssl_cli.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\mbedtls\library\ssl_cli.c
      1          /*
      2           *  SSLv3/TLSv1 client-side functions
      3           *
      4           *  Copyright (C) 2006-2015, ARM Limited, All Rights Reserved
      5           *  SPDX-License-Identifier: Apache-2.0
      6           *
      7           *  Licensed under the Apache License, Version 2.0 (the "License"); you may
      8           *  not use this file except in compliance with the License.
      9           *  You may obtain a copy of the License at
     10           *
     11           *  http://www.apache.org/licenses/LICENSE-2.0
     12           *
     13           *  Unless required by applicable law or agreed to in writing, software
     14           *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
     15           *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     16           *  See the License for the specific language governing permissions and
     17           *  limitations under the License.
     18           *
     19           *  This file is part of mbed TLS (https://tls.mbed.org)
     20           */
     21          
     22          #if !defined(MBEDTLS_CONFIG_FILE)
     23          #include "mbedtls/config.h"
     24          #else
     25          #include MBEDTLS_CONFIG_FILE
     26          #endif
     27          
     28          #if defined(MBEDTLS_SSL_CLI_C)
     29          
     30          #if defined(MBEDTLS_PLATFORM_C)
     31          #include "mbedtls/platform.h"
     32          #else
     33          #include <stdlib.h>
     34          #define mbedtls_calloc    calloc
     35          #define mbedtls_free      free
     36          #endif
     37          
     38          #include "mbedtls/debug.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp mbedtls_ecp_keypair *mbedtls_pk_ec(mbedtls_pk_context const)
   \                     mbedtls_pk_ec: (+1)
   \        0x0   0x4608             MOV      R0,R1
   \        0x2   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp int mbedtls_ssl_ciphersuite_cert_req_allowed(mbedtls_ssl_ciphersuite_t const *)
   \                     mbedtls_ssl_ciphersuite_cert_req_allowed: (+1)
   \        0x0   0x7A80             LDRB     R0,[R0, #+10]
   \        0x2   0x1E40             SUBS     R0,R0,#+1
   \        0x4   0x2803             CMP      R0,#+3
   \        0x6   0xD902             BLS.N    ??mbedtls_ssl_ciphersuite_cert_req_allowed_0
   \        0x8   0x3808             SUBS     R0,R0,#+8
   \        0xA   0x2801             CMP      R0,#+1
   \        0xC   0xD801             BHI.N    ??mbedtls_ssl_ciphersuite_cert_req_allowed_1
   \                     ??mbedtls_ssl_ciphersuite_cert_req_allowed_0: (+1)
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0x4770             BX       LR
   \                     ??mbedtls_ssl_ciphersuite_cert_req_allowed_1: (+1)
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp int mbedtls_ssl_ciphersuite_uses_server_signature(mbedtls_ssl_ciphersuite_t const *)
   \                     mbedtls_ssl_ciphersuite_uses_server_signature: (+1)
   \        0x0   0x7A80             LDRB     R0,[R0, #+10]
   \        0x2   0x1E80             SUBS     R0,R0,#+2
   \        0x4   0x2802             CMP      R0,#+2
   \        0x6   0xD801             BHI.N    ??mbedtls_ssl_ciphersuite_uses_server_signature_0
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0x4770             BX       LR
   \                     ??mbedtls_ssl_ciphersuite_uses_server_signature_0: (+1)
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x4770             BX       LR               ;; return
     39          #include "mbedtls/ssl.h"
     40          #include "mbedtls/ssl_internal.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp mbedtls_pk_context *mbedtls_ssl_own_key(mbedtls_ssl_context *)
   \                     mbedtls_ssl_own_key: (+1)
   \        0x0   0x6BC1             LDR      R1,[R0, #+60]
   \        0x2   0x2900             CMP      R1,#+0
   \        0x4   0xD005             BEQ.N    ??mbedtls_ssl_own_key_0
   \        0x6   0xF8D1 0x11C0      LDR      R1,[R1, #+448]
   \        0xA   0x2900             CMP      R1,#+0
   \        0xC   0xD001             BEQ.N    ??mbedtls_ssl_own_key_0
   \        0xE   0x4608             MOV      R0,R1
   \       0x10   0xE001             B.N      ??mbedtls_ssl_own_key_1
   \                     ??mbedtls_ssl_own_key_0: (+1)
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x6E80             LDR      R0,[R0, #+104]
   \                     ??mbedtls_ssl_own_key_1: (+1)
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD101             BNE.N    ??mbedtls_ssl_own_key_2
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x4770             BX       LR
   \                     ??mbedtls_ssl_own_key_2: (+1)
   \       0x1E   0x6840             LDR      R0,[R0, #+4]
   \       0x20   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp mbedtls_x509_crt *mbedtls_ssl_own_cert(mbedtls_ssl_context *)
   \                     mbedtls_ssl_own_cert: (+1)
   \        0x0   0x6BC1             LDR      R1,[R0, #+60]
   \        0x2   0x2900             CMP      R1,#+0
   \        0x4   0xD005             BEQ.N    ??mbedtls_ssl_own_cert_0
   \        0x6   0xF8D1 0x11C0      LDR      R1,[R1, #+448]
   \        0xA   0x2900             CMP      R1,#+0
   \        0xC   0xD001             BEQ.N    ??mbedtls_ssl_own_cert_0
   \        0xE   0x4608             MOV      R0,R1
   \       0x10   0xE001             B.N      ??mbedtls_ssl_own_cert_1
   \                     ??mbedtls_ssl_own_cert_0: (+1)
   \       0x12   0x6800             LDR      R0,[R0, #+0]
   \       0x14   0x6E80             LDR      R0,[R0, #+104]
   \                     ??mbedtls_ssl_own_cert_1: (+1)
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD101             BNE.N    ??mbedtls_ssl_own_cert_2
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x4770             BX       LR
   \                     ??mbedtls_ssl_own_cert_2: (+1)
   \       0x1E   0x6800             LDR      R0,[R0, #+0]
   \       0x20   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp size_t mbedtls_ssl_hs_hdr_len(mbedtls_ssl_context const *)
   \                     mbedtls_ssl_hs_hdr_len: (+1)
   \        0x0   0x6800             LDR      R0,[R0, #+0]
   \        0x2   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0x6   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD001             BEQ.N    ??mbedtls_ssl_hs_hdr_len_0
   \        0xE   0x200C             MOVS     R0,#+12
   \       0x10   0x4770             BX       LR
   \                     ??mbedtls_ssl_hs_hdr_len_0: (+1)
   \       0x12   0x2004             MOVS     R0,#+4
   \       0x14   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp int mbedtls_ssl_safer_memcmp(void const *, void const *, size_t)
   \                     mbedtls_ssl_safer_memcmp: (+1)
   \        0x0   0xB478             PUSH     {R3-R6}
   \        0x2   0x2300             MOVS     R3,#+0
   \        0x4   0xF88D 0x3000      STRB     R3,[SP, #+0]
   \        0x8   0xE008             B.N      ??mbedtls_ssl_safer_memcmp_0
   \                     ??mbedtls_ssl_safer_memcmp_1: (+1)
   \        0xA   0x5CC4             LDRB     R4,[R0, R3]
   \        0xC   0x5CCD             LDRB     R5,[R1, R3]
   \        0xE   0xF89D 0x6000      LDRB     R6,[SP, #+0]
   \       0x12   0x406C             EORS     R4,R5,R4
   \       0x14   0x4334             ORRS     R4,R4,R6
   \       0x16   0xF88D 0x4000      STRB     R4,[SP, #+0]
   \       0x1A   0x1C5B             ADDS     R3,R3,#+1
   \                     ??mbedtls_ssl_safer_memcmp_0: (+1)
   \       0x1C   0x4293             CMP      R3,R2
   \       0x1E   0xD3F4             BCC.N    ??mbedtls_ssl_safer_memcmp_1
   \       0x20   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x24   0xBC72             POP      {R1,R4-R6}
   \       0x26   0x4770             BX       LR               ;; return
     41          
     42          #include <string.h>
     43          
     44          #include <stdint.h>
     45          
     46          #if defined(MBEDTLS_HAVE_TIME)
     47          #include "mbedtls/platform_time.h"
     48          #endif
     49          
     50          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
     51          #include "mbedtls/platform_util.h"
     52          #endif
     53          
     54          #if defined(MBEDTLS_SSL_SERVER_NAME_INDICATION)

   \                                 In section .text, align 2, keep-with-next
     55          static void ssl_write_hostname_ext( mbedtls_ssl_context *ssl,
     56                                              unsigned char *buf,
     57                                              size_t *olen )
     58          {
   \                     ssl_write_hostname_ext: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
     59              unsigned char *p = buf;
     60              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
     61              size_t hostname_len;
     62          
     63              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6028             STR      R0,[R5, #+0]
     64          
     65              if( ssl->hostname == NULL )
   \       0x16   0xF8D4 0x00E4      LDR      R0,[R4, #+228]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD045             BEQ.N    ??ssl_write_hostname_ext_0
     66                  return;
     67          
     68              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding server name extension: %s",
     69                             ssl->hostname ) );
   \       0x1E   0x....'....        LDR.W    R8,??DataTable13
   \       0x22   0x9001             STR      R0,[SP, #+4]
   \       0x24   0x....'....        LDR.W    R0,??DataTable12
   \       0x28   0x9000             STR      R0,[SP, #+0]
   \       0x2A   0x2345             MOVS     R3,#+69
   \       0x2C   0x4642             MOV      R2,R8
   \       0x2E   0x2103             MOVS     R1,#+3
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       mbedtls_debug_print_msg
     70          
     71              hostname_len = strlen( ssl->hostname );
   \       0x36   0xF8D4 0x00E4      LDR      R0,[R4, #+228]
   \       0x3A   0x....'....        BL       strlen
   \       0x3E   0x4681             MOV      R9,R0
     72          
     73              if( end < p || (size_t)( end - p ) < hostname_len + 9 )
   \       0x40   0x42B7             CMP      R7,R6
   \       0x42   0xD304             BCC.N    ??ssl_write_hostname_ext_1
   \       0x44   0x1BBF             SUBS     R7,R7,R6
   \       0x46   0xF109 0x0009      ADD      R0,R9,#+9
   \       0x4A   0x4287             CMP      R7,R0
   \       0x4C   0xD209             BCS.N    ??ssl_write_hostname_ext_2
     74              {
     75                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_hostname_ext_1: (+1)
   \       0x4E   0x....'....        LDR.W    R0,??DataTable16
   \       0x52   0x9000             STR      R0,[SP, #+0]
   \       0x54   0x234B             MOVS     R3,#+75
   \       0x56   0x4642             MOV      R2,R8
   \       0x58   0x2101             MOVS     R1,#+1
   \       0x5A   0x4620             MOV      R0,R4
   \       0x5C   0x....'....        BL       mbedtls_debug_print_msg
     76                  return;
   \       0x60   0xE023             B.N      ??ssl_write_hostname_ext_0
     77              }
     78          
     79              /*
     80               * Sect. 3, RFC 6066 (TLS Extensions Definitions)
     81               *
     82               * In order to provide any of the server names, clients MAY include an
     83               * extension of type "server_name" in the (extended) client hello. The
     84               * "extension_data" field of this extension SHALL contain
     85               * "ServerNameList" where:
     86               *
     87               * struct {
     88               *     NameType name_type;
     89               *     select (name_type) {
     90               *         case host_name: HostName;
     91               *     } name;
     92               * } ServerName;
     93               *
     94               * enum {
     95               *     host_name(0), (255)
     96               * } NameType;
     97               *
     98               * opaque HostName<1..2^16-1>;
     99               *
    100               * struct {
    101               *     ServerName server_name_list<1..2^16-1>
    102               * } ServerNameList;
    103               *
    104               */
    105              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SERVERNAME >> 8 ) & 0xFF );
   \                     ??ssl_write_hostname_ext_2: (+1)
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x7030             STRB     R0,[R6, #+0]
   \       0x66   0x1C70             ADDS     R0,R6,#+1
    106              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SERVERNAME      ) & 0xFF );
   \       0x68   0x2100             MOVS     R1,#+0
   \       0x6A   0x7001             STRB     R1,[R0, #+0]
    107          
    108              *p++ = (unsigned char)( ( (hostname_len + 5) >> 8 ) & 0xFF );
   \       0x6C   0xF109 0x0105      ADD      R1,R9,#+5
   \       0x70   0x0A09             LSRS     R1,R1,#+8
   \       0x72   0x7041             STRB     R1,[R0, #+1]
    109              *p++ = (unsigned char)( ( (hostname_len + 5)      ) & 0xFF );
   \       0x74   0xF109 0x0105      ADD      R1,R9,#+5
   \       0x78   0x7081             STRB     R1,[R0, #+2]
    110          
    111              *p++ = (unsigned char)( ( (hostname_len + 3) >> 8 ) & 0xFF );
   \       0x7A   0xF109 0x0103      ADD      R1,R9,#+3
   \       0x7E   0x0A09             LSRS     R1,R1,#+8
   \       0x80   0x70C1             STRB     R1,[R0, #+3]
    112              *p++ = (unsigned char)( ( (hostname_len + 3)      ) & 0xFF );
   \       0x82   0xF109 0x0103      ADD      R1,R9,#+3
   \       0x86   0x7101             STRB     R1,[R0, #+4]
    113          
    114              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SERVERNAME_HOSTNAME ) & 0xFF );
   \       0x88   0x2100             MOVS     R1,#+0
   \       0x8A   0x7141             STRB     R1,[R0, #+5]
    115              *p++ = (unsigned char)( ( hostname_len >> 8 ) & 0xFF );
   \       0x8C   0x4649             MOV      R1,R9
   \       0x8E   0x0A09             LSRS     R1,R1,#+8
   \       0x90   0x7181             STRB     R1,[R0, #+6]
    116              *p++ = (unsigned char)( ( hostname_len      ) & 0xFF );
   \       0x92   0xF880 0x9007      STRB     R9,[R0, #+7]
    117          
    118              memcpy( p, ssl->hostname, hostname_len );
   \       0x96   0x464A             MOV      R2,R9
   \       0x98   0xF8D4 0x10E4      LDR      R1,[R4, #+228]
   \       0x9C   0x3008             ADDS     R0,R0,#+8
   \       0x9E   0x....'....        BL       __aeabi_memcpy
    119          
    120              *olen = hostname_len + 9;
   \       0xA2   0xF109 0x0909      ADD      R9,R9,#+9
   \       0xA6   0xF8C5 0x9000      STR      R9,[R5, #+0]
    121          }
   \                     ??ssl_write_hostname_ext_0: (+1)
   \       0xAA   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return
    122          #endif /* MBEDTLS_SSL_SERVER_NAME_INDICATION */
    123          
    124          #if defined(MBEDTLS_SSL_RENEGOTIATION)

   \                                 In section .text, align 2, keep-with-next
    125          static void ssl_write_renegotiation_ext( mbedtls_ssl_context *ssl,
    126                                                   unsigned char *buf,
    127                                                   size_t *olen )
    128          {
   \                     ssl_write_renegotiation_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
    129              unsigned char *p = buf;
    130              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    131          
    132              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6028             STR      R0,[R5, #+0]
    133          
    134              /* We're always including an TLS_EMPTY_RENEGOTIATION_INFO_SCSV in the
    135               * initial ClientHello, in which case also adding the renegotiation
    136               * info extension is NOT RECOMMENDED as per RFC 5746 Section 3.4. */
    137              if( ssl->renego_status != MBEDTLS_SSL_RENEGOTIATION_IN_PROGRESS )
   \       0x16   0x68A0             LDR      R0,[R4, #+8]
   \       0x18   0x2801             CMP      R0,#+1
   \       0x1A   0xD135             BNE.N    ??ssl_write_renegotiation_ext_0
    138                  return;
    139          
    140              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding renegotiation extension" ) );
   \       0x1C   0x....'....        LDR.W    R8,??DataTable13
   \       0x20   0x....'....        LDR.W    R0,??DataTable14
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x238C             MOVS     R3,#+140
   \       0x28   0x4642             MOV      R2,R8
   \       0x2A   0x2103             MOVS     R1,#+3
   \       0x2C   0x4620             MOV      R0,R4
   \       0x2E   0x....'....        BL       mbedtls_debug_print_msg
    141          
    142              if( end < p || (size_t)( end - p ) < 5 + ssl->verify_data_len )
   \       0x32   0x42B7             CMP      R7,R6
   \       0x34   0xD305             BCC.N    ??ssl_write_renegotiation_ext_1
   \       0x36   0x1BBF             SUBS     R7,R7,R6
   \       0x38   0xF8D4 0x00F8      LDR      R0,[R4, #+248]
   \       0x3C   0x1D40             ADDS     R0,R0,#+5
   \       0x3E   0x4287             CMP      R7,R0
   \       0x40   0xD209             BCS.N    ??ssl_write_renegotiation_ext_2
    143              {
    144                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_renegotiation_ext_1: (+1)
   \       0x42   0x....'....        LDR.W    R0,??DataTable16
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0x2390             MOVS     R3,#+144
   \       0x4A   0x4642             MOV      R2,R8
   \       0x4C   0x2101             MOVS     R1,#+1
   \       0x4E   0x4620             MOV      R0,R4
   \       0x50   0x....'....        BL       mbedtls_debug_print_msg
    145                  return;
   \       0x54   0xE018             B.N      ??ssl_write_renegotiation_ext_0
    146              }
    147          
    148              /*
    149               * Secure renegotiation
    150               */
    151              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_RENEGOTIATION_INFO >> 8 ) & 0xFF );
   \                     ??ssl_write_renegotiation_ext_2: (+1)
   \       0x56   0x20FF             MOVS     R0,#+255
   \       0x58   0x7030             STRB     R0,[R6, #+0]
   \       0x5A   0x1C70             ADDS     R0,R6,#+1
    152              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_RENEGOTIATION_INFO      ) & 0xFF );
   \       0x5C   0x2101             MOVS     R1,#+1
   \       0x5E   0x7001             STRB     R1,[R0, #+0]
    153          
    154              *p++ = 0x00;
   \       0x60   0x2100             MOVS     R1,#+0
   \       0x62   0x7041             STRB     R1,[R0, #+1]
    155              *p++ = ( ssl->verify_data_len + 1 ) & 0xFF;
   \       0x64   0xF8D4 0x10F8      LDR      R1,[R4, #+248]
   \       0x68   0x1C49             ADDS     R1,R1,#+1
   \       0x6A   0x7081             STRB     R1,[R0, #+2]
    156              *p++ = ssl->verify_data_len & 0xFF;
   \       0x6C   0xF8D4 0x10F8      LDR      R1,[R4, #+248]
   \       0x70   0x70C1             STRB     R1,[R0, #+3]
    157          
    158              memcpy( p, ssl->own_verify_data, ssl->verify_data_len );
   \       0x72   0xF8D4 0x20F8      LDR      R2,[R4, #+248]
   \       0x76   0xF104 0x01FC      ADD      R1,R4,#+252
   \       0x7A   0x1D00             ADDS     R0,R0,#+4
   \       0x7C   0x....'....        BL       __aeabi_memcpy
    159          
    160              *olen = 5 + ssl->verify_data_len;
   \       0x80   0xF8D4 0x00F8      LDR      R0,[R4, #+248]
   \       0x84   0x1D40             ADDS     R0,R0,#+5
   \       0x86   0x6028             STR      R0,[R5, #+0]
    161          }
   \                     ??ssl_write_renegotiation_ext_0: (+1)
   \       0x88   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    162          #endif /* MBEDTLS_SSL_RENEGOTIATION */
    163          
    164          /*
    165           * Only if we handle at least one key exchange that needs signatures.
    166           */
    167          #if defined(MBEDTLS_SSL_PROTO_TLS1_2) && \
    168              defined(MBEDTLS_KEY_EXCHANGE__WITH_CERT__ENABLED)

   \                                 In section .text, align 2, keep-with-next
    169          static void ssl_write_signature_algorithms_ext( mbedtls_ssl_context *ssl,
    170                                                          unsigned char *buf,
    171                                                          size_t *olen )
    172          {
   \                     ssl_write_signature_algorithms_ext: (+1)
   \        0x0   0xE92D 0x47FC      PUSH     {R2-R10,LR}
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x460C             MOV      R4,R1
   \        0x8   0x4615             MOV      R5,R2
    173              unsigned char *p = buf;
    174              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D7 0x00C4      LDR      R0,[R7, #+196]
   \        0xE   0xF500 0x5820      ADD      R8,R0,#+10240
    175              size_t sig_alg_len = 0;
   \       0x12   0xF04F 0x0900      MOV      R9,#+0
    176              const int *md;
    177          #if defined(MBEDTLS_RSA_C) || defined(MBEDTLS_ECDSA_C)
    178              unsigned char *sig_alg_list = buf + 6;
   \       0x16   0x1DA6             ADDS     R6,R4,#+6
    179          #endif
    180          
    181              *olen = 0;
   \       0x18   0x4648             MOV      R0,R9
   \       0x1A   0x6028             STR      R0,[R5, #+0]
    182          
    183              if( ssl->conf->max_minor_ver != MBEDTLS_SSL_MINOR_VERSION_3 )
   \       0x1C   0x6838             LDR      R0,[R7, #+0]
   \       0x1E   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \       0x22   0x2803             CMP      R0,#+3
   \       0x24   0xD15A             BNE.N    ??ssl_write_signature_algorithms_ext_0
    184                  return;
    185          
    186              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding signature_algorithms extension" ) );
   \       0x26   0x....'....        LDR.W    R10,??DataTable13
   \       0x2A   0x....'....        LDR.W    R0,??DataTable16_1
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0x23BA             MOVS     R3,#+186
   \       0x32   0x4652             MOV      R2,R10
   \       0x34   0x2103             MOVS     R1,#+3
   \       0x36   0x4638             MOV      R0,R7
   \       0x38   0x....'....        BL       mbedtls_debug_print_msg
    187          
    188              for( md = ssl->conf->sig_hashes; *md != MBEDTLS_MD_NONE; md++ )
   \       0x3C   0x6838             LDR      R0,[R7, #+0]
   \       0x3E   0x6F41             LDR      R1,[R0, #+116]
   \       0x40   0xE002             B.N      ??ssl_write_signature_algorithms_ext_1
    189              {
    190          #if defined(MBEDTLS_ECDSA_C)
    191                  sig_alg_len += 2;
    192          #endif
    193          #if defined(MBEDTLS_RSA_C)
    194                  sig_alg_len += 2;
   \                     ??ssl_write_signature_algorithms_ext_2: (+1)
   \       0x42   0xF109 0x0904      ADD      R9,R9,#+4
    195          #endif
    196              }
   \       0x46   0x1D09             ADDS     R1,R1,#+4
   \                     ??ssl_write_signature_algorithms_ext_1: (+1)
   \       0x48   0x6808             LDR      R0,[R1, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD1F9             BNE.N    ??ssl_write_signature_algorithms_ext_2
    197          
    198              if( end < p || (size_t)( end - p ) < sig_alg_len + 6 )
   \       0x4E   0x45A0             CMP      R8,R4
   \       0x50   0xD305             BCC.N    ??ssl_write_signature_algorithms_ext_3
   \       0x52   0xEBA8 0x0804      SUB      R8,R8,R4
   \       0x56   0xF109 0x0906      ADD      R9,R9,#+6
   \       0x5A   0x45C8             CMP      R8,R9
   \       0x5C   0xD209             BCS.N    ??ssl_write_signature_algorithms_ext_4
    199              {
    200                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_signature_algorithms_ext_3: (+1)
   \       0x5E   0x....'....        LDR.W    R0,??DataTable16
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0x23C8             MOVS     R3,#+200
   \       0x66   0x4652             MOV      R2,R10
   \       0x68   0x2101             MOVS     R1,#+1
   \       0x6A   0x4638             MOV      R0,R7
   \       0x6C   0x....'....        BL       mbedtls_debug_print_msg
    201                  return;
   \       0x70   0xE034             B.N      ??ssl_write_signature_algorithms_ext_0
    202              }
    203          
    204              /*
    205               * Prepare signature_algorithms extension (TLS 1.2)
    206               */
    207              sig_alg_len = 0;
   \                     ??ssl_write_signature_algorithms_ext_4: (+1)
   \       0x72   0xF04F 0x0800      MOV      R8,#+0
    208          
    209              for( md = ssl->conf->sig_hashes; *md != MBEDTLS_MD_NONE; md++ )
   \       0x76   0x6838             LDR      R0,[R7, #+0]
   \       0x78   0x6F47             LDR      R7,[R0, #+116]
   \       0x7A   0xE017             B.N      ??ssl_write_signature_algorithms_ext_5
    210              {
    211          #if defined(MBEDTLS_ECDSA_C)
    212                  sig_alg_list[sig_alg_len++] = mbedtls_ssl_hash_from_md_alg( *md );
   \                     ??ssl_write_signature_algorithms_ext_6: (+1)
   \       0x7C   0x....'....        BL       mbedtls_ssl_hash_from_md_alg
   \       0x80   0xF806 0x0008      STRB     R0,[R6, R8]
   \       0x84   0xF108 0x0801      ADD      R8,R8,#+1
    213                  sig_alg_list[sig_alg_len++] = MBEDTLS_SSL_SIG_ECDSA;
   \       0x88   0x2003             MOVS     R0,#+3
   \       0x8A   0xF806 0x0008      STRB     R0,[R6, R8]
   \       0x8E   0xF108 0x0801      ADD      R8,R8,#+1
    214          #endif
    215          #if defined(MBEDTLS_RSA_C)
    216                  sig_alg_list[sig_alg_len++] = mbedtls_ssl_hash_from_md_alg( *md );
   \       0x92   0xF857 0x0B04      LDR      R0,[R7], #+4
   \       0x96   0x....'....        BL       mbedtls_ssl_hash_from_md_alg
   \       0x9A   0xF806 0x0008      STRB     R0,[R6, R8]
   \       0x9E   0xF108 0x0801      ADD      R8,R8,#+1
    217                  sig_alg_list[sig_alg_len++] = MBEDTLS_SSL_SIG_RSA;
   \       0xA2   0x2001             MOVS     R0,#+1
   \       0xA4   0xF806 0x0008      STRB     R0,[R6, R8]
   \       0xA8   0xF108 0x0801      ADD      R8,R8,#+1
    218          #endif
    219              }
   \                     ??ssl_write_signature_algorithms_ext_5: (+1)
   \       0xAC   0x6838             LDR      R0,[R7, #+0]
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD1E4             BNE.N    ??ssl_write_signature_algorithms_ext_6
    220          
    221              /*
    222               * enum {
    223               *     none(0), md5(1), sha1(2), sha224(3), sha256(4), sha384(5),
    224               *     sha512(6), (255)
    225               * } HashAlgorithm;
    226               *
    227               * enum { anonymous(0), rsa(1), dsa(2), ecdsa(3), (255) }
    228               *   SignatureAlgorithm;
    229               *
    230               * struct {
    231               *     HashAlgorithm hash;
    232               *     SignatureAlgorithm signature;
    233               * } SignatureAndHashAlgorithm;
    234               *
    235               * SignatureAndHashAlgorithm
    236               *   supported_signature_algorithms<2..2^16-2>;
    237               */
    238              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SIG_ALG >> 8 ) & 0xFF );
   \       0xB2   0x2000             MOVS     R0,#+0
   \       0xB4   0x7020             STRB     R0,[R4, #+0]
   \       0xB6   0x1C60             ADDS     R0,R4,#+1
    239              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SIG_ALG      ) & 0xFF );
   \       0xB8   0x210D             MOVS     R1,#+13
   \       0xBA   0x7001             STRB     R1,[R0, #+0]
    240          
    241              *p++ = (unsigned char)( ( ( sig_alg_len + 2 ) >> 8 ) & 0xFF );
   \       0xBC   0xF108 0x0102      ADD      R1,R8,#+2
   \       0xC0   0x0A09             LSRS     R1,R1,#+8
   \       0xC2   0x7041             STRB     R1,[R0, #+1]
    242              *p++ = (unsigned char)( ( ( sig_alg_len + 2 )      ) & 0xFF );
   \       0xC4   0xF108 0x0102      ADD      R1,R8,#+2
   \       0xC8   0x7081             STRB     R1,[R0, #+2]
    243          
    244              *p++ = (unsigned char)( ( sig_alg_len >> 8 ) & 0xFF );
   \       0xCA   0x4641             MOV      R1,R8
   \       0xCC   0x0A09             LSRS     R1,R1,#+8
   \       0xCE   0x70C1             STRB     R1,[R0, #+3]
    245              *p++ = (unsigned char)( ( sig_alg_len      ) & 0xFF );
   \       0xD0   0xF880 0x8004      STRB     R8,[R0, #+4]
    246          
    247              *olen = 6 + sig_alg_len;
   \       0xD4   0xF108 0x0806      ADD      R8,R8,#+6
   \       0xD8   0xF8C5 0x8000      STR      R8,[R5, #+0]
    248          }
   \                     ??ssl_write_signature_algorithms_ext_0: (+1)
   \       0xDC   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
    249          #endif /* MBEDTLS_SSL_PROTO_TLS1_2 &&
    250                    MBEDTLS_KEY_EXCHANGE__WITH_CERT__ENABLED */
    251          
    252          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
    253              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)

   \                                 In section .text, align 2, keep-with-next
    254          static void ssl_write_supported_elliptic_curves_ext( mbedtls_ssl_context *ssl,
    255                                                               unsigned char *buf,
    256                                                               size_t *olen )
    257          {
   \                     ssl_write_supported_elliptic_curves_ext: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4616             MOV      R6,R2
    258              unsigned char *p = buf;
    259              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    260              unsigned char *elliptic_curve_list = p + 6;
   \       0x12   0xF105 0x0806      ADD      R8,R5,#+6
    261              size_t elliptic_curve_len = 0;
   \       0x16   0xF04F 0x0A00      MOV      R10,#+0
    262              const mbedtls_ecp_curve_info *info;
    263          #if defined(MBEDTLS_ECP_C)
    264              const mbedtls_ecp_group_id *grp_id;
    265          #else
    266              ((void) ssl);
    267          #endif
    268          
    269              *olen = 0;
   \       0x1A   0x4650             MOV      R0,R10
   \       0x1C   0x6030             STR      R0,[R6, #+0]
    270          
    271              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding supported_elliptic_curves extension" ) );
   \       0x1E   0x....'....        LDR.W    R9,??DataTable13
   \       0x22   0x....'....        LDR.W    R0,??DataTable18
   \       0x26   0x9000             STR      R0,[SP, #+0]
   \       0x28   0xF240 0x130F      MOVW     R3,#+271
   \       0x2C   0x464A             MOV      R2,R9
   \       0x2E   0x2103             MOVS     R1,#+3
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       mbedtls_debug_print_msg
    272          
    273          #if defined(MBEDTLS_ECP_C)
    274              for( grp_id = ssl->conf->curve_list; *grp_id != MBEDTLS_ECP_DP_NONE; grp_id++ )
   \       0x36   0x6820             LDR      R0,[R4, #+0]
   \       0x38   0xF8D0 0xB078      LDR      R11,[R0, #+120]
   \       0x3C   0xE003             B.N      ??ssl_write_supported_elliptic_curves_ext_0
    275          #else
    276              for( info = mbedtls_ecp_curve_list(); info->grp_id != MBEDTLS_ECP_DP_NONE; info++ )
    277          #endif
    278              {
    279          #if defined(MBEDTLS_ECP_C)
    280                  info = mbedtls_ecp_curve_info_from_grp_id( *grp_id );
    281          #endif
    282                  if( info == NULL )
    283                  {
    284                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "invalid curve in ssl configuration" ) );
    285                      return;
    286                  }
    287          
    288                  elliptic_curve_len += 2;
   \                     ??ssl_write_supported_elliptic_curves_ext_1: (+1)
   \       0x3E   0xF10A 0x0A02      ADD      R10,R10,#+2
   \       0x42   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??ssl_write_supported_elliptic_curves_ext_0: (+1)
   \       0x46   0xF89B 0x0000      LDRB     R0,[R11, #+0]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD036             BEQ.N    ??ssl_write_supported_elliptic_curves_ext_2
   \       0x4E   0x....'....        BL       mbedtls_ecp_curve_info_from_grp_id
   \       0x52   0x2800             CMP      R0,#+0
   \       0x54   0xD1F3             BNE.N    ??ssl_write_supported_elliptic_curves_ext_1
   \       0x56   0x....'....        LDR.W    R0,??DataTable18_1
   \       0x5A   0x9000             STR      R0,[SP, #+0]
   \       0x5C   0xF44F 0x738E      MOV      R3,#+284
   \       0x60   0x464A             MOV      R2,R9
   \       0x62   0x2101             MOVS     R1,#+1
   \       0x64   0x4620             MOV      R0,R4
   \       0x66   0x....'....        BL       mbedtls_debug_print_msg
   \       0x6A   0xE025             B.N      ??ssl_write_supported_elliptic_curves_ext_3
    289              }
    290          
    291              if( end < p || (size_t)( end - p ) < 6 + elliptic_curve_len )
    292              {
    293                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
    294                  return;
    295              }
    296          
    297              elliptic_curve_len = 0;
   \                     ??ssl_write_supported_elliptic_curves_ext_4: (+1)
   \       0x6C   0x2700             MOVS     R7,#+0
    298          
    299          #if defined(MBEDTLS_ECP_C)
    300              for( grp_id = ssl->conf->curve_list; *grp_id != MBEDTLS_ECP_DP_NONE; grp_id++ )
   \       0x6E   0x6820             LDR      R0,[R4, #+0]
   \       0x70   0x6F84             LDR      R4,[R0, #+120]
   \       0x72   0xE00C             B.N      ??ssl_write_supported_elliptic_curves_ext_5
    301          #else
    302              for( info = mbedtls_ecp_curve_list(); info->grp_id != MBEDTLS_ECP_DP_NONE; info++ )
    303          #endif
    304              {
    305          #if defined(MBEDTLS_ECP_C)
    306                  info = mbedtls_ecp_curve_info_from_grp_id( *grp_id );
   \                     ??ssl_write_supported_elliptic_curves_ext_6: (+1)
   \       0x74   0xF814 0x0B01      LDRB     R0,[R4], #+1
   \       0x78   0x....'....        BL       mbedtls_ecp_curve_info_from_grp_id
    307          #endif
    308                  elliptic_curve_list[elliptic_curve_len++] = info->tls_id >> 8;
   \       0x7C   0x8841             LDRH     R1,[R0, #+2]
   \       0x7E   0x0A09             LSRS     R1,R1,#+8
   \       0x80   0xF808 0x1007      STRB     R1,[R8, R7]
   \       0x84   0x1C7F             ADDS     R7,R7,#+1
    309                  elliptic_curve_list[elliptic_curve_len++] = info->tls_id & 0xFF;
   \       0x86   0x8840             LDRH     R0,[R0, #+2]
   \       0x88   0xF808 0x0007      STRB     R0,[R8, R7]
   \       0x8C   0x1C7F             ADDS     R7,R7,#+1
    310              }
   \                     ??ssl_write_supported_elliptic_curves_ext_5: (+1)
   \       0x8E   0x7820             LDRB     R0,[R4, #+0]
   \       0x90   0x2800             CMP      R0,#+0
   \       0x92   0xD1EF             BNE.N    ??ssl_write_supported_elliptic_curves_ext_6
    311          
    312              if( elliptic_curve_len == 0 )
   \       0x94   0x2F00             CMP      R7,#+0
   \       0x96   0xD00F             BEQ.N    ??ssl_write_supported_elliptic_curves_ext_3
    313                  return;
    314          
    315              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SUPPORTED_ELLIPTIC_CURVES >> 8 ) & 0xFF );
   \       0x98   0x2000             MOVS     R0,#+0
   \       0x9A   0x7028             STRB     R0,[R5, #+0]
   \       0x9C   0x1C68             ADDS     R0,R5,#+1
    316              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SUPPORTED_ELLIPTIC_CURVES      ) & 0xFF );
   \       0x9E   0x210A             MOVS     R1,#+10
   \       0xA0   0x7001             STRB     R1,[R0, #+0]
    317          
    318              *p++ = (unsigned char)( ( ( elliptic_curve_len + 2 ) >> 8 ) & 0xFF );
   \       0xA2   0x1CB9             ADDS     R1,R7,#+2
   \       0xA4   0x0A09             LSRS     R1,R1,#+8
   \       0xA6   0x7041             STRB     R1,[R0, #+1]
    319              *p++ = (unsigned char)( ( ( elliptic_curve_len + 2 )      ) & 0xFF );
   \       0xA8   0x1CB9             ADDS     R1,R7,#+2
   \       0xAA   0x7081             STRB     R1,[R0, #+2]
    320          
    321              *p++ = (unsigned char)( ( ( elliptic_curve_len     ) >> 8 ) & 0xFF );
   \       0xAC   0x4639             MOV      R1,R7
   \       0xAE   0x0A09             LSRS     R1,R1,#+8
   \       0xB0   0x70C1             STRB     R1,[R0, #+3]
    322              *p++ = (unsigned char)( ( ( elliptic_curve_len     )      ) & 0xFF );
   \       0xB2   0x7107             STRB     R7,[R0, #+4]
    323          
    324              *olen = 6 + elliptic_curve_len;
   \       0xB4   0x1DBF             ADDS     R7,R7,#+6
   \       0xB6   0x6037             STR      R7,[R6, #+0]
    325          }
   \                     ??ssl_write_supported_elliptic_curves_ext_3: (+1)
   \       0xB8   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   \                     ??ssl_write_supported_elliptic_curves_ext_2: (+1)
   \       0xBC   0x42AF             CMP      R7,R5
   \       0xBE   0xD304             BCC.N    ??ssl_write_supported_elliptic_curves_ext_7
   \       0xC0   0x1B7F             SUBS     R7,R7,R5
   \       0xC2   0xF10A 0x0A06      ADD      R10,R10,#+6
   \       0xC6   0x4557             CMP      R7,R10
   \       0xC8   0xD2D0             BCS.N    ??ssl_write_supported_elliptic_curves_ext_4
   \                     ??ssl_write_supported_elliptic_curves_ext_7: (+1)
   \       0xCA   0x....'....        LDR.W    R0,??DataTable16
   \       0xCE   0x9000             STR      R0,[SP, #+0]
   \       0xD0   0xF240 0x1325      MOVW     R3,#+293
   \       0xD4   0x464A             MOV      R2,R9
   \       0xD6   0x2101             MOVS     R1,#+1
   \       0xD8   0x4620             MOV      R0,R4
   \       0xDA   0x....'....        BL       mbedtls_debug_print_msg
   \       0xDE   0xE7EB             B.N      ??ssl_write_supported_elliptic_curves_ext_3
    326          

   \                                 In section .text, align 2, keep-with-next
    327          static void ssl_write_supported_point_formats_ext( mbedtls_ssl_context *ssl,
    328                                                             unsigned char *buf,
    329                                                             size_t *olen )
    330          {
   \                     ssl_write_supported_point_formats_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4614             MOV      R4,R2
    331              unsigned char *p = buf;
    332              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    333          
    334              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6020             STR      R0,[R4, #+0]
    335          
    336              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding supported_point_formats extension" ) );
   \       0x16   0x....'....        LDR.W    R8,??DataTable13
   \       0x1A   0x....'....        LDR.W    R0,??DataTable19
   \       0x1E   0x9000             STR      R0,[SP, #+0]
   \       0x20   0xF44F 0x73A8      MOV      R3,#+336
   \       0x24   0x4642             MOV      R2,R8
   \       0x26   0x2103             MOVS     R1,#+3
   \       0x28   0x4628             MOV      R0,R5
   \       0x2A   0x....'....        BL       mbedtls_debug_print_msg
    337          
    338              if( end < p || (size_t)( end - p ) < 6 )
   \       0x2E   0x42B7             CMP      R7,R6
   \       0x30   0xD302             BCC.N    ??ssl_write_supported_point_formats_ext_0
   \       0x32   0x1BBF             SUBS     R7,R7,R6
   \       0x34   0x2F06             CMP      R7,#+6
   \       0x36   0xD20A             BCS.N    ??ssl_write_supported_point_formats_ext_1
    339              {
    340                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_supported_point_formats_ext_0: (+1)
   \       0x38   0x....'....        LDR.W    R0,??DataTable16
   \       0x3C   0x9000             STR      R0,[SP, #+0]
   \       0x3E   0xF44F 0x73AA      MOV      R3,#+340
   \       0x42   0x4642             MOV      R2,R8
   \       0x44   0x2101             MOVS     R1,#+1
   \       0x46   0x4628             MOV      R0,R5
   \       0x48   0x....'....        BL       mbedtls_debug_print_msg
    341                  return;
   \       0x4C   0xE00E             B.N      ??ssl_write_supported_point_formats_ext_2
    342              }
    343          
    344              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS >> 8 ) & 0xFF );
   \                     ??ssl_write_supported_point_formats_ext_1: (+1)
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x7030             STRB     R0,[R6, #+0]
   \       0x52   0x1C70             ADDS     R0,R6,#+1
    345              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS      ) & 0xFF );
   \       0x54   0x210B             MOVS     R1,#+11
   \       0x56   0x7001             STRB     R1,[R0, #+0]
    346          
    347              *p++ = 0x00;
   \       0x58   0x2100             MOVS     R1,#+0
   \       0x5A   0x7041             STRB     R1,[R0, #+1]
    348              *p++ = 2;
   \       0x5C   0x2102             MOVS     R1,#+2
   \       0x5E   0x7081             STRB     R1,[R0, #+2]
    349          
    350              *p++ = 1;
   \       0x60   0x2101             MOVS     R1,#+1
   \       0x62   0x70C1             STRB     R1,[R0, #+3]
    351              *p++ = MBEDTLS_ECP_PF_UNCOMPRESSED;
   \       0x64   0x2100             MOVS     R1,#+0
   \       0x66   0x7101             STRB     R1,[R0, #+4]
    352          
    353              *olen = 6;
   \       0x68   0x2006             MOVS     R0,#+6
   \       0x6A   0x6020             STR      R0,[R4, #+0]
    354          }
   \                     ??ssl_write_supported_point_formats_ext_2: (+1)
   \       0x6C   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    355          #endif /* MBEDTLS_ECDH_C || MBEDTLS_ECDSA_C ||
    356                    MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
    357          
    358          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
    359          static void ssl_write_ecjpake_kkpp_ext( mbedtls_ssl_context *ssl,
    360                                                  unsigned char *buf,
    361                                                  size_t *olen )
    362          {
    363              int ret;
    364              unsigned char *p = buf;
    365              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
    366              size_t kkpp_len;
    367          
    368              *olen = 0;
    369          
    370              /* Skip costly extension if we can't use EC J-PAKE anyway */
    371              if( mbedtls_ecjpake_check( &ssl->handshake->ecjpake_ctx ) != 0 )
    372                  return;
    373          
    374              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding ecjpake_kkpp extension" ) );
    375          
    376              if( end - p < 4 )
    377              {
    378                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
    379                  return;
    380              }
    381          
    382              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ECJPAKE_KKPP >> 8 ) & 0xFF );
    383              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ECJPAKE_KKPP      ) & 0xFF );
    384          
    385              /*
    386               * We may need to send ClientHello multiple times for Hello verification.
    387               * We don't want to compute fresh values every time (both for performance
    388               * and consistency reasons), so cache the extension content.
    389               */
    390              if( ssl->handshake->ecjpake_cache == NULL ||
    391                  ssl->handshake->ecjpake_cache_len == 0 )
    392              {
    393                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "generating new ecjpake parameters" ) );
    394          
    395                  ret = mbedtls_ecjpake_write_round_one( &ssl->handshake->ecjpake_ctx,
    396                                                  p + 2, end - p - 2, &kkpp_len,
    397                                                  ssl->conf->f_rng, ssl->conf->p_rng );
    398                  if( ret != 0 )
    399                  {
    400                      MBEDTLS_SSL_DEBUG_RET( 1 , "mbedtls_ecjpake_write_round_one", ret );
    401                      return;
    402                  }
    403          
    404                  ssl->handshake->ecjpake_cache = mbedtls_calloc( 1, kkpp_len );
    405                  if( ssl->handshake->ecjpake_cache == NULL )
    406                  {
    407                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "allocation failed" ) );
    408                      return;
    409                  }
    410          
    411                  memcpy( ssl->handshake->ecjpake_cache, p + 2, kkpp_len );
    412                  ssl->handshake->ecjpake_cache_len = kkpp_len;
    413              }
    414              else
    415              {
    416                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "re-using cached ecjpake parameters" ) );
    417          
    418                  kkpp_len = ssl->handshake->ecjpake_cache_len;
    419          
    420                  if( (size_t)( end - p - 2 ) < kkpp_len )
    421                  {
    422                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
    423                      return;
    424                  }
    425          
    426                  memcpy( p + 2, ssl->handshake->ecjpake_cache, kkpp_len );
    427              }
    428          
    429              *p++ = (unsigned char)( ( kkpp_len >> 8 ) & 0xFF );
    430              *p++ = (unsigned char)( ( kkpp_len      ) & 0xFF );
    431          
    432              *olen = kkpp_len + 4;
    433          }
    434          #endif /* MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
    435          
    436          #if defined(MBEDTLS_SSL_MAX_FRAGMENT_LENGTH)

   \                                 In section .text, align 2, keep-with-next
    437          static void ssl_write_max_fragment_length_ext( mbedtls_ssl_context *ssl,
    438                                                         unsigned char *buf,
    439                                                         size_t *olen )
    440          {
   \                     ssl_write_max_fragment_length_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
    441              unsigned char *p = buf;
    442              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D4 0x00C4      LDR      R0,[R4, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    443          
    444              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6028             STR      R0,[R5, #+0]
    445          
    446              if( ssl->conf->mfl_code == MBEDTLS_SSL_MAX_FRAG_LEN_NONE ) {
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x1C   0xF3C0 0x1082      UBFX     R0,R0,#+6,#+3
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD02D             BEQ.N    ??ssl_write_max_fragment_length_ext_0
    447                  return;
    448              }
    449          
    450              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding max_fragment_length extension" ) );
   \       0x24   0x....'....        LDR.W    R8,??DataTable13
   \       0x28   0x....'....        LDR.W    R0,??DataTable20
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   \       0x2E   0xF44F 0x73E1      MOV      R3,#+450
   \       0x32   0x4642             MOV      R2,R8
   \       0x34   0x2103             MOVS     R1,#+3
   \       0x36   0x4620             MOV      R0,R4
   \       0x38   0x....'....        BL       mbedtls_debug_print_msg
    451          
    452              if( end < p || (size_t)( end - p ) < 5 )
   \       0x3C   0x42B7             CMP      R7,R6
   \       0x3E   0xD302             BCC.N    ??ssl_write_max_fragment_length_ext_1
   \       0x40   0x1BBF             SUBS     R7,R7,R6
   \       0x42   0x2F05             CMP      R7,#+5
   \       0x44   0xD20A             BCS.N    ??ssl_write_max_fragment_length_ext_2
    453              {
    454                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_max_fragment_length_ext_1: (+1)
   \       0x46   0x....'....        LDR.W    R0,??DataTable16
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0xF44F 0x73E3      MOV      R3,#+454
   \       0x50   0x4642             MOV      R2,R8
   \       0x52   0x2101             MOVS     R1,#+1
   \       0x54   0x4620             MOV      R0,R4
   \       0x56   0x....'....        BL       mbedtls_debug_print_msg
    455                  return;
   \       0x5A   0xE011             B.N      ??ssl_write_max_fragment_length_ext_0
    456              }
    457          
    458              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH >> 8 ) & 0xFF );
   \                     ??ssl_write_max_fragment_length_ext_2: (+1)
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x7030             STRB     R0,[R6, #+0]
   \       0x60   0x1C70             ADDS     R0,R6,#+1
    459              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH      ) & 0xFF );
   \       0x62   0x2101             MOVS     R1,#+1
   \       0x64   0x7001             STRB     R1,[R0, #+0]
    460          
    461              *p++ = 0x00;
   \       0x66   0x2100             MOVS     R1,#+0
   \       0x68   0x7041             STRB     R1,[R0, #+1]
    462              *p++ = 1;
   \       0x6A   0x2101             MOVS     R1,#+1
   \       0x6C   0x7081             STRB     R1,[R0, #+2]
    463          
    464              *p++ = ssl->conf->mfl_code;
   \       0x6E   0x6821             LDR      R1,[R4, #+0]
   \       0x70   0xF8D1 0x10CC      LDR      R1,[R1, #+204]
   \       0x74   0x0989             LSRS     R1,R1,#+6
   \       0x76   0xF001 0x0107      AND      R1,R1,#0x7
   \       0x7A   0x70C1             STRB     R1,[R0, #+3]
    465          
    466              *olen = 5;
   \       0x7C   0x2005             MOVS     R0,#+5
   \       0x7E   0x6028             STR      R0,[R5, #+0]
    467          }
   \                     ??ssl_write_max_fragment_length_ext_0: (+1)
   \       0x80   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    468          #endif /* MBEDTLS_SSL_MAX_FRAGMENT_LENGTH */
    469          
    470          #if defined(MBEDTLS_SSL_TRUNCATED_HMAC)

   \                                 In section .text, align 2, keep-with-next
    471          static void ssl_write_truncated_hmac_ext( mbedtls_ssl_context *ssl,
    472                                                    unsigned char *buf, size_t *olen )
    473          {
   \                     ssl_write_truncated_hmac_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4614             MOV      R4,R2
    474              unsigned char *p = buf;
    475              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    476          
    477              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6020             STR      R0,[R4, #+0]
    478          
    479              if( ssl->conf->trunc_hmac == MBEDTLS_SSL_TRUNC_HMAC_DISABLED )
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x1C   0xF3C0 0x3080      UBFX     R0,R0,#+14,#+1
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD025             BEQ.N    ??ssl_write_truncated_hmac_ext_0
    480              {
    481                  return;
    482              }
    483          
    484              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding truncated_hmac extension" ) );
   \       0x24   0x....'....        LDR.W    R8,??DataTable13
   \       0x28   0x....'....        LDR.W    R0,??DataTable20_1
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   \       0x2E   0xF44F 0x73F2      MOV      R3,#+484
   \       0x32   0x4642             MOV      R2,R8
   \       0x34   0x2103             MOVS     R1,#+3
   \       0x36   0x4628             MOV      R0,R5
   \       0x38   0x....'....        BL       mbedtls_debug_print_msg
    485          
    486              if( end < p || (size_t)( end - p ) < 4 )
   \       0x3C   0x42B7             CMP      R7,R6
   \       0x3E   0xD302             BCC.N    ??ssl_write_truncated_hmac_ext_1
   \       0x40   0x1BBF             SUBS     R7,R7,R6
   \       0x42   0x2F04             CMP      R7,#+4
   \       0x44   0xD20A             BCS.N    ??ssl_write_truncated_hmac_ext_2
    487              {
    488                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_truncated_hmac_ext_1: (+1)
   \       0x46   0x....'....        LDR.W    R0,??DataTable16
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0xF44F 0x73F4      MOV      R3,#+488
   \       0x50   0x4642             MOV      R2,R8
   \       0x52   0x2101             MOVS     R1,#+1
   \       0x54   0x4628             MOV      R0,R5
   \       0x56   0x....'....        BL       mbedtls_debug_print_msg
    489                  return;
   \       0x5A   0xE009             B.N      ??ssl_write_truncated_hmac_ext_0
    490              }
    491          
    492              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_TRUNCATED_HMAC >> 8 ) & 0xFF );
   \                     ??ssl_write_truncated_hmac_ext_2: (+1)
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x7030             STRB     R0,[R6, #+0]
   \       0x60   0x1C70             ADDS     R0,R6,#+1
    493              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_TRUNCATED_HMAC      ) & 0xFF );
   \       0x62   0x2104             MOVS     R1,#+4
   \       0x64   0x7001             STRB     R1,[R0, #+0]
    494          
    495              *p++ = 0x00;
   \       0x66   0x2100             MOVS     R1,#+0
   \       0x68   0x7041             STRB     R1,[R0, #+1]
    496              *p++ = 0x00;
   \       0x6A   0x7081             STRB     R1,[R0, #+2]
    497          
    498              *olen = 4;
   \       0x6C   0x2004             MOVS     R0,#+4
   \       0x6E   0x6020             STR      R0,[R4, #+0]
    499          }
   \                     ??ssl_write_truncated_hmac_ext_0: (+1)
   \       0x70   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    500          #endif /* MBEDTLS_SSL_TRUNCATED_HMAC */
    501          
    502          #if defined(MBEDTLS_SSL_ENCRYPT_THEN_MAC)

   \                                 In section .text, align 2, keep-with-next
    503          static void ssl_write_encrypt_then_mac_ext( mbedtls_ssl_context *ssl,
    504                                                 unsigned char *buf, size_t *olen )
    505          {
   \                     ssl_write_encrypt_then_mac_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4614             MOV      R4,R2
    506              unsigned char *p = buf;
    507              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    508          
    509              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6020             STR      R0,[R4, #+0]
    510          
    511              if( ssl->conf->encrypt_then_mac == MBEDTLS_SSL_ETM_DISABLED ||
    512                  ssl->conf->max_minor_ver == MBEDTLS_SSL_MINOR_VERSION_0 )
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x1C   0xF3C0 0x2040      UBFX     R0,R0,#+9,#+1
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD02A             BEQ.N    ??ssl_write_encrypt_then_mac_ext_0
   \       0x24   0x6828             LDR      R0,[R5, #+0]
   \       0x26   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD025             BEQ.N    ??ssl_write_encrypt_then_mac_ext_0
    513              {
    514                  return;
    515              }
    516          
    517              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding encrypt_then_mac "
    518                                  "extension" ) );
   \       0x2E   0x....'....        LDR.W    R8,??DataTable13
   \       0x32   0x....'....        LDR.W    R0,??DataTable20_2
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0xF240 0x2306      MOVW     R3,#+518
   \       0x3C   0x4642             MOV      R2,R8
   \       0x3E   0x2103             MOVS     R1,#+3
   \       0x40   0x4628             MOV      R0,R5
   \       0x42   0x....'....        BL       mbedtls_debug_print_msg
    519          
    520              if( end < p || (size_t)( end - p ) < 4 )
   \       0x46   0x42B7             CMP      R7,R6
   \       0x48   0xD302             BCC.N    ??ssl_write_encrypt_then_mac_ext_1
   \       0x4A   0x1BBF             SUBS     R7,R7,R6
   \       0x4C   0x2F04             CMP      R7,#+4
   \       0x4E   0xD20A             BCS.N    ??ssl_write_encrypt_then_mac_ext_2
    521              {
    522                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_encrypt_then_mac_ext_1: (+1)
   \       0x50   0x....'....        LDR.W    R0,??DataTable16
   \       0x54   0x9000             STR      R0,[SP, #+0]
   \       0x56   0xF240 0x230A      MOVW     R3,#+522
   \       0x5A   0x4642             MOV      R2,R8
   \       0x5C   0x2101             MOVS     R1,#+1
   \       0x5E   0x4628             MOV      R0,R5
   \       0x60   0x....'....        BL       mbedtls_debug_print_msg
    523                  return;
   \       0x64   0xE009             B.N      ??ssl_write_encrypt_then_mac_ext_0
    524              }
    525          
    526              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC >> 8 ) & 0xFF );
   \                     ??ssl_write_encrypt_then_mac_ext_2: (+1)
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0x7030             STRB     R0,[R6, #+0]
   \       0x6A   0x1C70             ADDS     R0,R6,#+1
    527              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC      ) & 0xFF );
   \       0x6C   0x2116             MOVS     R1,#+22
   \       0x6E   0x7001             STRB     R1,[R0, #+0]
    528          
    529              *p++ = 0x00;
   \       0x70   0x2100             MOVS     R1,#+0
   \       0x72   0x7041             STRB     R1,[R0, #+1]
    530              *p++ = 0x00;
   \       0x74   0x7081             STRB     R1,[R0, #+2]
    531          
    532              *olen = 4;
   \       0x76   0x2004             MOVS     R0,#+4
   \       0x78   0x6020             STR      R0,[R4, #+0]
    533          }
   \                     ??ssl_write_encrypt_then_mac_ext_0: (+1)
   \       0x7A   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    534          #endif /* MBEDTLS_SSL_ENCRYPT_THEN_MAC */
    535          
    536          #if defined(MBEDTLS_SSL_EXTENDED_MASTER_SECRET)

   \                                 In section .text, align 2, keep-with-next
    537          static void ssl_write_extended_ms_ext( mbedtls_ssl_context *ssl,
    538                                                 unsigned char *buf, size_t *olen )
    539          {
   \                     ssl_write_extended_ms_ext: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4614             MOV      R4,R2
    540              unsigned char *p = buf;
    541              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    542          
    543              *olen = 0;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x6020             STR      R0,[R4, #+0]
    544          
    545              if( ssl->conf->extended_ms == MBEDTLS_SSL_EXTENDED_MS_DISABLED ||
    546                  ssl->conf->max_minor_ver == MBEDTLS_SSL_MINOR_VERSION_0 )
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x1C   0xF3C0 0x2080      UBFX     R0,R0,#+10,#+1
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD02A             BEQ.N    ??ssl_write_extended_ms_ext_0
   \       0x24   0x6828             LDR      R0,[R5, #+0]
   \       0x26   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD025             BEQ.N    ??ssl_write_extended_ms_ext_0
    547              {
    548                  return;
    549              }
    550          
    551              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding extended_master_secret "
    552                                  "extension" ) );
   \       0x2E   0x....'....        LDR.W    R8,??DataTable13
   \       0x32   0x....'....        LDR.W    R0,??DataTable21
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0xF44F 0x730A      MOV      R3,#+552
   \       0x3C   0x4642             MOV      R2,R8
   \       0x3E   0x2103             MOVS     R1,#+3
   \       0x40   0x4628             MOV      R0,R5
   \       0x42   0x....'....        BL       mbedtls_debug_print_msg
    553          
    554              if( end < p || (size_t)( end - p ) < 4 )
   \       0x46   0x42B7             CMP      R7,R6
   \       0x48   0xD302             BCC.N    ??ssl_write_extended_ms_ext_1
   \       0x4A   0x1BBF             SUBS     R7,R7,R6
   \       0x4C   0x2F04             CMP      R7,#+4
   \       0x4E   0xD20A             BCS.N    ??ssl_write_extended_ms_ext_2
    555              {
    556                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_extended_ms_ext_1: (+1)
   \       0x50   0x....'....        LDR.W    R0,??DataTable16
   \       0x54   0x9000             STR      R0,[SP, #+0]
   \       0x56   0xF44F 0x730B      MOV      R3,#+556
   \       0x5A   0x4642             MOV      R2,R8
   \       0x5C   0x2101             MOVS     R1,#+1
   \       0x5E   0x4628             MOV      R0,R5
   \       0x60   0x....'....        BL       mbedtls_debug_print_msg
    557                  return;
   \       0x64   0xE009             B.N      ??ssl_write_extended_ms_ext_0
    558              }
    559          
    560              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET >> 8 ) & 0xFF );
   \                     ??ssl_write_extended_ms_ext_2: (+1)
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0x7030             STRB     R0,[R6, #+0]
   \       0x6A   0x1C70             ADDS     R0,R6,#+1
    561              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET      ) & 0xFF );
   \       0x6C   0x2117             MOVS     R1,#+23
   \       0x6E   0x7001             STRB     R1,[R0, #+0]
    562          
    563              *p++ = 0x00;
   \       0x70   0x2100             MOVS     R1,#+0
   \       0x72   0x7041             STRB     R1,[R0, #+1]
    564              *p++ = 0x00;
   \       0x74   0x7081             STRB     R1,[R0, #+2]
    565          
    566              *olen = 4;
   \       0x76   0x2004             MOVS     R0,#+4
   \       0x78   0x6020             STR      R0,[R4, #+0]
    567          }
   \                     ??ssl_write_extended_ms_ext_0: (+1)
   \       0x7A   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    568          #endif /* MBEDTLS_SSL_EXTENDED_MASTER_SECRET */
    569          
    570          #if defined(MBEDTLS_SSL_SESSION_TICKETS)

   \                                 In section .text, align 2, keep-with-next
    571          static void ssl_write_session_ticket_ext( mbedtls_ssl_context *ssl,
    572                                                    unsigned char *buf, size_t *olen )
    573          {
   \                     ssl_write_session_ticket_ext: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x4688             MOV      R8,R1
   \        0x8   0x4616             MOV      R6,R2
    574              unsigned char *p = buf;
    575              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \        0xE   0xF500 0x5920      ADD      R9,R0,#+10240
    576              size_t tlen = ssl->session_negotiate->ticket_len;
   \       0x12   0x6BA8             LDR      R0,[R5, #+56]
   \       0x14   0x6E84             LDR      R4,[R0, #+104]
    577          
    578              *olen = 0;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x6030             STR      R0,[R6, #+0]
    579          
    580              if( ssl->conf->session_tickets == MBEDTLS_SSL_SESSION_TICKETS_DISABLED )
   \       0x1A   0x6828             LDR      R0,[R5, #+0]
   \       0x1C   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x20   0xF3C0 0x30C0      UBFX     R0,R0,#+15,#+1
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD046             BEQ.N    ??ssl_write_session_ticket_ext_0
    581              {
    582                  return;
    583              }
    584          
    585              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding session ticket extension" ) );
   \       0x28   0x....'....        LDR.W    R7,??DataTable13
   \       0x2C   0x....'....        LDR.W    R0,??DataTable21_1
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0xF240 0x2349      MOVW     R3,#+585
   \       0x36   0x463A             MOV      R2,R7
   \       0x38   0x2103             MOVS     R1,#+3
   \       0x3A   0x4628             MOV      R0,R5
   \       0x3C   0x....'....        BL       mbedtls_debug_print_msg
    586          
    587              if( end < p || (size_t)( end - p ) < 4 + tlen )
   \       0x40   0x45C1             CMP      R9,R8
   \       0x42   0xD304             BCC.N    ??ssl_write_session_ticket_ext_1
   \       0x44   0xEBA9 0x0908      SUB      R9,R9,R8
   \       0x48   0x1D20             ADDS     R0,R4,#+4
   \       0x4A   0x4581             CMP      R9,R0
   \       0x4C   0xD20A             BCS.N    ??ssl_write_session_ticket_ext_2
    588              {
    589                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_session_ticket_ext_1: (+1)
   \       0x4E   0x....'....        LDR.W    R0,??DataTable16
   \       0x52   0x9000             STR      R0,[SP, #+0]
   \       0x54   0xF240 0x234D      MOVW     R3,#+589
   \       0x58   0x463A             MOV      R2,R7
   \       0x5A   0x2101             MOVS     R1,#+1
   \       0x5C   0x4628             MOV      R0,R5
   \       0x5E   0x....'....        BL       mbedtls_debug_print_msg
    590                  return;
   \       0x62   0xE028             B.N      ??ssl_write_session_ticket_ext_0
    591              }
    592          
    593              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SESSION_TICKET >> 8 ) & 0xFF );
   \                     ??ssl_write_session_ticket_ext_2: (+1)
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xF888 0x0000      STRB     R0,[R8, #+0]
   \       0x6A   0xF108 0x0001      ADD      R0,R8,#+1
    594              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_SESSION_TICKET      ) & 0xFF );
   \       0x6E   0x2123             MOVS     R1,#+35
   \       0x70   0x7001             STRB     R1,[R0, #+0]
    595          
    596              *p++ = (unsigned char)( ( tlen >> 8 ) & 0xFF );
   \       0x72   0x4621             MOV      R1,R4
   \       0x74   0x0A09             LSRS     R1,R1,#+8
   \       0x76   0x7041             STRB     R1,[R0, #+1]
    597              *p++ = (unsigned char)( ( tlen      ) & 0xFF );
   \       0x78   0x7084             STRB     R4,[R0, #+2]
   \       0x7A   0xF100 0x0803      ADD      R8,R0,#+3
    598          
    599              *olen = 4;
   \       0x7E   0x2004             MOVS     R0,#+4
   \       0x80   0x6030             STR      R0,[R6, #+0]
    600          
    601              if( ssl->session_negotiate->ticket == NULL || tlen == 0 )
   \       0x82   0x6BA8             LDR      R0,[R5, #+56]
   \       0x84   0x6E40             LDR      R0,[R0, #+100]
   \       0x86   0x2800             CMP      R0,#+0
   \       0x88   0xD015             BEQ.N    ??ssl_write_session_ticket_ext_0
   \       0x8A   0x2C00             CMP      R4,#+0
   \       0x8C   0xD013             BEQ.N    ??ssl_write_session_ticket_ext_0
    602              {
    603                  return;
    604              }
    605          
    606              MBEDTLS_SSL_DEBUG_MSG( 3, ( "sending session ticket of length %d", tlen ) );
   \       0x8E   0x9401             STR      R4,[SP, #+4]
   \       0x90   0x....'....        LDR.W    R0,??DataTable21_2
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0xF240 0x235E      MOVW     R3,#+606
   \       0x9A   0x463A             MOV      R2,R7
   \       0x9C   0x2103             MOVS     R1,#+3
   \       0x9E   0x4628             MOV      R0,R5
   \       0xA0   0x....'....        BL       mbedtls_debug_print_msg
    607          
    608              memcpy( p, ssl->session_negotiate->ticket, tlen );
   \       0xA4   0x4622             MOV      R2,R4
   \       0xA6   0x6BA8             LDR      R0,[R5, #+56]
   \       0xA8   0x6E41             LDR      R1,[R0, #+100]
   \       0xAA   0x4640             MOV      R0,R8
   \       0xAC   0x....'....        BL       __aeabi_memcpy
    609          
    610              *olen += tlen;
   \       0xB0   0x6830             LDR      R0,[R6, #+0]
   \       0xB2   0x1824             ADDS     R4,R4,R0
   \       0xB4   0x6034             STR      R4,[R6, #+0]
    611          }
   \                     ??ssl_write_session_ticket_ext_0: (+1)
   \       0xB6   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return
    612          #endif /* MBEDTLS_SSL_SESSION_TICKETS */
    613          
    614          #if defined(MBEDTLS_SSL_ALPN)

   \                                 In section .text, align 2, keep-with-next
    615          static void ssl_write_alpn_ext( mbedtls_ssl_context *ssl,
    616                                          unsigned char *buf, size_t *olen )
    617          {
   \                     ssl_write_alpn_ext: (+1)
   \        0x0   0xE92D 0x47FC      PUSH     {R2-R10,LR}
   \        0x4   0x4606             MOV      R6,R0
   \        0x6   0x460C             MOV      R4,R1
   \        0x8   0x4615             MOV      R5,R2
    618              unsigned char *p = buf;
    619              const unsigned char *end = ssl->out_msg + MBEDTLS_SSL_OUT_CONTENT_LEN;
   \        0xA   0xF8D6 0x00C4      LDR      R0,[R6, #+196]
   \        0xE   0xF500 0x5720      ADD      R7,R0,#+10240
    620              size_t alpnlen = 0;
   \       0x12   0xF04F 0x0800      MOV      R8,#+0
    621              const char **cur;
    622          
    623              *olen = 0;
   \       0x16   0x4640             MOV      R0,R8
   \       0x18   0x6028             STR      R0,[R5, #+0]
    624          
    625              if( ssl->conf->alpn_list == NULL )
   \       0x1A   0x6830             LDR      R0,[R6, #+0]
   \       0x1C   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD055             BEQ.N    ??ssl_write_alpn_ext_0
    626              {
    627                  return;
    628              }
    629          
    630              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, adding alpn extension" ) );
   \       0x24   0x....'....        LDR.W    R9,??DataTable13
   \       0x28   0x....'....        LDR.W    R0,??DataTable21_3
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   \       0x2E   0xF240 0x2376      MOVW     R3,#+630
   \       0x32   0x464A             MOV      R2,R9
   \       0x34   0x2103             MOVS     R1,#+3
   \       0x36   0x4630             MOV      R0,R6
   \       0x38   0x....'....        BL       mbedtls_debug_print_msg
    631          
    632              for( cur = ssl->conf->alpn_list; *cur != NULL; cur++ )
   \       0x3C   0x6830             LDR      R0,[R6, #+0]
   \       0x3E   0xF8D0 0xA0A4      LDR      R10,[R0, #+164]
   \       0x42   0xE006             B.N      ??ssl_write_alpn_ext_1
    633                  alpnlen += (unsigned char)( strlen( *cur ) & 0xFF ) + 1;
   \                     ??ssl_write_alpn_ext_2: (+1)
   \       0x44   0xF85A 0x0B04      LDR      R0,[R10], #+4
   \       0x48   0x....'....        BL       strlen
   \       0x4C   0xB2C0             UXTB     R0,R0
   \       0x4E   0x1C40             ADDS     R0,R0,#+1
   \       0x50   0x4480             ADD      R8,R0,R8
   \                     ??ssl_write_alpn_ext_1: (+1)
   \       0x52   0xF8DA 0x0000      LDR      R0,[R10, #+0]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD1F4             BNE.N    ??ssl_write_alpn_ext_2
    634          
    635              if( end < p || (size_t)( end - p ) < 6 + alpnlen )
   \       0x5A   0x42A7             CMP      R7,R4
   \       0x5C   0xD304             BCC.N    ??ssl_write_alpn_ext_3
   \       0x5E   0x1B3F             SUBS     R7,R7,R4
   \       0x60   0xF108 0x0806      ADD      R8,R8,#+6
   \       0x64   0x4547             CMP      R7,R8
   \       0x66   0xD20A             BCS.N    ??ssl_write_alpn_ext_4
    636              {
    637                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small" ) );
   \                     ??ssl_write_alpn_ext_3: (+1)
   \       0x68   0x....'....        LDR.W    R0,??DataTable16
   \       0x6C   0x9000             STR      R0,[SP, #+0]
   \       0x6E   0xF240 0x237D      MOVW     R3,#+637
   \       0x72   0x464A             MOV      R2,R9
   \       0x74   0x2101             MOVS     R1,#+1
   \       0x76   0x4630             MOV      R0,R6
   \       0x78   0x....'....        BL       mbedtls_debug_print_msg
    638                  return;
   \       0x7C   0xE028             B.N      ??ssl_write_alpn_ext_0
    639              }
    640          
    641              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ALPN >> 8 ) & 0xFF );
   \                     ??ssl_write_alpn_ext_4: (+1)
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x7020             STRB     R0,[R4, #+0]
   \       0x82   0x1C67             ADDS     R7,R4,#+1
    642              *p++ = (unsigned char)( ( MBEDTLS_TLS_EXT_ALPN      ) & 0xFF );
   \       0x84   0x2010             MOVS     R0,#+16
   \       0x86   0xF807 0x0B05      STRB     R0,[R7], #+5
    643          
    644              /*
    645               * opaque ProtocolName<1..2^8-1>;
    646               *
    647               * struct {
    648               *     ProtocolName protocol_name_list<2..2^16-1>
    649               * } ProtocolNameList;
    650               */
    651          
    652              /* Skip writing extension and list length for now */
    653              p += 4;
    654          
    655              for( cur = ssl->conf->alpn_list; *cur != NULL; cur++ )
   \       0x8A   0x6830             LDR      R0,[R6, #+0]
   \       0x8C   0xF8D0 0x60A4      LDR      R6,[R0, #+164]
   \       0x90   0xE00B             B.N      ??ssl_write_alpn_ext_5
    656              {
    657                  *p = (unsigned char)( strlen( *cur ) & 0xFF );
   \                     ??ssl_write_alpn_ext_6: (+1)
   \       0x92   0x....'....        BL       strlen
   \       0x96   0x7038             STRB     R0,[R7, #+0]
    658                  memcpy( p + 1, *cur, *p );
   \       0x98   0x783A             LDRB     R2,[R7, #+0]
   \       0x9A   0xF856 0x1B04      LDR      R1,[R6], #+4
   \       0x9E   0x1C78             ADDS     R0,R7,#+1
   \       0xA0   0x....'....        BL       __aeabi_memcpy
    659                  p += 1 + *p;
   \       0xA4   0x7838             LDRB     R0,[R7, #+0]
   \       0xA6   0x4438             ADD      R0,R7,R0
   \       0xA8   0x1C47             ADDS     R7,R0,#+1
    660              }
   \                     ??ssl_write_alpn_ext_5: (+1)
   \       0xAA   0x6830             LDR      R0,[R6, #+0]
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD1F0             BNE.N    ??ssl_write_alpn_ext_6
    661          
    662              *olen = p - buf;
   \       0xB0   0x1B3F             SUBS     R7,R7,R4
   \       0xB2   0x602F             STR      R7,[R5, #+0]
    663          
    664              /* List length = olen - 2 (ext_type) - 2 (ext_len) - 2 (list_len) */
    665              buf[4] = (unsigned char)( ( ( *olen - 6 ) >> 8 ) & 0xFF );
   \       0xB4   0x4638             MOV      R0,R7
   \       0xB6   0x1F80             SUBS     R0,R0,#+6
   \       0xB8   0x0A00             LSRS     R0,R0,#+8
   \       0xBA   0x7120             STRB     R0,[R4, #+4]
    666              buf[5] = (unsigned char)( ( ( *olen - 6 )      ) & 0xFF );
   \       0xBC   0x6828             LDR      R0,[R5, #+0]
   \       0xBE   0x1F80             SUBS     R0,R0,#+6
   \       0xC0   0x7160             STRB     R0,[R4, #+5]
    667          
    668              /* Extension length = olen - 2 (ext_type) - 2 (ext_len) */
    669              buf[2] = (unsigned char)( ( ( *olen - 4 ) >> 8 ) & 0xFF );
   \       0xC2   0x6828             LDR      R0,[R5, #+0]
   \       0xC4   0x1F00             SUBS     R0,R0,#+4
   \       0xC6   0x0A00             LSRS     R0,R0,#+8
   \       0xC8   0x70A0             STRB     R0,[R4, #+2]
    670              buf[3] = (unsigned char)( ( ( *olen - 4 )      ) & 0xFF );
   \       0xCA   0x6828             LDR      R0,[R5, #+0]
   \       0xCC   0x1F00             SUBS     R0,R0,#+4
   \       0xCE   0x70E0             STRB     R0,[R4, #+3]
    671          }
   \                     ??ssl_write_alpn_ext_0: (+1)
   \       0xD0   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
    672          #endif /* MBEDTLS_SSL_ALPN */
    673          
    674          /*
    675           * Generate random bytes for ClientHello
    676           */

   \                                 In section .text, align 2, keep-with-next
    677          static int ssl_generate_random( mbedtls_ssl_context *ssl )
    678          {
   \                     ssl_generate_random: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
    679              int ret;
    680              unsigned char *p = ssl->handshake->randbytes;
   \        0x4   0x6BE0             LDR      R0,[R4, #+60]
   \        0x6   0xF200 0x455C      ADDW     R5,R0,#+1116
    681          #if defined(MBEDTLS_HAVE_TIME)
    682              mbedtls_time_t t;
    683          #endif
    684          
    685              /*
    686               * When responding to a verify request, MUST reuse random (RFC 6347 4.2.1)
    687               */
    688          #if defined(MBEDTLS_SSL_PROTO_DTLS)
    689              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM &&
    690                  ssl->handshake->verify_cookie != NULL )
   \        0xA   0x6820             LDR      R0,[R4, #+0]
   \        0xC   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x10   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD006             BEQ.N    ??ssl_generate_random_0
   \       0x18   0x6BE0             LDR      R0,[R4, #+60]
   \       0x1A   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD001             BEQ.N    ??ssl_generate_random_0
    691              {
    692                  return( 0 );
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0xBD32             POP      {R1,R4,R5,PC}
    693              }
    694          #endif
    695          
    696          #if defined(MBEDTLS_HAVE_TIME)
    697              t = mbedtls_time( NULL );
    698              *p++ = (unsigned char)( t >> 24 );
    699              *p++ = (unsigned char)( t >> 16 );
    700              *p++ = (unsigned char)( t >>  8 );
    701              *p++ = (unsigned char)( t       );
    702          
    703              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, current time: %lu", t ) );
    704          #else
    705              if( ( ret = ssl->conf->f_rng( ssl->conf->p_rng, p, 4 ) ) != 0 )
   \                     ??ssl_generate_random_0: (+1)
   \       0x26   0x2204             MOVS     R2,#+4
   \       0x28   0x4629             MOV      R1,R5
   \       0x2A   0x6820             LDR      R0,[R4, #+0]
   \       0x2C   0x69C0             LDR      R0,[R0, #+28]
   \       0x2E   0x6823             LDR      R3,[R4, #+0]
   \       0x30   0x699B             LDR      R3,[R3, #+24]
   \       0x32   0x4798             BLX      R3
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD109             BNE.N    ??ssl_generate_random_1
    706                  return( ret );
    707          
    708              p += 4;
    709          #endif /* MBEDTLS_HAVE_TIME */
    710          
    711              if( ( ret = ssl->conf->f_rng( ssl->conf->p_rng, p, 28 ) ) != 0 )
   \       0x38   0x221C             MOVS     R2,#+28
   \       0x3A   0x1D29             ADDS     R1,R5,#+4
   \       0x3C   0x6820             LDR      R0,[R4, #+0]
   \       0x3E   0x69C0             LDR      R0,[R0, #+28]
   \       0x40   0x6823             LDR      R3,[R4, #+0]
   \       0x42   0x699B             LDR      R3,[R3, #+24]
   \       0x44   0x4798             BLX      R3
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD100             BNE.N    ??ssl_generate_random_1
    712                  return( ret );
    713          
    714              return( 0 );
   \       0x4A   0x2000             MOVS     R0,#+0
   \                     ??ssl_generate_random_1: (+1)
   \       0x4C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    715          }
    716          
    717          /**
    718           * \brief           Validate cipher suite against config in SSL context.
    719           *
    720           * \param suite_info    cipher suite to validate
    721           * \param ssl           SSL context
    722           * \param min_minor_ver Minimal minor version to accept a cipher suite
    723           * \param max_minor_ver Maximal minor version to accept a cipher suite
    724           *
    725           * \return          0 if valid, else 1
    726           */

   \                                 In section .text, align 2, keep-with-next
    727          static int ssl_validate_ciphersuite( const mbedtls_ssl_ciphersuite_t * suite_info,
    728                                               const mbedtls_ssl_context * ssl,
    729                                               int min_minor_ver, int max_minor_ver )
    730          {
   \                     ssl_validate_ciphersuite: (+1)
   \        0x0   0xB410             PUSH     {R4}
    731              (void) ssl;
    732              if( suite_info == NULL )
   \        0x2   0x2800             CMP      R0,#+0
   \        0x4   0xD00F             BEQ.N    ??ssl_validate_ciphersuite_0
    733                  return( 1 );
    734          
    735              if( suite_info->min_minor_ver > max_minor_ver ||
    736                      suite_info->max_minor_ver < min_minor_ver )
   \        0x6   0x6904             LDR      R4,[R0, #+16]
   \        0x8   0x42A3             CMP      R3,R4
   \        0xA   0xDB0C             BLT.N    ??ssl_validate_ciphersuite_0
   \        0xC   0x6983             LDR      R3,[R0, #+24]
   \        0xE   0x4293             CMP      R3,R2
   \       0x10   0xDB09             BLT.N    ??ssl_validate_ciphersuite_0
    737                  return( 1 );
    738          
    739          #if defined(MBEDTLS_SSL_PROTO_DTLS)
    740              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM &&
    741                      ( suite_info->flags & MBEDTLS_CIPHERSUITE_NODTLS ) )
   \       0x12   0x6809             LDR      R1,[R1, #+0]
   \       0x14   0xF8D1 0x10CC      LDR      R1,[R1, #+204]
   \       0x18   0xF3C1 0x0140      UBFX     R1,R1,#+1,#+1
   \       0x1C   0x2900             CMP      R1,#+0
   \       0x1E   0xD004             BEQ.N    ??ssl_validate_ciphersuite_1
   \       0x20   0x7F00             LDRB     R0,[R0, #+28]
   \       0x22   0x0740             LSLS     R0,R0,#+29
   \       0x24   0xD501             BPL.N    ??ssl_validate_ciphersuite_1
    742                  return( 1 );
   \                     ??ssl_validate_ciphersuite_0: (+1)
   \       0x26   0x2001             MOVS     R0,#+1
   \       0x28   0xE000             B.N      ??ssl_validate_ciphersuite_2
    743          #endif
    744          
    745          #if defined(MBEDTLS_ARC4_C)
    746              if( ssl->conf->arc4_disabled == MBEDTLS_SSL_ARC4_DISABLED &&
    747                      suite_info->cipher == MBEDTLS_CIPHER_ARC4_128 )
    748                  return( 1 );
    749          #endif
    750          
    751          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
    752              if( suite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE &&
    753                      mbedtls_ecjpake_check( &ssl->handshake->ecjpake_ctx ) != 0 )
    754                  return( 1 );
    755          #endif
    756          
    757              return( 0 );
   \                     ??ssl_validate_ciphersuite_1: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \                     ??ssl_validate_ciphersuite_2: (+1)
   \       0x2C   0xBC10             POP      {R4}
   \       0x2E   0x4770             BX       LR               ;; return
    758          }
    759          

   \                                 In section .text, align 2, keep-with-next
    760          static int ssl_write_client_hello( mbedtls_ssl_context *ssl )
    761          {
   \                     ssl_write_client_hello: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x4605             MOV      R5,R0
    762              int ret;
    763              size_t i, n, olen, ext_len = 0;
    764              unsigned char *buf;
    765              unsigned char *p, *q;
    766              unsigned char offer_compress;
    767              const int *ciphersuites;
    768              const mbedtls_ssl_ciphersuite_t *ciphersuite_info;
    769          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
    770              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
    771              int uses_ec = 0;
   \        0x8   0x2400             MOVS     R4,#+0
    772          #endif
    773          
    774              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> write client hello" ) );
   \        0xA   0x....'....        LDR.W    R6,??DataTable13
   \        0xE   0x....'....        LDR.W    R0,??DataTable21_4
   \       0x12   0x9000             STR      R0,[SP, #+0]
   \       0x14   0xF240 0x3306      MOVW     R3,#+774
   \       0x18   0x4632             MOV      R2,R6
   \       0x1A   0x2102             MOVS     R1,#+2
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x....'....        BL       mbedtls_debug_print_msg
    775          
    776              if( ssl->conf->f_rng == NULL )
   \       0x22   0x6828             LDR      R0,[R5, #+0]
   \       0x24   0x6980             LDR      R0,[R0, #+24]
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD10C             BNE.N    ??ssl_write_client_hello_0
    777              {
    778                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "no RNG provided") );
   \       0x2A   0x....'....        LDR.W    R0,??DataTable21_5
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0xF240 0x330A      MOVW     R3,#+778
   \       0x34   0x4632             MOV      R2,R6
   \       0x36   0x2101             MOVS     R1,#+1
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0x....'....        BL       mbedtls_debug_print_msg
    779                  return( MBEDTLS_ERR_SSL_NO_RNG );
   \       0x3E   0x....'....        LDR.W    R0,??DataTable21_6  ;; 0xffff8c00
   \       0x42   0xE258             B.N      ??ssl_write_client_hello_1
    780              }
    781          
    782          #if defined(MBEDTLS_SSL_RENEGOTIATION)
    783              if( ssl->renego_status == MBEDTLS_SSL_INITIAL_HANDSHAKE )
   \                     ??ssl_write_client_hello_0: (+1)
   \       0x44   0x68A8             LDR      R0,[R5, #+8]
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD107             BNE.N    ??ssl_write_client_hello_2
    784          #endif
    785              {
    786                  ssl->major_ver = ssl->conf->min_major_ver;
   \       0x4A   0x6828             LDR      R0,[R5, #+0]
   \       0x4C   0xF890 0x00CA      LDRB     R0,[R0, #+202]
   \       0x50   0x6128             STR      R0,[R5, #+16]
    787                  ssl->minor_ver = ssl->conf->min_minor_ver;
   \       0x52   0x6828             LDR      R0,[R5, #+0]
   \       0x54   0xF890 0x00CB      LDRB     R0,[R0, #+203]
   \       0x58   0x6168             STR      R0,[R5, #+20]
    788              }
    789          
    790              if( ssl->conf->max_major_ver == 0 )
   \                     ??ssl_write_client_hello_2: (+1)
   \       0x5A   0x6828             LDR      R0,[R5, #+0]
   \       0x5C   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD10C             BNE.N    ??ssl_write_client_hello_3
    791              {
    792                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "configured max major version is invalid, "
    793                                      "consider using mbedtls_ssl_config_defaults()" ) );
   \       0x64   0x....'....        LDR.W    R0,??DataTable21_7
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0xF240 0x3319      MOVW     R3,#+793
   \       0x6E   0x4632             MOV      R2,R6
   \       0x70   0x2101             MOVS     R1,#+1
   \       0x72   0x4628             MOV      R0,R5
   \       0x74   0x....'....        BL       mbedtls_debug_print_msg
    794                  return( MBEDTLS_ERR_SSL_BAD_INPUT_DATA );
   \       0x78   0x....'....        LDR.W    R0,??DataTable21_8  ;; 0xffff8f00
   \       0x7C   0xE23B             B.N      ??ssl_write_client_hello_1
    795              }
    796          
    797              /*
    798               *     0  .   0   handshake type
    799               *     1  .   3   handshake length
    800               *     4  .   5   highest version supported
    801               *     6  .   9   current UNIX time
    802               *    10  .  37   random bytes
    803               */
    804              buf = ssl->out_msg;
   \                     ??ssl_write_client_hello_3: (+1)
   \       0x7E   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \       0x82   0x9004             STR      R0,[SP, #+16]
    805              p = buf + 4;
   \       0x84   0x1D07             ADDS     R7,R0,#+4
    806          
    807              mbedtls_ssl_write_version( ssl->conf->max_major_ver, ssl->conf->max_minor_ver,
    808                                 ssl->conf->transport, p );
   \       0x86   0x463B             MOV      R3,R7
   \       0x88   0x6828             LDR      R0,[R5, #+0]
   \       0x8A   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x8E   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \       0x92   0x6828             LDR      R0,[R5, #+0]
   \       0x94   0xF890 0x10C9      LDRB     R1,[R0, #+201]
   \       0x98   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \       0x9C   0x....'....        BL       mbedtls_ssl_write_version
    809              p += 2;
   \       0xA0   0xF107 0x0802      ADD      R8,R7,#+2
    810          
    811              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, max version: [%d:%d]",
    812                             buf[4], buf[5] ) );
   \       0xA4   0x9804             LDR      R0,[SP, #+16]
   \       0xA6   0x7940             LDRB     R0,[R0, #+5]
   \       0xA8   0x9002             STR      R0,[SP, #+8]
   \       0xAA   0x9804             LDR      R0,[SP, #+16]
   \       0xAC   0x7900             LDRB     R0,[R0, #+4]
   \       0xAE   0x9001             STR      R0,[SP, #+4]
   \       0xB0   0x....'....        LDR.W    R0,??DataTable21_9
   \       0xB4   0x9000             STR      R0,[SP, #+0]
   \       0xB6   0xF44F 0x734B      MOV      R3,#+812
   \       0xBA   0x4632             MOV      R2,R6
   \       0xBC   0x2103             MOVS     R1,#+3
   \       0xBE   0x4628             MOV      R0,R5
   \       0xC0   0x....'....        BL       mbedtls_debug_print_msg
    813          
    814              if( ( ret = ssl_generate_random( ssl ) ) != 0 )
   \       0xC4   0x4628             MOV      R0,R5
   \       0xC6   0x....'....        BL       ssl_generate_random
   \       0xCA   0x0007             MOVS     R7,R0
   \       0xCC   0xD00C             BEQ.N    ??ssl_write_client_hello_4
    815              {
    816                  MBEDTLS_SSL_DEBUG_RET( 1, "ssl_generate_random", ret );
   \       0xCE   0x9701             STR      R7,[SP, #+4]
   \       0xD0   0x....'....        LDR.W    R0,??DataTable21_10
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0xF44F 0x734C      MOV      R3,#+816
   \       0xDA   0x4632             MOV      R2,R6
   \       0xDC   0x2101             MOVS     R1,#+1
   \       0xDE   0x4628             MOV      R0,R5
   \       0xE0   0x....'....        BL       mbedtls_debug_print_ret
    817                  return( ret );
   \       0xE4   0x4638             MOV      R0,R7
   \       0xE6   0xE206             B.N      ??ssl_write_client_hello_1
    818              }
    819          
    820              memcpy( p, ssl->handshake->randbytes, 32 );
   \                     ??ssl_write_client_hello_4: (+1)
   \       0xE8   0x2220             MOVS     R2,#+32
   \       0xEA   0x6BE8             LDR      R0,[R5, #+60]
   \       0xEC   0xF200 0x415C      ADDW     R1,R0,#+1116
   \       0xF0   0x4640             MOV      R0,R8
   \       0xF2   0x....'....        BL       __aeabi_memcpy
    821              MBEDTLS_SSL_DEBUG_BUF( 3, "client hello, random bytes", p, 32 );
   \       0xF6   0x2020             MOVS     R0,#+32
   \       0xF8   0x9002             STR      R0,[SP, #+8]
   \       0xFA   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \       0xFE   0x....'....        LDR.W    R0,??DataTable21_11
   \      0x102   0x9000             STR      R0,[SP, #+0]
   \      0x104   0xF240 0x3335      MOVW     R3,#+821
   \      0x108   0x4632             MOV      R2,R6
   \      0x10A   0x2103             MOVS     R1,#+3
   \      0x10C   0x4628             MOV      R0,R5
   \      0x10E   0x....'....        BL       mbedtls_debug_print_buf
    822              p += 32;
    823          
    824              /*
    825               *    38  .  38   session id length
    826               *    39  . 39+n  session id
    827               *   39+n . 39+n  DTLS only: cookie length (1 byte)
    828               *   40+n .  ..   DTSL only: cookie
    829               *   ..   . ..    ciphersuitelist length (2 bytes)
    830               *   ..   . ..    ciphersuitelist
    831               *   ..   . ..    compression methods length (1 byte)
    832               *   ..   . ..    compression methods
    833               *   ..   . ..    extensions length (2 bytes)
    834               *   ..   . ..    extensions
    835               */
    836              n = ssl->session_negotiate->id_len;
   \      0x112   0x6BA8             LDR      R0,[R5, #+56]
   \      0x114   0x6887             LDR      R7,[R0, #+8]
    837          
    838              if( n < 16 || n > 32 ||
    839          #if defined(MBEDTLS_SSL_RENEGOTIATION)
    840                  ssl->renego_status != MBEDTLS_SSL_INITIAL_HANDSHAKE ||
    841          #endif
    842                  ssl->handshake->resume == 0 )
   \      0x116   0xF1A7 0x0010      SUB      R0,R7,#+16
   \      0x11A   0x2811             CMP      R0,#+17
   \      0x11C   0xD207             BCS.N    ??ssl_write_client_hello_5
   \      0x11E   0x68A8             LDR      R0,[R5, #+8]
   \      0x120   0x2800             CMP      R0,#+0
   \      0x122   0xD104             BNE.N    ??ssl_write_client_hello_5
   \      0x124   0x6BE8             LDR      R0,[R5, #+60]
   \      0x126   0xF8D0 0x06C0      LDR      R0,[R0, #+1728]
   \      0x12A   0x2800             CMP      R0,#+0
   \      0x12C   0xD100             BNE.N    ??ssl_write_client_hello_6
    843              {
    844                  n = 0;
   \                     ??ssl_write_client_hello_5: (+1)
   \      0x12E   0x4627             MOV      R7,R4
    845              }
    846          
    847          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
    848              /*
    849               * RFC 5077 section 3.4: "When presenting a ticket, the client MAY
    850               * generate and include a Session ID in the TLS ClientHello."
    851               */
    852          #if defined(MBEDTLS_SSL_RENEGOTIATION)
    853              if( ssl->renego_status == MBEDTLS_SSL_INITIAL_HANDSHAKE )
   \                     ??ssl_write_client_hello_6: (+1)
   \      0x130   0x68A8             LDR      R0,[R5, #+8]
   \      0x132   0x2800             CMP      R0,#+0
   \      0x134   0xD117             BNE.N    ??ssl_write_client_hello_7
    854          #endif
    855              {
    856                  if( ssl->session_negotiate->ticket != NULL &&
    857                          ssl->session_negotiate->ticket_len != 0 )
   \      0x136   0x6BA8             LDR      R0,[R5, #+56]
   \      0x138   0x6E40             LDR      R0,[R0, #+100]
   \      0x13A   0x2800             CMP      R0,#+0
   \      0x13C   0xD013             BEQ.N    ??ssl_write_client_hello_7
   \      0x13E   0x6BA8             LDR      R0,[R5, #+56]
   \      0x140   0x6E80             LDR      R0,[R0, #+104]
   \      0x142   0x2800             CMP      R0,#+0
   \      0x144   0xD00F             BEQ.N    ??ssl_write_client_hello_7
    858                  {
    859                      ret = ssl->conf->f_rng( ssl->conf->p_rng, ssl->session_negotiate->id, 32 );
   \      0x146   0x2220             MOVS     R2,#+32
   \      0x148   0x6BA8             LDR      R0,[R5, #+56]
   \      0x14A   0xF100 0x010C      ADD      R1,R0,#+12
   \      0x14E   0x6828             LDR      R0,[R5, #+0]
   \      0x150   0x69C0             LDR      R0,[R0, #+28]
   \      0x152   0x682B             LDR      R3,[R5, #+0]
   \      0x154   0x699B             LDR      R3,[R3, #+24]
   \      0x156   0x4798             BLX      R3
    860          
    861                      if( ret != 0 )
   \      0x158   0x2800             CMP      R0,#+0
   \      0x15A   0xF040 0x81CC      BNE.W    ??ssl_write_client_hello_1
    862                          return( ret );
    863          
    864                      ssl->session_negotiate->id_len = n = 32;
   \      0x15E   0x2720             MOVS     R7,#+32
   \      0x160   0x4638             MOV      R0,R7
   \      0x162   0x6BA9             LDR      R1,[R5, #+56]
   \      0x164   0x6088             STR      R0,[R1, #+8]
    865                  }
    866              }
    867          #endif /* MBEDTLS_SSL_SESSION_TICKETS */
    868          
    869              *p++ = (unsigned char) n;
   \                     ??ssl_write_client_hello_7: (+1)
   \      0x166   0xF888 0x7020      STRB     R7,[R8, #+32]
   \      0x16A   0xF108 0x0821      ADD      R8,R8,#+33
    870          
    871              for( i = 0; i < n; i++ )
   \      0x16E   0x4620             MOV      R0,R4
   \      0x170   0xE005             B.N      ??ssl_write_client_hello_8
    872                  *p++ = ssl->session_negotiate->id[i];
   \                     ??ssl_write_client_hello_9: (+1)
   \      0x172   0x6BA9             LDR      R1,[R5, #+56]
   \      0x174   0x4401             ADD      R1,R1,R0
   \      0x176   0x7B09             LDRB     R1,[R1, #+12]
   \      0x178   0xF808 0x1B01      STRB     R1,[R8], #+1
   \      0x17C   0x1C40             ADDS     R0,R0,#+1
   \                     ??ssl_write_client_hello_8: (+1)
   \      0x17E   0x42B8             CMP      R0,R7
   \      0x180   0xD3F7             BCC.N    ??ssl_write_client_hello_9
    873          
    874              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, session id len.: %d", n ) );
   \      0x182   0x9701             STR      R7,[SP, #+4]
   \      0x184   0x....'....        LDR.W    R0,??DataTable21_12
   \      0x188   0x9000             STR      R0,[SP, #+0]
   \      0x18A   0xF240 0x336A      MOVW     R3,#+874
   \      0x18E   0x4632             MOV      R2,R6
   \      0x190   0x2103             MOVS     R1,#+3
   \      0x192   0x4628             MOV      R0,R5
   \      0x194   0x....'....        BL       mbedtls_debug_print_msg
    875              MBEDTLS_SSL_DEBUG_BUF( 3,   "client hello, session id", buf + 39, n );
   \      0x198   0x9702             STR      R7,[SP, #+8]
   \      0x19A   0x9804             LDR      R0,[SP, #+16]
   \      0x19C   0x3027             ADDS     R0,R0,#+39
   \      0x19E   0x9001             STR      R0,[SP, #+4]
   \      0x1A0   0x....'....        LDR.W    R0,??DataTable21_13
   \      0x1A4   0x9000             STR      R0,[SP, #+0]
   \      0x1A6   0xF240 0x336B      MOVW     R3,#+875
   \      0x1AA   0x4632             MOV      R2,R6
   \      0x1AC   0x2103             MOVS     R1,#+3
   \      0x1AE   0x4628             MOV      R0,R5
   \      0x1B0   0x....'....        BL       mbedtls_debug_print_buf
    876          
    877              /*
    878               * DTLS cookie
    879               */
    880          #if defined(MBEDTLS_SSL_PROTO_DTLS)
    881              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
   \      0x1B4   0x6828             LDR      R0,[R5, #+0]
   \      0x1B6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \      0x1BA   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \      0x1BE   0x2800             CMP      R0,#+0
   \      0x1C0   0xD035             BEQ.N    ??ssl_write_client_hello_10
    882              {
    883                  if( ssl->handshake->verify_cookie == NULL )
   \      0x1C2   0x6BE8             LDR      R0,[R5, #+60]
   \      0x1C4   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \      0x1C8   0x2800             CMP      R0,#+0
   \      0x1CA   0xD10D             BNE.N    ??ssl_write_client_hello_11
    884                  {
    885                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "no verify cookie to send" ) );
   \      0x1CC   0x....'....        LDR.W    R0,??DataTable21_14
   \      0x1D0   0x9000             STR      R0,[SP, #+0]
   \      0x1D2   0xF240 0x3375      MOVW     R3,#+885
   \      0x1D6   0x4632             MOV      R2,R6
   \      0x1D8   0x2103             MOVS     R1,#+3
   \      0x1DA   0x4628             MOV      R0,R5
   \      0x1DC   0x....'....        BL       mbedtls_debug_print_msg
    886                      *p++ = 0;
   \      0x1E0   0x4620             MOV      R0,R4
   \      0x1E2   0xF808 0x0B01      STRB     R0,[R8], #+1
   \      0x1E6   0xE022             B.N      ??ssl_write_client_hello_10
    887                  }
    888                  else
    889                  {
    890                      MBEDTLS_SSL_DEBUG_BUF( 3, "client hello, cookie",
    891                                        ssl->handshake->verify_cookie,
    892                                        ssl->handshake->verify_cookie_len );
   \                     ??ssl_write_client_hello_11: (+1)
   \      0x1E8   0x6BE8             LDR      R0,[R5, #+60]
   \      0x1EA   0xF890 0x01E0      LDRB     R0,[R0, #+480]
   \      0x1EE   0x9002             STR      R0,[SP, #+8]
   \      0x1F0   0x6BE8             LDR      R0,[R5, #+60]
   \      0x1F2   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \      0x1F6   0x9001             STR      R0,[SP, #+4]
   \      0x1F8   0x....'....        LDR.W    R0,??DataTable21_15
   \      0x1FC   0x9000             STR      R0,[SP, #+0]
   \      0x1FE   0xF44F 0x735F      MOV      R3,#+892
   \      0x202   0x4632             MOV      R2,R6
   \      0x204   0x2103             MOVS     R1,#+3
   \      0x206   0x4628             MOV      R0,R5
   \      0x208   0x....'....        BL       mbedtls_debug_print_buf
    893          
    894                      *p++ = ssl->handshake->verify_cookie_len;
   \      0x20C   0x6BE8             LDR      R0,[R5, #+60]
   \      0x20E   0xF890 0x01E0      LDRB     R0,[R0, #+480]
   \      0x212   0xF808 0x0B01      STRB     R0,[R8], #+1
    895                      memcpy( p, ssl->handshake->verify_cookie,
    896                                 ssl->handshake->verify_cookie_len );
   \      0x216   0x6BE8             LDR      R0,[R5, #+60]
   \      0x218   0xF890 0x21E0      LDRB     R2,[R0, #+480]
   \      0x21C   0xF8D0 0x11DC      LDR      R1,[R0, #+476]
   \      0x220   0x4640             MOV      R0,R8
   \      0x222   0x....'....        BL       __aeabi_memcpy
    897                      p += ssl->handshake->verify_cookie_len;
   \      0x226   0x6BE8             LDR      R0,[R5, #+60]
   \      0x228   0xF890 0x01E0      LDRB     R0,[R0, #+480]
   \      0x22C   0x4480             ADD      R8,R8,R0
    898                  }
    899              }
    900          #endif
    901          
    902              /*
    903               * Ciphersuite list
    904               */
    905              ciphersuites = ssl->conf->ciphersuite_list[ssl->minor_ver];
   \                     ??ssl_write_client_hello_10: (+1)
   \      0x22E   0x6828             LDR      R0,[R5, #+0]
   \      0x230   0x6969             LDR      R1,[R5, #+20]
   \      0x232   0xF850 0xA021      LDR      R10,[R0, R1, LSL #+2]
    906          
    907              /* Skip writing ciphersuite length for now */
    908              n = 0;
   \      0x236   0x4627             MOV      R7,R4
    909              q = p;
   \      0x238   0xF8CD 0x8008      STR      R8,[SP, #+8]
    910              p += 2;
   \      0x23C   0xF108 0x0802      ADD      R8,R8,#+2
    911          
    912              for( i = 0; ciphersuites[i] != 0; i++ )
   \      0x240   0x46A1             MOV      R9,R4
   \      0x242   0xE02A             B.N      ??ssl_write_client_hello_12
    913              {
    914                  ciphersuite_info = mbedtls_ssl_ciphersuite_from_id( ciphersuites[i] );
   \                     ??ssl_write_client_hello_13: (+1)
   \      0x244   0x....'....        BL       mbedtls_ssl_ciphersuite_from_id
   \      0x248   0x4683             MOV      R11,R0
    915          
    916                  if( ssl_validate_ciphersuite( ciphersuite_info, ssl,
    917                                                ssl->conf->min_minor_ver,
    918                                                ssl->conf->max_minor_ver ) != 0 )
   \      0x24A   0x6828             LDR      R0,[R5, #+0]
   \      0x24C   0xF890 0x30C9      LDRB     R3,[R0, #+201]
   \      0x250   0xF890 0x20CB      LDRB     R2,[R0, #+203]
   \      0x254   0x4629             MOV      R1,R5
   \      0x256   0x4658             MOV      R0,R11
   \      0x258   0x....'....        BL       ssl_validate_ciphersuite
   \      0x25C   0x2800             CMP      R0,#+0
   \      0x25E   0xD11A             BNE.N    ??ssl_write_client_hello_14
    919                      continue;
    920          
    921                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, add ciphersuite: %04x",
    922                                              ciphersuites[i] ) );
   \      0x260   0xF85A 0x0029      LDR      R0,[R10, R9, LSL #+2]
   \      0x264   0x9001             STR      R0,[SP, #+4]
   \      0x266   0x....'....        LDR.W    R0,??DataTable21_16
   \      0x26A   0x9000             STR      R0,[SP, #+0]
   \      0x26C   0xF240 0x339A      MOVW     R3,#+922
   \      0x270   0x4632             MOV      R2,R6
   \      0x272   0x2103             MOVS     R1,#+3
   \      0x274   0x4628             MOV      R0,R5
   \      0x276   0x....'....        BL       mbedtls_debug_print_msg
    923          
    924          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
    925              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
    926                  uses_ec |= mbedtls_ssl_ciphersuite_uses_ec( ciphersuite_info );
   \      0x27A   0x4658             MOV      R0,R11
   \      0x27C   0x....'....        BL       mbedtls_ssl_ciphersuite_uses_ec
   \      0x280   0x4304             ORRS     R4,R0,R4
    927          #endif
    928          
    929                  n++;
   \      0x282   0x1C7F             ADDS     R7,R7,#+1
    930                  *p++ = (unsigned char)( ciphersuites[i] >> 8 );
   \      0x284   0xF85A 0x0029      LDR      R0,[R10, R9, LSL #+2]
   \      0x288   0x1200             ASRS     R0,R0,#+8
   \      0x28A   0xF808 0x0B01      STRB     R0,[R8], #+1
    931                  *p++ = (unsigned char)( ciphersuites[i]      );
   \      0x28E   0xF85A 0x0029      LDR      R0,[R10, R9, LSL #+2]
   \      0x292   0xF808 0x0B01      STRB     R0,[R8], #+1
    932              }
   \                     ??ssl_write_client_hello_14: (+1)
   \      0x296   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??ssl_write_client_hello_12: (+1)
   \      0x29A   0xF85A 0x0029      LDR      R0,[R10, R9, LSL #+2]
   \      0x29E   0x2800             CMP      R0,#+0
   \      0x2A0   0xD1D0             BNE.N    ??ssl_write_client_hello_13
    933          
    934              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, got %d ciphersuites (excluding SCSVs)", n ) );
   \      0x2A2   0x9701             STR      R7,[SP, #+4]
   \      0x2A4   0x....'....        LDR.W    R0,??DataTable21_17
   \      0x2A8   0x9000             STR      R0,[SP, #+0]
   \      0x2AA   0xF240 0x33A6      MOVW     R3,#+934
   \      0x2AE   0x4632             MOV      R2,R6
   \      0x2B0   0x2103             MOVS     R1,#+3
   \      0x2B2   0x4628             MOV      R0,R5
   \      0x2B4   0x....'....        BL       mbedtls_debug_print_msg
    935          
    936              /*
    937               * Add TLS_EMPTY_RENEGOTIATION_INFO_SCSV
    938               */
    939          #if defined(MBEDTLS_SSL_RENEGOTIATION)
    940              if( ssl->renego_status == MBEDTLS_SSL_INITIAL_HANDSHAKE )
   \      0x2B8   0x68A8             LDR      R0,[R5, #+8]
   \      0x2BA   0x2800             CMP      R0,#+0
   \      0x2BC   0xD112             BNE.N    ??ssl_write_client_hello_15
    941          #endif
    942              {
    943                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "adding EMPTY_RENEGOTIATION_INFO_SCSV" ) );
   \      0x2BE   0x....'....        LDR.W    R0,??DataTable21_18
   \      0x2C2   0x9000             STR      R0,[SP, #+0]
   \      0x2C4   0xF240 0x33AF      MOVW     R3,#+943
   \      0x2C8   0x4632             MOV      R2,R6
   \      0x2CA   0x2103             MOVS     R1,#+3
   \      0x2CC   0x4628             MOV      R0,R5
   \      0x2CE   0x....'....        BL       mbedtls_debug_print_msg
    944                  *p++ = (unsigned char)( MBEDTLS_SSL_EMPTY_RENEGOTIATION_INFO >> 8 );
   \      0x2D2   0x2000             MOVS     R0,#+0
   \      0x2D4   0xF888 0x0000      STRB     R0,[R8, #+0]
    945                  *p++ = (unsigned char)( MBEDTLS_SSL_EMPTY_RENEGOTIATION_INFO      );
   \      0x2D8   0x20FF             MOVS     R0,#+255
   \      0x2DA   0xF888 0x0001      STRB     R0,[R8, #+1]
   \      0x2DE   0xF108 0x0802      ADD      R8,R8,#+2
    946                  n++;
   \      0x2E2   0x1C7F             ADDS     R7,R7,#+1
    947              }
    948          
    949              /* Some versions of OpenSSL don't handle it correctly if not at end */
    950          #if defined(MBEDTLS_SSL_FALLBACK_SCSV)
    951              if( ssl->conf->fallback == MBEDTLS_SSL_IS_FALLBACK )
   \                     ??ssl_write_client_hello_15: (+1)
   \      0x2E4   0x6828             LDR      R0,[R5, #+0]
   \      0x2E6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \      0x2EA   0xF3C0 0x4000      UBFX     R0,R0,#+16,#+1
   \      0x2EE   0x2800             CMP      R0,#+0
   \      0x2F0   0xD012             BEQ.N    ??ssl_write_client_hello_16
    952              {
    953                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "adding FALLBACK_SCSV" ) );
   \      0x2F2   0x....'....        LDR.W    R0,??DataTable21_19
   \      0x2F6   0x9000             STR      R0,[SP, #+0]
   \      0x2F8   0xF240 0x33B9      MOVW     R3,#+953
   \      0x2FC   0x4632             MOV      R2,R6
   \      0x2FE   0x2103             MOVS     R1,#+3
   \      0x300   0x4628             MOV      R0,R5
   \      0x302   0x....'....        BL       mbedtls_debug_print_msg
    954                  *p++ = (unsigned char)( MBEDTLS_SSL_FALLBACK_SCSV_VALUE >> 8 );
   \      0x306   0x2056             MOVS     R0,#+86
   \      0x308   0xF888 0x0000      STRB     R0,[R8, #+0]
    955                  *p++ = (unsigned char)( MBEDTLS_SSL_FALLBACK_SCSV_VALUE      );
   \      0x30C   0x2000             MOVS     R0,#+0
   \      0x30E   0xF888 0x0001      STRB     R0,[R8, #+1]
   \      0x312   0xF108 0x0802      ADD      R8,R8,#+2
    956                  n++;
   \      0x316   0x1C7F             ADDS     R7,R7,#+1
    957              }
    958          #endif
    959          
    960              *q++ = (unsigned char)( n >> 7 );
   \                     ??ssl_write_client_hello_16: (+1)
   \      0x318   0x4638             MOV      R0,R7
   \      0x31A   0x09C0             LSRS     R0,R0,#+7
   \      0x31C   0x9902             LDR      R1,[SP, #+8]
   \      0x31E   0x7008             STRB     R0,[R1, #+0]
    961              *q++ = (unsigned char)( n << 1 );
   \      0x320   0x0078             LSLS     R0,R7,#+1
   \      0x322   0x9902             LDR      R1,[SP, #+8]
   \      0x324   0x7048             STRB     R0,[R1, #+1]
    962          
    963          #if defined(MBEDTLS_ZLIB_SUPPORT)
    964              offer_compress = 1;
    965          #else
    966              offer_compress = 0;
    967          #endif
    968          
    969              /*
    970               * We don't support compression with DTLS right now: if many records come
    971               * in the same datagram, uncompressing one could overwrite the next one.
    972               * We don't want to add complexity for handling that case unless there is
    973               * an actual need for it.
    974               */
    975          #if defined(MBEDTLS_SSL_PROTO_DTLS)
    976              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
    977                  offer_compress = 0;
    978          #endif
    979          
    980              if( offer_compress )
    981              {
    982                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, compress len.: %d", 2 ) );
    983                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, compress alg.: %d %d",
    984                                      MBEDTLS_SSL_COMPRESS_DEFLATE, MBEDTLS_SSL_COMPRESS_NULL ) );
    985          
    986                  *p++ = 2;
    987                  *p++ = MBEDTLS_SSL_COMPRESS_DEFLATE;
    988                  *p++ = MBEDTLS_SSL_COMPRESS_NULL;
    989              }
    990              else
    991              {
    992                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, compress len.: %d", 1 ) );
   \      0x326   0x2001             MOVS     R0,#+1
   \      0x328   0x9001             STR      R0,[SP, #+4]
   \      0x32A   0x....'....        LDR.W    R0,??DataTable21_20
   \      0x32E   0x9000             STR      R0,[SP, #+0]
   \      0x330   0xF44F 0x7378      MOV      R3,#+992
   \      0x334   0x4632             MOV      R2,R6
   \      0x336   0x2103             MOVS     R1,#+3
   \      0x338   0x4628             MOV      R0,R5
   \      0x33A   0x....'....        BL       mbedtls_debug_print_msg
    993                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, compress alg.: %d",
    994                                      MBEDTLS_SSL_COMPRESS_NULL ) );
   \      0x33E   0x2000             MOVS     R0,#+0
   \      0x340   0x9001             STR      R0,[SP, #+4]
   \      0x342   0x....'....        LDR.W    R0,??DataTable21_21
   \      0x346   0x9000             STR      R0,[SP, #+0]
   \      0x348   0xF240 0x33E2      MOVW     R3,#+994
   \      0x34C   0x4632             MOV      R2,R6
   \      0x34E   0x2103             MOVS     R1,#+3
   \      0x350   0x4628             MOV      R0,R5
   \      0x352   0x....'....        BL       mbedtls_debug_print_msg
    995          
    996                  *p++ = 1;
   \      0x356   0x2001             MOVS     R0,#+1
   \      0x358   0xF888 0x0000      STRB     R0,[R8, #+0]
    997                  *p++ = MBEDTLS_SSL_COMPRESS_NULL;
   \      0x35C   0x2000             MOVS     R0,#+0
   \      0x35E   0xF888 0x0001      STRB     R0,[R8, #+1]
   \      0x362   0xF108 0x0702      ADD      R7,R8,#+2
    998              }
    999          
   1000              // First write extensions, then the total length
   1001              //
   1002          #if defined(MBEDTLS_SSL_SERVER_NAME_INDICATION)
   1003              ssl_write_hostname_ext( ssl, p + 2 + ext_len, &olen );
   \      0x366   0xAA03             ADD      R2,SP,#+12
   \      0x368   0x1CB9             ADDS     R1,R7,#+2
   \      0x36A   0x4628             MOV      R0,R5
   \      0x36C   0x....'....        BL       ssl_write_hostname_ext
   1004              ext_len += olen;
   \      0x370   0xF8DD 0x800C      LDR      R8,[SP, #+12]
   1005          #endif
   1006          
   1007              /* Note that TLS_EMPTY_RENEGOTIATION_INFO_SCSV is always added
   1008               * even if MBEDTLS_SSL_RENEGOTIATION is not defined. */
   1009          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1010              ssl_write_renegotiation_ext( ssl, p + 2 + ext_len, &olen );
   \      0x374   0xAA03             ADD      R2,SP,#+12
   \      0x376   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x37A   0x1C81             ADDS     R1,R0,#+2
   \      0x37C   0x4628             MOV      R0,R5
   \      0x37E   0x....'....        BL       ssl_write_renegotiation_ext
   1011              ext_len += olen;
   \      0x382   0x9803             LDR      R0,[SP, #+12]
   \      0x384   0x4480             ADD      R8,R0,R8
   1012          #endif
   1013          
   1014          #if defined(MBEDTLS_SSL_PROTO_TLS1_2) && \
   1015              defined(MBEDTLS_KEY_EXCHANGE__WITH_CERT__ENABLED)
   1016              ssl_write_signature_algorithms_ext( ssl, p + 2 + ext_len, &olen );
   \      0x386   0xAA03             ADD      R2,SP,#+12
   \      0x388   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x38C   0x1C81             ADDS     R1,R0,#+2
   \      0x38E   0x4628             MOV      R0,R5
   \      0x390   0x....'....        BL       ssl_write_signature_algorithms_ext
   1017              ext_len += olen;
   \      0x394   0x9803             LDR      R0,[SP, #+12]
   \      0x396   0x4480             ADD      R8,R0,R8
   1018          #endif
   1019          
   1020          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
   1021              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1022              if( uses_ec )
   \      0x398   0x2C00             CMP      R4,#+0
   \      0x39A   0xD011             BEQ.N    ??ssl_write_client_hello_17
   1023              {
   1024                  ssl_write_supported_elliptic_curves_ext( ssl, p + 2 + ext_len, &olen );
   \      0x39C   0xAA03             ADD      R2,SP,#+12
   \      0x39E   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3A2   0x1C81             ADDS     R1,R0,#+2
   \      0x3A4   0x4628             MOV      R0,R5
   \      0x3A6   0x....'....        BL       ssl_write_supported_elliptic_curves_ext
   1025                  ext_len += olen;
   \      0x3AA   0x9803             LDR      R0,[SP, #+12]
   \      0x3AC   0x4480             ADD      R8,R0,R8
   1026          
   1027                  ssl_write_supported_point_formats_ext( ssl, p + 2 + ext_len, &olen );
   \      0x3AE   0xAA03             ADD      R2,SP,#+12
   \      0x3B0   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3B4   0x1C81             ADDS     R1,R0,#+2
   \      0x3B6   0x4628             MOV      R0,R5
   \      0x3B8   0x....'....        BL       ssl_write_supported_point_formats_ext
   1028                  ext_len += olen;
   \      0x3BC   0x9803             LDR      R0,[SP, #+12]
   \      0x3BE   0x4480             ADD      R8,R0,R8
   1029              }
   1030          #endif
   1031          
   1032          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1033              ssl_write_ecjpake_kkpp_ext( ssl, p + 2 + ext_len, &olen );
   1034              ext_len += olen;
   1035          #endif
   1036          
   1037          #if defined(MBEDTLS_SSL_MAX_FRAGMENT_LENGTH)
   1038              ssl_write_max_fragment_length_ext( ssl, p + 2 + ext_len, &olen );
   \                     ??ssl_write_client_hello_17: (+1)
   \      0x3C0   0xAA03             ADD      R2,SP,#+12
   \      0x3C2   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3C6   0x1C81             ADDS     R1,R0,#+2
   \      0x3C8   0x4628             MOV      R0,R5
   \      0x3CA   0x....'....        BL       ssl_write_max_fragment_length_ext
   1039              ext_len += olen;
   \      0x3CE   0x9803             LDR      R0,[SP, #+12]
   \      0x3D0   0x4480             ADD      R8,R0,R8
   1040          #endif
   1041          
   1042          #if defined(MBEDTLS_SSL_TRUNCATED_HMAC)
   1043              ssl_write_truncated_hmac_ext( ssl, p + 2 + ext_len, &olen );
   \      0x3D2   0xAA03             ADD      R2,SP,#+12
   \      0x3D4   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3D8   0x1C81             ADDS     R1,R0,#+2
   \      0x3DA   0x4628             MOV      R0,R5
   \      0x3DC   0x....'....        BL       ssl_write_truncated_hmac_ext
   1044              ext_len += olen;
   \      0x3E0   0x9803             LDR      R0,[SP, #+12]
   \      0x3E2   0x4480             ADD      R8,R0,R8
   1045          #endif
   1046          
   1047          #if defined(MBEDTLS_SSL_ENCRYPT_THEN_MAC)
   1048              ssl_write_encrypt_then_mac_ext( ssl, p + 2 + ext_len, &olen );
   \      0x3E4   0xAA03             ADD      R2,SP,#+12
   \      0x3E6   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3EA   0x1C81             ADDS     R1,R0,#+2
   \      0x3EC   0x4628             MOV      R0,R5
   \      0x3EE   0x....'....        BL       ssl_write_encrypt_then_mac_ext
   1049              ext_len += olen;
   \      0x3F2   0x9803             LDR      R0,[SP, #+12]
   \      0x3F4   0x4480             ADD      R8,R0,R8
   1050          #endif
   1051          
   1052          #if defined(MBEDTLS_SSL_EXTENDED_MASTER_SECRET)
   1053              ssl_write_extended_ms_ext( ssl, p + 2 + ext_len, &olen );
   \      0x3F6   0xAA03             ADD      R2,SP,#+12
   \      0x3F8   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x3FC   0x1C81             ADDS     R1,R0,#+2
   \      0x3FE   0x4628             MOV      R0,R5
   \      0x400   0x....'....        BL       ssl_write_extended_ms_ext
   1054              ext_len += olen;
   \      0x404   0x9803             LDR      R0,[SP, #+12]
   \      0x406   0x4480             ADD      R8,R0,R8
   1055          #endif
   1056          
   1057          #if defined(MBEDTLS_SSL_ALPN)
   1058              ssl_write_alpn_ext( ssl, p + 2 + ext_len, &olen );
   \      0x408   0xAA03             ADD      R2,SP,#+12
   \      0x40A   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x40E   0x1C81             ADDS     R1,R0,#+2
   \      0x410   0x4628             MOV      R0,R5
   \      0x412   0x....'....        BL       ssl_write_alpn_ext
   1059              ext_len += olen;
   \      0x416   0x9803             LDR      R0,[SP, #+12]
   \      0x418   0x4480             ADD      R8,R0,R8
   1060          #endif
   1061          
   1062          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
   1063              ssl_write_session_ticket_ext( ssl, p + 2 + ext_len, &olen );
   \      0x41A   0xAA03             ADD      R2,SP,#+12
   \      0x41C   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x420   0x1C81             ADDS     R1,R0,#+2
   \      0x422   0x4628             MOV      R0,R5
   \      0x424   0x....'....        BL       ssl_write_session_ticket_ext
   1064              ext_len += olen;
   \      0x428   0x9803             LDR      R0,[SP, #+12]
   \      0x42A   0x4480             ADD      R8,R0,R8
   1065          #endif
   1066          
   1067              /* olen unused if all extensions are disabled */
   1068              ((void) olen);
   1069          
   1070              MBEDTLS_SSL_DEBUG_MSG( 3, ( "client hello, total extension length: %d",
   1071                             ext_len ) );
   \      0x42C   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \      0x430   0x....'....        LDR.W    R0,??DataTable21_22
   \      0x434   0x9000             STR      R0,[SP, #+0]
   \      0x436   0xF240 0x432F      MOVW     R3,#+1071
   \      0x43A   0x4632             MOV      R2,R6
   \      0x43C   0x2103             MOVS     R1,#+3
   \      0x43E   0x4628             MOV      R0,R5
   \      0x440   0x....'....        BL       mbedtls_debug_print_msg
   1072          
   1073              if( ext_len > 0 )
   \      0x444   0xF1B8 0x0F00      CMP      R8,#+0
   \      0x448   0xD007             BEQ.N    ??ssl_write_client_hello_18
   1074              {
   1075                  *p++ = (unsigned char)( ( ext_len >> 8 ) & 0xFF );
   \      0x44A   0x4640             MOV      R0,R8
   \      0x44C   0x0A00             LSRS     R0,R0,#+8
   \      0x44E   0x7038             STRB     R0,[R7, #+0]
   1076                  *p++ = (unsigned char)( ( ext_len      ) & 0xFF );
   \      0x450   0xF887 0x8001      STRB     R8,[R7, #+1]
   1077                  p += ext_len;
   \      0x454   0xEB07 0x0008      ADD      R0,R7,R8
   \      0x458   0x1C87             ADDS     R7,R0,#+2
   1078              }
   1079          
   1080              ssl->out_msglen  = p - buf;
   \                     ??ssl_write_client_hello_18: (+1)
   \      0x45A   0x9804             LDR      R0,[SP, #+16]
   \      0x45C   0x1A3F             SUBS     R7,R7,R0
   \      0x45E   0xF8C5 0x70CC      STR      R7,[R5, #+204]
   1081              ssl->out_msgtype = MBEDTLS_SSL_MSG_HANDSHAKE;
   \      0x462   0x2016             MOVS     R0,#+22
   \      0x464   0xF8C5 0x00C8      STR      R0,[R5, #+200]
   1082              ssl->out_msg[0]  = MBEDTLS_SSL_HS_CLIENT_HELLO;
   \      0x468   0x2001             MOVS     R0,#+1
   \      0x46A   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x46E   0x7008             STRB     R0,[R1, #+0]
   1083          
   1084              ssl->state++;
   \      0x470   0x6868             LDR      R0,[R5, #+4]
   \      0x472   0x1C40             ADDS     R0,R0,#+1
   \      0x474   0x6068             STR      R0,[R5, #+4]
   1085          
   1086          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   1087              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
   \      0x476   0x6828             LDR      R0,[R5, #+0]
   \      0x478   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \      0x47C   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \      0x480   0x2800             CMP      R0,#+0
   \      0x482   0xD002             BEQ.N    ??ssl_write_client_hello_19
   1088                  mbedtls_ssl_send_flight_completed( ssl );
   \      0x484   0x4628             MOV      R0,R5
   \      0x486   0x....'....        BL       mbedtls_ssl_send_flight_completed
   1089          #endif
   1090          
   1091              if( ( ret = mbedtls_ssl_write_handshake_msg( ssl ) ) != 0 )
   \                     ??ssl_write_client_hello_19: (+1)
   \      0x48A   0x4628             MOV      R0,R5
   \      0x48C   0x....'....        BL       mbedtls_ssl_write_handshake_msg
   \      0x490   0x0004             MOVS     R4,R0
   \      0x492   0xD00C             BEQ.N    ??ssl_write_client_hello_20
   1092              {
   1093                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_write_handshake_msg", ret );
   \      0x494   0x9401             STR      R4,[SP, #+4]
   \      0x496   0x....'....        LDR.W    R0,??DataTable21_23
   \      0x49A   0x9000             STR      R0,[SP, #+0]
   \      0x49C   0xF240 0x4345      MOVW     R3,#+1093
   \      0x4A0   0x4632             MOV      R2,R6
   \      0x4A2   0x2101             MOVS     R1,#+1
   \      0x4A4   0x4628             MOV      R0,R5
   \      0x4A6   0x....'....        BL       mbedtls_debug_print_ret
   1094                  return( ret );
   \      0x4AA   0x4620             MOV      R0,R4
   \      0x4AC   0xE023             B.N      ??ssl_write_client_hello_1
   1095              }
   1096          
   1097          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   1098              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM &&
   1099                  ( ret = mbedtls_ssl_flight_transmit( ssl ) ) != 0 )
   \                     ??ssl_write_client_hello_20: (+1)
   \      0x4AE   0x6828             LDR      R0,[R5, #+0]
   \      0x4B0   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \      0x4B4   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \      0x4B8   0x2800             CMP      R0,#+0
   \      0x4BA   0xD011             BEQ.N    ??ssl_write_client_hello_21
   \      0x4BC   0x4628             MOV      R0,R5
   \      0x4BE   0x....'....        BL       mbedtls_ssl_flight_transmit
   \      0x4C2   0x0004             MOVS     R4,R0
   \      0x4C4   0xD00C             BEQ.N    ??ssl_write_client_hello_21
   1100              {
   1101                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_flight_transmit", ret );
   \      0x4C6   0x9401             STR      R4,[SP, #+4]
   \      0x4C8   0x....'....        LDR.W    R0,??DataTable21_24
   \      0x4CC   0x9000             STR      R0,[SP, #+0]
   \      0x4CE   0xF240 0x434D      MOVW     R3,#+1101
   \      0x4D2   0x4632             MOV      R2,R6
   \      0x4D4   0x2101             MOVS     R1,#+1
   \      0x4D6   0x4628             MOV      R0,R5
   \      0x4D8   0x....'....        BL       mbedtls_debug_print_ret
   1102                  return( ret );
   \      0x4DC   0x4620             MOV      R0,R4
   \      0x4DE   0xE00A             B.N      ??ssl_write_client_hello_1
   1103              }
   1104          #endif /* MBEDTLS_SSL_PROTO_DTLS */
   1105          
   1106              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= write client hello" ) );
   \                     ??ssl_write_client_hello_21: (+1)
   \      0x4E0   0x....'....        LDR.W    R0,??DataTable21_25
   \      0x4E4   0x9000             STR      R0,[SP, #+0]
   \      0x4E6   0xF240 0x4352      MOVW     R3,#+1106
   \      0x4EA   0x4632             MOV      R2,R6
   \      0x4EC   0x2102             MOVS     R1,#+2
   \      0x4EE   0x4628             MOV      R0,R5
   \      0x4F0   0x....'....        BL       mbedtls_debug_print_msg
   1107          
   1108              return( 0 );
   \      0x4F4   0x2000             MOVS     R0,#+0
   \                     ??ssl_write_client_hello_1: (+1)
   \      0x4F6   0xB005             ADD      SP,SP,#+20
   \      0x4F8   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1109          }
   1110          

   \                                 In section .text, align 2, keep-with-next
   1111          static int ssl_parse_renegotiation_info( mbedtls_ssl_context *ssl,
   1112                                                   const unsigned char *buf,
   1113                                                   size_t len )
   1114          {
   \                     ssl_parse_renegotiation_info: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   1115          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1116              if( ssl->renego_status != MBEDTLS_SSL_INITIAL_HANDSHAKE )
   \        0x6   0x68A0             LDR      R0,[R4, #+8]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD030             BEQ.N    ??ssl_parse_renegotiation_info_0
   1117              {
   1118                  /* Check verify-data in constant-time. The length OTOH is no secret */
   1119                  if( len    != 1 + ssl->verify_data_len * 2 ||
   1120                      buf[0] !=     ssl->verify_data_len * 2 ||
   1121                      mbedtls_ssl_safer_memcmp( buf + 1,
   1122                                    ssl->own_verify_data, ssl->verify_data_len ) != 0 ||
   1123                      mbedtls_ssl_safer_memcmp( buf + 1 + ssl->verify_data_len,
   1124                                    ssl->peer_verify_data, ssl->verify_data_len ) != 0 )
   \        0xC   0xF8D4 0x00F8      LDR      R0,[R4, #+248]
   \       0x10   0x0040             LSLS     R0,R0,#+1
   \       0x12   0x1C40             ADDS     R0,R0,#+1
   \       0x14   0x4282             CMP      R2,R0
   \       0x16   0xD118             BNE.N    ??ssl_parse_renegotiation_info_1
   \       0x18   0x7828             LDRB     R0,[R5, #+0]
   \       0x1A   0xF8D4 0x10F8      LDR      R1,[R4, #+248]
   \       0x1E   0xEBB0 0x0F41      CMP      R0,R1, LSL #+1
   \       0x22   0xD112             BNE.N    ??ssl_parse_renegotiation_info_1
   \       0x24   0x460A             MOV      R2,R1
   \       0x26   0xF104 0x01FC      ADD      R1,R4,#+252
   \       0x2A   0x1C68             ADDS     R0,R5,#+1
   \       0x2C   0x....'....        BL       mbedtls_ssl_safer_memcmp
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD10A             BNE.N    ??ssl_parse_renegotiation_info_1
   \       0x34   0xF8D4 0x20F8      LDR      R2,[R4, #+248]
   \       0x38   0xF504 0x7184      ADD      R1,R4,#+264
   \       0x3C   0x4610             MOV      R0,R2
   \       0x3E   0x4428             ADD      R0,R5,R0
   \       0x40   0x1C40             ADDS     R0,R0,#+1
   \       0x42   0x....'....        BL       mbedtls_ssl_safer_memcmp
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD02B             BEQ.N    ??ssl_parse_renegotiation_info_2
   1125                  {
   1126                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching renegotiation info" ) );
   \                     ??ssl_parse_renegotiation_info_1: (+1)
   \       0x4A   0x....'....        LDR.W    R0,??DataTable21_26
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xF240 0x4366      MOVW     R3,#+1126
   \       0x54   0x....             LDR.N    R2,??DataTable13
   \       0x56   0x2101             MOVS     R1,#+1
   \       0x58   0x4620             MOV      R0,R4
   \       0x5A   0x....'....        BL       mbedtls_debug_print_msg
   1127                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1128                                                      MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x5E   0x2228             MOVS     R2,#+40
   \       0x60   0x2102             MOVS     R1,#+2
   \       0x62   0x4620             MOV      R0,R4
   \       0x64   0x....'....        BL       mbedtls_ssl_send_alert_message
   1129                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x68   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x6C   0xBD32             POP      {R1,R4,R5,PC}
   1130                  }
   1131              }
   1132              else
   1133          #endif /* MBEDTLS_SSL_RENEGOTIATION */
   1134              {
   1135                  if( len != 1 || buf[0] != 0x00 )
   \                     ??ssl_parse_renegotiation_info_0: (+1)
   \       0x6E   0x2A01             CMP      R2,#+1
   \       0x70   0xD102             BNE.N    ??ssl_parse_renegotiation_info_3
   \       0x72   0x7828             LDRB     R0,[R5, #+0]
   \       0x74   0x2800             CMP      R0,#+0
   \       0x76   0xD011             BEQ.N    ??ssl_parse_renegotiation_info_4
   1136                  {
   1137                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-zero length renegotiation info" ) );
   \                     ??ssl_parse_renegotiation_info_3: (+1)
   \       0x78   0x....'....        LDR.W    R0,??DataTable21_28
   \       0x7C   0x9000             STR      R0,[SP, #+0]
   \       0x7E   0xF240 0x4371      MOVW     R3,#+1137
   \       0x82   0x....             LDR.N    R2,??DataTable13
   \       0x84   0x2101             MOVS     R1,#+1
   \       0x86   0x4620             MOV      R0,R4
   \       0x88   0x....'....        BL       mbedtls_debug_print_msg
   1138                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1139                                                      MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x8C   0x2228             MOVS     R2,#+40
   \       0x8E   0x2102             MOVS     R1,#+2
   \       0x90   0x4620             MOV      R0,R4
   \       0x92   0x....'....        BL       mbedtls_ssl_send_alert_message
   1140                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x96   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x9A   0xBD32             POP      {R1,R4,R5,PC}
   1141                  }
   1142          
   1143                  ssl->secure_renegotiation = MBEDTLS_SSL_SECURE_RENEGOTIATION;
   \                     ??ssl_parse_renegotiation_info_4: (+1)
   \       0x9C   0x2001             MOVS     R0,#+1
   \       0x9E   0xF8C4 0x00F4      STR      R0,[R4, #+244]
   1144              }
   1145          
   1146              return( 0 );
   \                     ??ssl_parse_renegotiation_info_2: (+1)
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1147          }
   1148          
   1149          #if defined(MBEDTLS_SSL_MAX_FRAGMENT_LENGTH)

   \                                 In section .text, align 2, keep-with-next
   1150          static int ssl_parse_max_fragment_length_ext( mbedtls_ssl_context *ssl,
   1151                                                        const unsigned char *buf,
   1152                                                        size_t len )
   1153          {
   \                     ssl_parse_max_fragment_length_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1154              /*
   1155               * server should use the extension only if we did,
   1156               * and if so the server's value should match ours (and len is always 1)
   1157               */
   1158              if( ssl->conf->mfl_code == MBEDTLS_SSL_MAX_FRAG_LEN_NONE ||
   1159                  len != 1 ||
   1160                  buf[0] != ssl->conf->mfl_code )
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0xA   0xF3C0 0x1082      UBFX     R0,R0,#+6,#+3
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD009             BEQ.N    ??ssl_parse_max_fragment_length_ext_0
   \       0x12   0x2A01             CMP      R2,#+1
   \       0x14   0xD107             BNE.N    ??ssl_parse_max_fragment_length_ext_0
   \       0x16   0x7808             LDRB     R0,[R1, #+0]
   \       0x18   0x6821             LDR      R1,[R4, #+0]
   \       0x1A   0xF8D1 0x10CC      LDR      R1,[R1, #+204]
   \       0x1E   0xF3C1 0x1182      UBFX     R1,R1,#+6,#+3
   \       0x22   0x4288             CMP      R0,R1
   \       0x24   0xD012             BEQ.N    ??ssl_parse_max_fragment_length_ext_1
   1161              {
   1162                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching max fragment length extension" ) );
   \                     ??ssl_parse_max_fragment_length_ext_0: (+1)
   \       0x26   0x....'....        LDR.W    R0,??DataTable21_29
   \       0x2A   0x9000             STR      R0,[SP, #+0]
   \       0x2C   0xF240 0x438A      MOVW     R3,#+1162
   \       0x30   0x....'....        LDR.W    R2,??DataTable22
   \       0x34   0x2101             MOVS     R1,#+1
   \       0x36   0x4620             MOV      R0,R4
   \       0x38   0x....'....        BL       mbedtls_debug_print_msg
   1163                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1164                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x3C   0x2228             MOVS     R2,#+40
   \       0x3E   0x2102             MOVS     R1,#+2
   \       0x40   0x4620             MOV      R0,R4
   \       0x42   0x....'....        BL       mbedtls_ssl_send_alert_message
   1165                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x46   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x4A   0xBD16             POP      {R1,R2,R4,PC}
   1166              }
   1167          
   1168              return( 0 );
   \                     ??ssl_parse_max_fragment_length_ext_1: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   1169          }
   1170          #endif /* MBEDTLS_SSL_MAX_FRAGMENT_LENGTH */
   1171          
   1172          #if defined(MBEDTLS_SSL_TRUNCATED_HMAC)

   \                                 In section .text, align 2, keep-with-next
   1173          static int ssl_parse_truncated_hmac_ext( mbedtls_ssl_context *ssl,
   1174                                                   const unsigned char *buf,
   1175                                                   size_t len )
   1176          {
   \                     ssl_parse_truncated_hmac_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1177              if( ssl->conf->trunc_hmac == MBEDTLS_SSL_TRUNC_HMAC_DISABLED ||
   1178                  len != 0 )
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0xA   0xF3C0 0x3080      UBFX     R0,R0,#+14,#+1
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD001             BEQ.N    ??ssl_parse_truncated_hmac_ext_0
   \       0x12   0x2A00             CMP      R2,#+0
   \       0x14   0xD012             BEQ.N    ??ssl_parse_truncated_hmac_ext_1
   1179              {
   1180                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching truncated HMAC extension" ) );
   \                     ??ssl_parse_truncated_hmac_ext_0: (+1)
   \       0x16   0x....'....        LDR.W    R0,??DataTable21_30
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0xF240 0x439C      MOVW     R3,#+1180
   \       0x20   0x....'....        LDR.W    R2,??DataTable22
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0x....'....        BL       mbedtls_debug_print_msg
   1181                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1182                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x2C   0x2228             MOVS     R2,#+40
   \       0x2E   0x2102             MOVS     R1,#+2
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       mbedtls_ssl_send_alert_message
   1183                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x36   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x3A   0xBD16             POP      {R1,R2,R4,PC}
   1184              }
   1185          
   1186              ((void) buf);
   1187          
   1188              ssl->session_negotiate->trunc_hmac = MBEDTLS_SSL_TRUNC_HMAC_ENABLED;
   \                     ??ssl_parse_truncated_hmac_ext_1: (+1)
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0x6BA1             LDR      R1,[R4, #+56]
   \       0x40   0x6748             STR      R0,[R1, #+116]
   1189          
   1190              return( 0 );
   \       0x42   0x2000             MOVS     R0,#+0
   \       0x44   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   1191          }
   1192          #endif /* MBEDTLS_SSL_TRUNCATED_HMAC */
   1193          
   1194          #if defined(MBEDTLS_SSL_ENCRYPT_THEN_MAC)

   \                                 In section .text, align 2, keep-with-next
   1195          static int ssl_parse_encrypt_then_mac_ext( mbedtls_ssl_context *ssl,
   1196                                                   const unsigned char *buf,
   1197                                                   size_t len )
   1198          {
   \                     ssl_parse_encrypt_then_mac_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1199              if( ssl->conf->encrypt_then_mac == MBEDTLS_SSL_ETM_DISABLED ||
   1200                  ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_0 ||
   1201                  len != 0 )
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0xA   0xF3C0 0x2040      UBFX     R0,R0,#+9,#+1
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD004             BEQ.N    ??ssl_parse_encrypt_then_mac_ext_0
   \       0x12   0x6960             LDR      R0,[R4, #+20]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD001             BEQ.N    ??ssl_parse_encrypt_then_mac_ext_0
   \       0x18   0x2A00             CMP      R2,#+0
   \       0x1A   0xD012             BEQ.N    ??ssl_parse_encrypt_then_mac_ext_1
   1202              {
   1203                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching encrypt-then-MAC extension" ) );
   \                     ??ssl_parse_encrypt_then_mac_ext_0: (+1)
   \       0x1C   0x....'....        LDR.W    R0,??DataTable21_31
   \       0x20   0x9000             STR      R0,[SP, #+0]
   \       0x22   0xF240 0x43B3      MOVW     R3,#+1203
   \       0x26   0x....'....        LDR.W    R2,??DataTable22
   \       0x2A   0x2101             MOVS     R1,#+1
   \       0x2C   0x4620             MOV      R0,R4
   \       0x2E   0x....'....        BL       mbedtls_debug_print_msg
   1204                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1205                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x32   0x2228             MOVS     R2,#+40
   \       0x34   0x2102             MOVS     R1,#+2
   \       0x36   0x4620             MOV      R0,R4
   \       0x38   0x....'....        BL       mbedtls_ssl_send_alert_message
   1206                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x3C   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x40   0xBD16             POP      {R1,R2,R4,PC}
   1207              }
   1208          
   1209              ((void) buf);
   1210          
   1211              ssl->session_negotiate->encrypt_then_mac = MBEDTLS_SSL_ETM_ENABLED;
   \                     ??ssl_parse_encrypt_then_mac_ext_1: (+1)
   \       0x42   0x2001             MOVS     R0,#+1
   \       0x44   0x6BA1             LDR      R1,[R4, #+56]
   \       0x46   0x6788             STR      R0,[R1, #+120]
   1212          
   1213              return( 0 );
   \       0x48   0x2000             MOVS     R0,#+0
   \       0x4A   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   1214          }
   1215          #endif /* MBEDTLS_SSL_ENCRYPT_THEN_MAC */
   1216          
   1217          #if defined(MBEDTLS_SSL_EXTENDED_MASTER_SECRET)

   \                                 In section .text, align 2, keep-with-next
   1218          static int ssl_parse_extended_ms_ext( mbedtls_ssl_context *ssl,
   1219                                                   const unsigned char *buf,
   1220                                                   size_t len )
   1221          {
   \                     ssl_parse_extended_ms_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1222              if( ssl->conf->extended_ms == MBEDTLS_SSL_EXTENDED_MS_DISABLED ||
   1223                  ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_0 ||
   1224                  len != 0 )
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0xA   0xF3C0 0x2080      UBFX     R0,R0,#+10,#+1
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD004             BEQ.N    ??ssl_parse_extended_ms_ext_0
   \       0x12   0x6960             LDR      R0,[R4, #+20]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD001             BEQ.N    ??ssl_parse_extended_ms_ext_0
   \       0x18   0x2A00             CMP      R2,#+0
   \       0x1A   0xD012             BEQ.N    ??ssl_parse_extended_ms_ext_1
   1225              {
   1226                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching extended master secret extension" ) );
   \                     ??ssl_parse_extended_ms_ext_0: (+1)
   \       0x1C   0x....'....        LDR.W    R0,??DataTable21_32
   \       0x20   0x9000             STR      R0,[SP, #+0]
   \       0x22   0xF240 0x43CA      MOVW     R3,#+1226
   \       0x26   0x....'....        LDR.W    R2,??DataTable22
   \       0x2A   0x2101             MOVS     R1,#+1
   \       0x2C   0x4620             MOV      R0,R4
   \       0x2E   0x....'....        BL       mbedtls_debug_print_msg
   1227                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1228                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x32   0x2228             MOVS     R2,#+40
   \       0x34   0x2102             MOVS     R1,#+2
   \       0x36   0x4620             MOV      R0,R4
   \       0x38   0x....'....        BL       mbedtls_ssl_send_alert_message
   1229                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x3C   0x....'....        LDR.W    R0,??DataTable21_27  ;; 0xffff8680
   \       0x40   0xBD16             POP      {R1,R2,R4,PC}
   1230              }
   1231          
   1232              ((void) buf);
   1233          
   1234              ssl->handshake->extended_ms = MBEDTLS_SSL_EXTENDED_MS_ENABLED;
   \                     ??ssl_parse_extended_ms_ext_1: (+1)
   \       0x42   0x2001             MOVS     R0,#+1
   \       0x44   0x6BE1             LDR      R1,[R4, #+60]
   \       0x46   0xF8C1 0x06D4      STR      R0,[R1, #+1748]
   1235          
   1236              return( 0 );
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   1237          }
   1238          #endif /* MBEDTLS_SSL_EXTENDED_MASTER_SECRET */
   1239          
   1240          #if defined(MBEDTLS_SSL_SESSION_TICKETS)

   \                                 In section .text, align 2, keep-with-next
   1241          static int ssl_parse_session_ticket_ext( mbedtls_ssl_context *ssl,
   1242                                                   const unsigned char *buf,
   1243                                                   size_t len )
   1244          {
   \                     ssl_parse_session_ticket_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1245              if( ssl->conf->session_tickets == MBEDTLS_SSL_SESSION_TICKETS_DISABLED ||
   1246                  len != 0 )
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \        0xA   0xF3C0 0x30C0      UBFX     R0,R0,#+15,#+1
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD001             BEQ.N    ??ssl_parse_session_ticket_ext_0
   \       0x12   0x2A00             CMP      R2,#+0
   \       0x14   0xD011             BEQ.N    ??ssl_parse_session_ticket_ext_1
   1247              {
   1248                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching session ticket extension" ) );
   \                     ??ssl_parse_session_ticket_ext_0: (+1)
   \       0x16   0x....'....        LDR.W    R0,??DataTable22_1
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0xF44F 0x639C      MOV      R3,#+1248
   \       0x20   0x....'....        LDR.W    R2,??DataTable22
   \       0x24   0x2101             MOVS     R1,#+1
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0x....'....        BL       mbedtls_debug_print_msg
   1249                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1250                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x2C   0x2228             MOVS     R2,#+40
   \       0x2E   0x2102             MOVS     R1,#+2
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       mbedtls_ssl_send_alert_message
   1251                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x36   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0x38   0xBD16             POP      {R1,R2,R4,PC}
   1252              }
   1253          
   1254              ((void) buf);
   1255          
   1256              ssl->handshake->new_session_ticket = 1;
   \                     ??ssl_parse_session_ticket_ext_1: (+1)
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0x6BE1             LDR      R1,[R4, #+60]
   \       0x3E   0xF8C1 0x06D0      STR      R0,[R1, #+1744]
   1257          
   1258              return( 0 );
   \       0x42   0x2000             MOVS     R0,#+0
   \       0x44   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   1259          }
   1260          #endif /* MBEDTLS_SSL_SESSION_TICKETS */
   1261          
   1262          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
   1263              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   1264          static int ssl_parse_supported_point_formats_ext( mbedtls_ssl_context *ssl,
   1265                                                            const unsigned char *buf,
   1266                                                            size_t len )
   1267          {
   \                     ssl_parse_supported_point_formats_ext: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x4608             MOV      R0,R1
   1268              size_t list_size;
   1269              const unsigned char *p;
   1270          
   1271              if( len == 0 || (size_t)( buf[0] + 1 ) != len )
   \        0x6   0x2A00             CMP      R2,#+0
   \        0x8   0xD003             BEQ.N    ??ssl_parse_supported_point_formats_ext_0
   \        0xA   0x7801             LDRB     R1,[R0, #+0]
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x4291             CMP      R1,R2
   \       0x10   0xD011             BEQ.N    ??ssl_parse_supported_point_formats_ext_1
   1272              {
   1273                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \                     ??ssl_parse_supported_point_formats_ext_0: (+1)
   \       0x12   0x....'....        LDR.W    R0,??DataTable24
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF240 0x43F9      MOVW     R3,#+1273
   \       0x1C   0x....'....        LDR.W    R2,??DataTable22
   \       0x20   0x2101             MOVS     R1,#+1
   \       0x22   0x4620             MOV      R0,R4
   \       0x24   0x....'....        BL       mbedtls_debug_print_msg
   1274                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1275                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \       0x28   0x2232             MOVS     R2,#+50
   \       0x2A   0x2102             MOVS     R1,#+2
   \       0x2C   0x4620             MOV      R0,R4
   \       0x2E   0x....'....        BL       mbedtls_ssl_send_alert_message
   1276                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x32   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0x34   0xBD16             POP      {R1,R2,R4,PC}
   1277              }
   1278              list_size = buf[0];
   \                     ??ssl_parse_supported_point_formats_ext_1: (+1)
   \       0x36   0x7801             LDRB     R1,[R0, #+0]
   1279          
   1280              p = buf + 1;
   \       0x38   0x1C42             ADDS     R2,R0,#+1
   1281              while( list_size > 0 )
   \                     ??ssl_parse_supported_point_formats_ext_2: (+1)
   \       0x3A   0x2900             CMP      R1,#+0
   \       0x3C   0xD007             BEQ.N    ??ssl_parse_supported_point_formats_ext_3
   1282              {
   1283                  if( p[0] == MBEDTLS_ECP_PF_UNCOMPRESSED ||
   1284                      p[0] == MBEDTLS_ECP_PF_COMPRESSED )
   \       0x3E   0x7810             LDRB     R0,[R2, #+0]
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD016             BEQ.N    ??ssl_parse_supported_point_formats_ext_4
   \       0x44   0x2801             CMP      R0,#+1
   \       0x46   0xD014             BEQ.N    ??ssl_parse_supported_point_formats_ext_4
   1285                  {
   1286          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C)
   1287                      ssl->handshake->ecdh_ctx.point_format = p[0];
   1288          #endif
   1289          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1290                      ssl->handshake->ecjpake_ctx.point_format = p[0];
   1291          #endif
   1292                      MBEDTLS_SSL_DEBUG_MSG( 4, ( "point format selected: %d", p[0] ) );
   1293                      return( 0 );
   1294                  }
   1295          
   1296                  list_size--;
   \       0x48   0x1E49             SUBS     R1,R1,#+1
   1297                  p++;
   \       0x4A   0x1C52             ADDS     R2,R2,#+1
   \       0x4C   0xE7F5             B.N      ??ssl_parse_supported_point_formats_ext_2
   1298              }
   1299          
   1300              MBEDTLS_SSL_DEBUG_MSG( 1, ( "no point format in common" ) );
   \                     ??ssl_parse_supported_point_formats_ext_3: (+1)
   \       0x4E   0x....'....        LDR.W    R0,??DataTable22_2
   \       0x52   0x9000             STR      R0,[SP, #+0]
   \       0x54   0xF240 0x5314      MOVW     R3,#+1300
   \       0x58   0x....'....        LDR.W    R2,??DataTable22
   \       0x5C   0x2101             MOVS     R1,#+1
   \       0x5E   0x4620             MOV      R0,R4
   \       0x60   0x....'....        BL       mbedtls_debug_print_msg
   1301              mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1302                                              MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x64   0x2228             MOVS     R2,#+40
   \       0x66   0x2102             MOVS     R1,#+2
   \       0x68   0x4620             MOV      R0,R4
   \       0x6A   0x....'....        BL       mbedtls_ssl_send_alert_message
   1303              return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x6E   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0x70   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   \                     ??ssl_parse_supported_point_formats_ext_4: (+1)
   \       0x72   0x6BE1             LDR      R1,[R4, #+60]
   \       0x74   0xF8C1 0x015C      STR      R0,[R1, #+348]
   \       0x78   0x7810             LDRB     R0,[R2, #+0]
   \       0x7A   0x9001             STR      R0,[SP, #+4]
   \       0x7C   0x....'....        LDR.W    R0,??DataTable22_3
   \       0x80   0x9000             STR      R0,[SP, #+0]
   \       0x82   0xF240 0x530C      MOVW     R3,#+1292
   \       0x86   0x....'....        LDR.W    R2,??DataTable22
   \       0x8A   0x2104             MOVS     R1,#+4
   \       0x8C   0x4620             MOV      R0,R4
   \       0x8E   0x....'....        BL       mbedtls_debug_print_msg
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0xBD16             POP      {R1,R2,R4,PC}
   1304          }
   1305          #endif /* MBEDTLS_ECDH_C || MBEDTLS_ECDSA_C ||
   1306                    MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
   1307          
   1308          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1309          static int ssl_parse_ecjpake_kkpp( mbedtls_ssl_context *ssl,
   1310                                             const unsigned char *buf,
   1311                                             size_t len )
   1312          {
   1313              int ret;
   1314          
   1315              if( ssl->transform_negotiate->ciphersuite_info->key_exchange !=
   1316                  MBEDTLS_KEY_EXCHANGE_ECJPAKE )
   1317              {
   1318                  MBEDTLS_SSL_DEBUG_MSG( 3, ( "skip ecjpake kkpp extension" ) );
   1319                  return( 0 );
   1320              }
   1321          
   1322              /* If we got here, we no longer need our cached extension */
   1323              mbedtls_free( ssl->handshake->ecjpake_cache );
   1324              ssl->handshake->ecjpake_cache = NULL;
   1325              ssl->handshake->ecjpake_cache_len = 0;
   1326          
   1327              if( ( ret = mbedtls_ecjpake_read_round_one( &ssl->handshake->ecjpake_ctx,
   1328                                                          buf, len ) ) != 0 )
   1329              {
   1330                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecjpake_read_round_one", ret );
   1331                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1332                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   1333                  return( ret );
   1334              }
   1335          
   1336              return( 0 );
   1337          }
   1338          #endif /* MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
   1339          
   1340          #if defined(MBEDTLS_SSL_ALPN)

   \                                 In section .text, align 2, keep-with-next
   1341          static int ssl_parse_alpn_ext( mbedtls_ssl_context *ssl,
   1342                                         const unsigned char *buf, size_t len )
   1343          {
   \                     ssl_parse_alpn_ext: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   1344              size_t list_len, name_len;
   1345              const char **p;
   1346          
   1347              /* If we didn't send it, the server shouldn't send it */
   1348              if( ssl->conf->alpn_list == NULL )
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD111             BNE.N    ??ssl_parse_alpn_ext_0
   1349              {
   1350                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-matching ALPN extension" ) );
   \       0x10   0x....'....        LDR.W    R0,??DataTable23
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0xF240 0x5346      MOVW     R3,#+1350
   \       0x1A   0x....'....        LDR.W    R2,??DataTable22
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x4620             MOV      R0,R4
   \       0x22   0x....'....        BL       mbedtls_debug_print_msg
   1351                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1352                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x26   0x2228             MOVS     R2,#+40
   \       0x28   0x2102             MOVS     R1,#+2
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x....'....        BL       mbedtls_ssl_send_alert_message
   1353                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x30   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0x32   0xBDF2             POP      {R1,R4-R7,PC}
   1354              }
   1355          
   1356              /*
   1357               * opaque ProtocolName<1..2^8-1>;
   1358               *
   1359               * struct {
   1360               *     ProtocolName protocol_name_list<2..2^16-1>
   1361               * } ProtocolNameList;
   1362               *
   1363               * the "ProtocolNameList" MUST contain exactly one "ProtocolName"
   1364               */
   1365          
   1366              /* Min length is 2 (list_len) + 1 (name_len) + 1 (name) */
   1367              if( len < 4 )
   \                     ??ssl_parse_alpn_ext_0: (+1)
   \       0x34   0x2A04             CMP      R2,#+4
   \       0x36   0xD30A             BCC.N    ??ssl_parse_alpn_ext_1
   1368              {
   1369                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1370                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   1371                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   1372              }
   1373          
   1374              list_len = ( buf[0] << 8 ) | buf[1];
   \       0x38   0x7829             LDRB     R1,[R5, #+0]
   \       0x3A   0x7868             LDRB     R0,[R5, #+1]
   \       0x3C   0xEA40 0x2001      ORR      R0,R0,R1, LSL #+8
   1375              if( list_len != len - 2 )
   \       0x40   0x1E92             SUBS     R2,R2,#+2
   \       0x42   0x4290             CMP      R0,R2
   \       0x44   0xD103             BNE.N    ??ssl_parse_alpn_ext_1
   1376              {
   1377                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1378                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   1379                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   1380              }
   1381          
   1382              name_len = buf[2];
   \       0x46   0x78AE             LDRB     R6,[R5, #+2]
   1383              if( name_len != list_len - 1 )
   \       0x48   0x1E40             SUBS     R0,R0,#+1
   \       0x4A   0x4286             CMP      R6,R0
   \       0x4C   0xD006             BEQ.N    ??ssl_parse_alpn_ext_2
   1384              {
   1385                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1386                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \                     ??ssl_parse_alpn_ext_1: (+1)
   \       0x4E   0x2232             MOVS     R2,#+50
   \       0x50   0x2102             MOVS     R1,#+2
   \       0x52   0x4620             MOV      R0,R4
   \       0x54   0x....'....        BL       mbedtls_ssl_send_alert_message
   1387                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0x58   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0x5A   0xBDF2             POP      {R1,R4-R7,PC}
   1388              }
   1389          
   1390              /* Check that the server chosen protocol was in our list and save it */
   1391              for( p = ssl->conf->alpn_list; *p != NULL; p++ )
   \                     ??ssl_parse_alpn_ext_2: (+1)
   \       0x5C   0x6820             LDR      R0,[R4, #+0]
   \       0x5E   0xF8D0 0x70A4      LDR      R7,[R0, #+164]
   \       0x62   0xE000             B.N      ??ssl_parse_alpn_ext_3
   \                     ??ssl_parse_alpn_ext_4: (+1)
   \       0x64   0x1D3F             ADDS     R7,R7,#+4
   \                     ??ssl_parse_alpn_ext_3: (+1)
   \       0x66   0x6838             LDR      R0,[R7, #+0]
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD00F             BEQ.N    ??ssl_parse_alpn_ext_5
   1392              {
   1393                  if( name_len == strlen( *p ) &&
   1394                      memcmp( buf + 3, *p, name_len ) == 0 )
   \       0x6C   0x....'....        BL       strlen
   \       0x70   0x4286             CMP      R6,R0
   \       0x72   0xD1F7             BNE.N    ??ssl_parse_alpn_ext_4
   \       0x74   0x4632             MOV      R2,R6
   \       0x76   0x6839             LDR      R1,[R7, #+0]
   \       0x78   0x1CE8             ADDS     R0,R5,#+3
   \       0x7A   0x....'....        BL       memcmp
   \       0x7E   0x2800             CMP      R0,#+0
   \       0x80   0xD1F0             BNE.N    ??ssl_parse_alpn_ext_4
   1395                  {
   1396                      ssl->alpn_chosen = *p;
   \       0x82   0x6838             LDR      R0,[R7, #+0]
   \       0x84   0xF8C4 0x00E8      STR      R0,[R4, #+232]
   1397                      return( 0 );
   \       0x88   0x2000             MOVS     R0,#+0
   \       0x8A   0xBDF2             POP      {R1,R4-R7,PC}
   1398                  }
   1399              }
   1400          
   1401              MBEDTLS_SSL_DEBUG_MSG( 1, ( "ALPN extension: no matching protocol" ) );
   \                     ??ssl_parse_alpn_ext_5: (+1)
   \       0x8C   0x....'....        LDR.W    R0,??DataTable24_1
   \       0x90   0x9000             STR      R0,[SP, #+0]
   \       0x92   0xF240 0x5379      MOVW     R3,#+1401
   \       0x96   0x....'....        LDR.W    R2,??DataTable22
   \       0x9A   0x2101             MOVS     R1,#+1
   \       0x9C   0x4620             MOV      R0,R4
   \       0x9E   0x....'....        BL       mbedtls_debug_print_msg
   1402              mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1403                                              MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0xA2   0x2228             MOVS     R2,#+40
   \       0xA4   0x2102             MOVS     R1,#+2
   \       0xA6   0x4620             MOV      R0,R4
   \       0xA8   0x....'....        BL       mbedtls_ssl_send_alert_message
   1404              return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0xAC   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0xAE   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1405          }
   1406          #endif /* MBEDTLS_SSL_ALPN */
   1407          
   1408          /*
   1409           * Parse HelloVerifyRequest.  Only called after verifying the HS type.
   1410           */
   1411          #if defined(MBEDTLS_SSL_PROTO_DTLS)

   \                                 In section .text, align 2, keep-with-next
   1412          static int ssl_parse_hello_verify_request( mbedtls_ssl_context *ssl )
   1413          {
   \                     ssl_parse_hello_verify_request: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x4604             MOV      R4,R0
   1414              const unsigned char *p = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl );
   \        0x6   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \        0xA   0x6F21             LDR      R1,[R4, #+112]
   \        0xC   0x180E             ADDS     R6,R1,R0
   1415              int major_ver, minor_ver;
   1416              unsigned char cookie_len;
   1417          
   1418              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse hello verify request" ) );
   \        0xE   0x....'....        LDR.W    R5,??DataTable22
   \       0x12   0x....'....        LDR.W    R0,??DataTable24_2
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF240 0x538A      MOVW     R3,#+1418
   \       0x1C   0x462A             MOV      R2,R5
   \       0x1E   0x2102             MOVS     R1,#+2
   \       0x20   0x4620             MOV      R0,R4
   \       0x22   0x....'....        BL       mbedtls_debug_print_msg
   1419          
   1420              /*
   1421               * struct {
   1422               *   ProtocolVersion server_version;
   1423               *   opaque cookie<0..2^8-1>;
   1424               * } HelloVerifyRequest;
   1425               */
   1426              MBEDTLS_SSL_DEBUG_BUF( 3, "server version", p, 2 );
   \       0x26   0x2002             MOVS     R0,#+2
   \       0x28   0x9002             STR      R0,[SP, #+8]
   \       0x2A   0x9601             STR      R6,[SP, #+4]
   \       0x2C   0x....'....        LDR.W    R0,??DataTable25
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0xF240 0x5392      MOVW     R3,#+1426
   \       0x36   0x462A             MOV      R2,R5
   \       0x38   0x2103             MOVS     R1,#+3
   \       0x3A   0x4620             MOV      R0,R4
   \       0x3C   0x....'....        BL       mbedtls_debug_print_buf
   1427              mbedtls_ssl_read_version( &major_ver, &minor_ver, ssl->conf->transport, p );
   \       0x40   0x4633             MOV      R3,R6
   \       0x42   0x6820             LDR      R0,[R4, #+0]
   \       0x44   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x48   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \       0x4C   0xA903             ADD      R1,SP,#+12
   \       0x4E   0xA804             ADD      R0,SP,#+16
   \       0x50   0x....'....        BL       mbedtls_ssl_read_version
   1428              p += 2;
   1429          
   1430              /*
   1431               * Since the RFC is not clear on this point, accept DTLS 1.0 (TLS 1.1)
   1432               * even is lower than our min version.
   1433               */
   1434              if( major_ver < MBEDTLS_SSL_MAJOR_VERSION_3 ||
   1435                  minor_ver < MBEDTLS_SSL_MINOR_VERSION_2 ||
   1436                  major_ver > ssl->conf->max_major_ver  ||
   1437                  minor_ver > ssl->conf->max_minor_ver  )
   \       0x54   0x9804             LDR      R0,[SP, #+16]
   \       0x56   0x2803             CMP      R0,#+3
   \       0x58   0xDB0E             BLT.N    ??ssl_parse_hello_verify_request_0
   \       0x5A   0x9803             LDR      R0,[SP, #+12]
   \       0x5C   0x2802             CMP      R0,#+2
   \       0x5E   0xDB0B             BLT.N    ??ssl_parse_hello_verify_request_0
   \       0x60   0x6820             LDR      R0,[R4, #+0]
   \       0x62   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \       0x66   0x9904             LDR      R1,[SP, #+16]
   \       0x68   0x4288             CMP      R0,R1
   \       0x6A   0xDB05             BLT.N    ??ssl_parse_hello_verify_request_0
   \       0x6C   0x6820             LDR      R0,[R4, #+0]
   \       0x6E   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \       0x72   0x9903             LDR      R1,[SP, #+12]
   \       0x74   0x4288             CMP      R0,R1
   \       0x76   0xDA11             BGE.N    ??ssl_parse_hello_verify_request_1
   1438              {
   1439                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server version" ) );
   \                     ??ssl_parse_hello_verify_request_0: (+1)
   \       0x78   0x....'....        LDR.W    R0,??DataTable26
   \       0x7C   0x9000             STR      R0,[SP, #+0]
   \       0x7E   0xF240 0x539F      MOVW     R3,#+1439
   \       0x82   0x462A             MOV      R2,R5
   \       0x84   0x2101             MOVS     R1,#+1
   \       0x86   0x4620             MOV      R0,R4
   \       0x88   0x....'....        BL       mbedtls_debug_print_msg
   1440          
   1441                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1442                                               MBEDTLS_SSL_ALERT_MSG_PROTOCOL_VERSION );
   \       0x8C   0x2246             MOVS     R2,#+70
   \       0x8E   0x2102             MOVS     R1,#+2
   \       0x90   0x4620             MOV      R0,R4
   \       0x92   0x....'....        BL       mbedtls_ssl_send_alert_message
   1443          
   1444                  return( MBEDTLS_ERR_SSL_BAD_HS_PROTOCOL_VERSION );
   \       0x96   0x....'....        LDR.W    R0,??DataTable26_1  ;; 0xffff9180
   \       0x9A   0xE060             B.N      ??ssl_parse_hello_verify_request_2
   1445              }
   1446          
   1447              cookie_len = *p++;
   \                     ??ssl_parse_hello_verify_request_1: (+1)
   \       0x9C   0x78B7             LDRB     R7,[R6, #+2]
   \       0x9E   0x1CF6             ADDS     R6,R6,#+3
   1448              MBEDTLS_SSL_DEBUG_BUF( 3, "cookie", p, cookie_len );
   \       0xA0   0x9702             STR      R7,[SP, #+8]
   \       0xA2   0x9601             STR      R6,[SP, #+4]
   \       0xA4   0x....'....        LDR.W    R0,??DataTable26_2
   \       0xA8   0x9000             STR      R0,[SP, #+0]
   \       0xAA   0xF44F 0x63B5      MOV      R3,#+1448
   \       0xAE   0x462A             MOV      R2,R5
   \       0xB0   0x2103             MOVS     R1,#+3
   \       0xB2   0x4620             MOV      R0,R4
   \       0xB4   0x....'....        BL       mbedtls_debug_print_buf
   1449          
   1450              if( ( ssl->in_msg + ssl->in_msglen ) - p < cookie_len )
   \       0xB8   0x6F20             LDR      R0,[R4, #+112]
   \       0xBA   0x6FE1             LDR      R1,[R4, #+124]
   \       0xBC   0x4408             ADD      R0,R0,R1
   \       0xBE   0x1B80             SUBS     R0,R0,R6
   \       0xC0   0x42B8             CMP      R0,R7
   \       0xC2   0xDA10             BGE.N    ??ssl_parse_hello_verify_request_3
   1451              {
   1452                  MBEDTLS_SSL_DEBUG_MSG( 1,
   1453                      ( "cookie length does not match incoming message size" ) );
   \       0xC4   0x....'....        LDR.W    R0,??DataTable26_3
   \       0xC8   0x9000             STR      R0,[SP, #+0]
   \       0xCA   0xF240 0x53AD      MOVW     R3,#+1453
   \       0xCE   0x462A             MOV      R2,R5
   \       0xD0   0x2101             MOVS     R1,#+1
   \       0xD2   0x4620             MOV      R0,R4
   \       0xD4   0x....'....        BL       mbedtls_debug_print_msg
   1454                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1455                                              MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \       0xD8   0x2232             MOVS     R2,#+50
   \       0xDA   0x2102             MOVS     R1,#+2
   \       0xDC   0x4620             MOV      R0,R4
   \       0xDE   0x....'....        BL       mbedtls_ssl_send_alert_message
   1456                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \       0xE2   0x....             LDR.N    R0,??DataTable21_27  ;; 0xffff8680
   \       0xE4   0xE03B             B.N      ??ssl_parse_hello_verify_request_2
   1457              }
   1458          
   1459              mbedtls_free( ssl->handshake->verify_cookie );
   \                     ??ssl_parse_hello_verify_request_3: (+1)
   \       0xE6   0x6BE0             LDR      R0,[R4, #+60]
   \       0xE8   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \       0xEC   0x....'....        BL       mbedtls_free
   1460          
   1461              ssl->handshake->verify_cookie = mbedtls_calloc( 1, cookie_len );
   \       0xF0   0x4639             MOV      R1,R7
   \       0xF2   0x2001             MOVS     R0,#+1
   \       0xF4   0x....'....        BL       mbedtls_calloc
   \       0xF8   0x6BE1             LDR      R1,[R4, #+60]
   \       0xFA   0xF8C1 0x01DC      STR      R0,[R1, #+476]
   1462              if( ssl->handshake->verify_cookie  == NULL )
   \       0xFE   0x6BE0             LDR      R0,[R4, #+60]
   \      0x100   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \      0x104   0x2800             CMP      R0,#+0
   \      0x106   0xD10D             BNE.N    ??ssl_parse_hello_verify_request_4
   1463              {
   1464                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "alloc failed (%d bytes)", cookie_len ) );
   \      0x108   0x9701             STR      R7,[SP, #+4]
   \      0x10A   0x....'....        LDR.W    R0,??DataTable26_4
   \      0x10E   0x9000             STR      R0,[SP, #+0]
   \      0x110   0xF44F 0x63B7      MOV      R3,#+1464
   \      0x114   0x462A             MOV      R2,R5
   \      0x116   0x2101             MOVS     R1,#+1
   \      0x118   0x4620             MOV      R0,R4
   \      0x11A   0x....'....        BL       mbedtls_debug_print_msg
   1465                  return( MBEDTLS_ERR_SSL_ALLOC_FAILED );
   \      0x11E   0x....'....        LDR.W    R0,??DataTable26_5  ;; 0xffff8100
   \      0x122   0xE01C             B.N      ??ssl_parse_hello_verify_request_2
   1466              }
   1467          
   1468              memcpy( ssl->handshake->verify_cookie, p, cookie_len );
   \                     ??ssl_parse_hello_verify_request_4: (+1)
   \      0x124   0x463A             MOV      R2,R7
   \      0x126   0x4631             MOV      R1,R6
   \      0x128   0x6BE0             LDR      R0,[R4, #+60]
   \      0x12A   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \      0x12E   0x....'....        BL       __aeabi_memcpy
   1469              ssl->handshake->verify_cookie_len = cookie_len;
   \      0x132   0x6BE0             LDR      R0,[R4, #+60]
   \      0x134   0xF880 0x71E0      STRB     R7,[R0, #+480]
   1470          
   1471              /* Start over at ClientHello */
   1472              ssl->state = MBEDTLS_SSL_CLIENT_HELLO;
   \      0x138   0x2001             MOVS     R0,#+1
   \      0x13A   0x6060             STR      R0,[R4, #+4]
   1473              mbedtls_ssl_reset_checksum( ssl );
   \      0x13C   0x4620             MOV      R0,R4
   \      0x13E   0x....'....        BL       mbedtls_ssl_reset_checksum
   1474          
   1475              mbedtls_ssl_recv_flight_completed( ssl );
   \      0x142   0x4620             MOV      R0,R4
   \      0x144   0x....'....        BL       mbedtls_ssl_recv_flight_completed
   1476          
   1477              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse hello verify request" ) );
   \      0x148   0x....'....        LDR.W    R0,??DataTable27
   \      0x14C   0x9000             STR      R0,[SP, #+0]
   \      0x14E   0xF240 0x53C5      MOVW     R3,#+1477
   \      0x152   0x462A             MOV      R2,R5
   \      0x154   0x2102             MOVS     R1,#+2
   \      0x156   0x4620             MOV      R0,R4
   \      0x158   0x....'....        BL       mbedtls_debug_print_msg
   1478          
   1479              return( 0 );
   \      0x15C   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_hello_verify_request_2: (+1)
   \      0x15E   0xB005             ADD      SP,SP,#+20
   \      0x160   0xBDF0             POP      {R4-R7,PC}       ;; return
   1480          }
   1481          #endif /* MBEDTLS_SSL_PROTO_DTLS */
   1482          

   \                                 In section .text, align 4, keep-with-next
   1483          static int ssl_parse_server_hello( mbedtls_ssl_context *ssl )
   1484          {
   \                     ssl_parse_server_hello: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB087             SUB      SP,SP,#+28
   \        0x6   0x4607             MOV      R7,R0
   1485              int ret, i;
   1486              size_t n;
   1487              size_t ext_len;
   1488              unsigned char *buf, *ext;
   1489              unsigned char comp;
   1490          #if defined(MBEDTLS_ZLIB_SUPPORT)
   1491              int accept_comp;
   1492          #endif
   1493          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1494              int renegotiation_info_seen = 0;
   \        0x8   0xF04F 0x0800      MOV      R8,#+0
   1495          #endif
   1496              int handshake_failure = 0;
   \        0xC   0x4645             MOV      R5,R8
   1497              const mbedtls_ssl_ciphersuite_t *suite_info;
   1498          
   1499              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse server hello" ) );
   \        0xE   0x....'....        LDR.W    R6,??DataTable22
   \       0x12   0x....'....        LDR.W    R0,??DataTable26_6
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF240 0x53DB      MOVW     R3,#+1499
   \       0x1C   0x4632             MOV      R2,R6
   \       0x1E   0x2102             MOVS     R1,#+2
   \       0x20   0x4638             MOV      R0,R7
   \       0x22   0x....'....        BL       mbedtls_debug_print_msg
   1500          
   1501              buf = ssl->in_msg;
   \       0x26   0xF8D7 0x9070      LDR      R9,[R7, #+112]
   1502          
   1503              if( ( ret = mbedtls_ssl_read_record( ssl, 1 ) ) != 0 )
   \       0x2A   0x2101             MOVS     R1,#+1
   \       0x2C   0x4638             MOV      R0,R7
   \       0x2E   0x....'....        BL       mbedtls_ssl_read_record
   \       0x32   0x0004             MOVS     R4,R0
   \       0x34   0xD00D             BEQ.N    ??ssl_parse_server_hello_2
   1504              {
   1505                  /* No alert on a read error. */
   1506                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_read_record", ret );
   \       0x36   0x9401             STR      R4,[SP, #+4]
   \       0x38   0x....'....        LDR.W    R0,??DataTable27_1
   \       0x3C   0x9000             STR      R0,[SP, #+0]
   \       0x3E   0xF240 0x53E2      MOVW     R3,#+1506
   \       0x42   0x4632             MOV      R2,R6
   \       0x44   0x2101             MOVS     R1,#+1
   \       0x46   0x4638             MOV      R0,R7
   \       0x48   0x....'....        BL       mbedtls_debug_print_ret
   1507                  return( ret );
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0xF000 0xBC23      B.W      ??ssl_parse_server_hello_3
   1508              }
   1509          
   1510              if( ssl->in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE )
   \                     ??ssl_parse_server_hello_2: (+1)
   \       0x52   0x6FB8             LDR      R0,[R7, #+120]
   \       0x54   0x2816             CMP      R0,#+22
   \       0x56   0xD040             BEQ.N    ??ssl_parse_server_hello_4
   1511              {
   1512          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1513                  if( ssl->renego_status == MBEDTLS_SSL_RENEGOTIATION_IN_PROGRESS )
   \       0x58   0x68B8             LDR      R0,[R7, #+8]
   \       0x5A   0x2801             CMP      R0,#+1
   \       0x5C   0xD12B             BNE.N    ??ssl_parse_server_hello_5
   1514                  {
   1515                      ssl->renego_records_seen++;
   \       0x5E   0x68F8             LDR      R0,[R7, #+12]
   \       0x60   0x1C40             ADDS     R0,R0,#+1
   \       0x62   0x60F8             STR      R0,[R7, #+12]
   1516          
   1517                      if( ssl->conf->renego_max_records >= 0 &&
   1518                          ssl->renego_records_seen > ssl->conf->renego_max_records )
   \       0x64   0x6838             LDR      R0,[R7, #+0]
   \       0x66   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \       0x6A   0x2800             CMP      R0,#+0
   \       0x6C   0xD413             BMI.N    ??ssl_parse_server_hello_6
   \       0x6E   0x6838             LDR      R0,[R7, #+0]
   \       0x70   0xF8D0 0x00B4      LDR      R0,[R0, #+180]
   \       0x74   0x68F9             LDR      R1,[R7, #+12]
   \       0x76   0x4288             CMP      R0,R1
   \       0x78   0xDA0D             BGE.N    ??ssl_parse_server_hello_6
   1519                      {
   1520                          MBEDTLS_SSL_DEBUG_MSG( 1, ( "renegotiation requested, "
   1521                                              "but not honored by server" ) );
   \       0x7A   0x....'....        LDR.W    R0,??DataTable27_2
   \       0x7E   0x9000             STR      R0,[SP, #+0]
   \       0x80   0xF240 0x53F1      MOVW     R3,#+1521
   \       0x84   0x4632             MOV      R2,R6
   \       0x86   0x2101             MOVS     R1,#+1
   \       0x88   0x4638             MOV      R0,R7
   \       0x8A   0x....'....        BL       mbedtls_debug_print_msg
   1522                          return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0x8E   0x....'....        LDR.W    R0,??DataTable28  ;; 0xffff8900
   \       0x92   0xF000 0xBC01      B.W      ??ssl_parse_server_hello_3
   1523                      }
   1524          
   1525                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "non-handshake message during renego" ) );
   \                     ??ssl_parse_server_hello_6: (+1)
   \       0x96   0x....'....        LDR.W    R0,??DataTable27_3
   \       0x9A   0x9000             STR      R0,[SP, #+0]
   \       0x9C   0xF240 0x53F5      MOVW     R3,#+1525
   \       0xA0   0x4632             MOV      R2,R6
   \       0xA2   0x2101             MOVS     R1,#+1
   \       0xA4   0x4638             MOV      R0,R7
   \       0xA6   0x....'....        BL       mbedtls_debug_print_msg
   1526          
   1527                      ssl->keep_current_message = 1;
   \       0xAA   0x2001             MOVS     R0,#+1
   \       0xAC   0xF8C7 0x00A8      STR      R0,[R7, #+168]
   1528                      return( MBEDTLS_ERR_SSL_WAITING_SERVER_HELLO_RENEGO );
   \       0xB0   0x....'....        LDR.W    R0,??DataTable27_4  ;; 0xffff9500
   \       0xB4   0xE3F0             B.N      ??ssl_parse_server_hello_3
   1529                  }
   1530          #endif /* MBEDTLS_SSL_RENEGOTIATION */
   1531          
   1532                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \                     ??ssl_parse_server_hello_5: (+1)
   \       0xB6   0x....'....        LDR.W    R0,??DataTable24
   \       0xBA   0x9000             STR      R0,[SP, #+0]
   \       0xBC   0xF240 0x53FC      MOVW     R3,#+1532
   \       0xC0   0x4632             MOV      R2,R6
   \       0xC2   0x2101             MOVS     R1,#+1
   \       0xC4   0x4638             MOV      R0,R7
   \       0xC6   0x....'....        BL       mbedtls_debug_print_msg
   1533                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1534                                                  MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE );
   \       0xCA   0x220A             MOVS     R2,#+10
   \       0xCC   0x2102             MOVS     R1,#+2
   \       0xCE   0x4638             MOV      R0,R7
   \       0xD0   0x....'....        BL       mbedtls_ssl_send_alert_message
   1535                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0xD4   0x....'....        LDR.W    R0,??DataTable28  ;; 0xffff8900
   \       0xD8   0xE3DE             B.N      ??ssl_parse_server_hello_3
   1536              }
   1537          
   1538          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   1539              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
   \                     ??ssl_parse_server_hello_4: (+1)
   \       0xDA   0x6838             LDR      R0,[R7, #+0]
   \       0xDC   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0xE0   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \       0xE4   0x2800             CMP      R0,#+0
   \       0xE6   0xD028             BEQ.N    ??ssl_parse_server_hello_7
   1540              {
   1541                  if( buf[0] == MBEDTLS_SSL_HS_HELLO_VERIFY_REQUEST )
   \       0xE8   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \       0xEC   0x2803             CMP      R0,#+3
   \       0xEE   0xD118             BNE.N    ??ssl_parse_server_hello_8
   1542                  {
   1543                      MBEDTLS_SSL_DEBUG_MSG( 2, ( "received hello verify request" ) );
   \       0xF0   0x....'....        LDR.W    R0,??DataTable27_5
   \       0xF4   0x9000             STR      R0,[SP, #+0]
   \       0xF6   0xF240 0x6307      MOVW     R3,#+1543
   \       0xFA   0x4632             MOV      R2,R6
   \       0xFC   0x2102             MOVS     R1,#+2
   \       0xFE   0x4638             MOV      R0,R7
   \      0x100   0x....'....        BL       mbedtls_debug_print_msg
   1544                      MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse server hello" ) );
   \      0x104   0x....'....        LDR.W    R0,??DataTable28_1
   \      0x108   0x9000             STR      R0,[SP, #+0]
   \      0x10A   0xF44F 0x63C1      MOV      R3,#+1544
   \      0x10E   0x4632             MOV      R2,R6
   \      0x110   0x2102             MOVS     R1,#+2
   \      0x112   0x4638             MOV      R0,R7
   \      0x114   0x....'....        BL       mbedtls_debug_print_msg
   1545                      return( ssl_parse_hello_verify_request( ssl ) );
   \      0x118   0x4638             MOV      R0,R7
   \      0x11A   0xB007             ADD      SP,SP,#+28
   \      0x11C   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \      0x120   0x....             B.N      ssl_parse_hello_verify_request
   1546                  }
   1547                  else
   1548                  {
   1549                      /* We made it through the verification process */
   1550                      mbedtls_free( ssl->handshake->verify_cookie );
   \                     ??ssl_parse_server_hello_8: (+1)
   \      0x122   0x6BF8             LDR      R0,[R7, #+60]
   \      0x124   0xF8D0 0x01DC      LDR      R0,[R0, #+476]
   \      0x128   0x....'....        BL       mbedtls_free
   1551                      ssl->handshake->verify_cookie = NULL;
   \      0x12C   0x4628             MOV      R0,R5
   \      0x12E   0x6BF9             LDR      R1,[R7, #+60]
   \      0x130   0xF8C1 0x01DC      STR      R0,[R1, #+476]
   1552                      ssl->handshake->verify_cookie_len = 0;
   \      0x134   0x6BF9             LDR      R1,[R7, #+60]
   \      0x136   0xF881 0x01E0      STRB     R0,[R1, #+480]
   1553                  }
   1554              }
   1555          #endif /* MBEDTLS_SSL_PROTO_DTLS */
   1556          
   1557              if( ssl->in_hslen < 38 + mbedtls_ssl_hs_hdr_len( ssl ) ||
   1558                  buf[0] != MBEDTLS_SSL_HS_SERVER_HELLO )
   \                     ??ssl_parse_server_hello_7: (+1)
   \      0x13A   0x4638             MOV      R0,R7
   \      0x13C   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x140   0xF8D7 0x10A0      LDR      R1,[R7, #+160]
   \      0x144   0x3026             ADDS     R0,R0,#+38
   \      0x146   0x4281             CMP      R1,R0
   \      0x148   0xD303             BCC.N    ??ssl_parse_server_hello_9
   \      0x14A   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \      0x14E   0x2802             CMP      R0,#+2
   \      0x150   0xD011             BEQ.N    ??ssl_parse_server_hello_10
   1559              {
   1560                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \                     ??ssl_parse_server_hello_9: (+1)
   \      0x152   0x....'....        LDR.W    R0,??DataTable24
   \      0x156   0x9000             STR      R0,[SP, #+0]
   \      0x158   0xF44F 0x63C3      MOV      R3,#+1560
   \      0x15C   0x4632             MOV      R2,R6
   \      0x15E   0x2101             MOVS     R1,#+1
   \      0x160   0x4638             MOV      R0,R7
   \      0x162   0x....'....        BL       mbedtls_debug_print_msg
   1561                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1562                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \      0x166   0x2232             MOVS     R2,#+50
   \      0x168   0x2102             MOVS     R1,#+2
   \      0x16A   0x4638             MOV      R0,R7
   \      0x16C   0x....'....        BL       mbedtls_ssl_send_alert_message
   1563                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x170   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x174   0xE390             B.N      ??ssl_parse_server_hello_3
   1564              }
   1565          
   1566              /*
   1567               *  0   .  1    server_version
   1568               *  2   . 33    random (maybe including 4 bytes of Unix time)
   1569               * 34   . 34    session_id length = n
   1570               * 35   . 34+n  session_id
   1571               * 35+n . 36+n  cipher_suite
   1572               * 37+n . 37+n  compression_method
   1573               *
   1574               * 38+n . 39+n  extensions length (optional)
   1575               * 40+n .  ..   extensions
   1576               */
   1577              buf += mbedtls_ssl_hs_hdr_len( ssl );
   \                     ??ssl_parse_server_hello_10: (+1)
   \      0x176   0x4638             MOV      R0,R7
   \      0x178   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x17C   0xEB09 0x0A00      ADD      R10,R9,R0
   1578          
   1579              MBEDTLS_SSL_DEBUG_BUF( 3, "server hello, version", buf + 0, 2 );
   \      0x180   0x2002             MOVS     R0,#+2
   \      0x182   0x9002             STR      R0,[SP, #+8]
   \      0x184   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \      0x188   0x....'....        LDR.W    R0,??DataTable28_2
   \      0x18C   0x9000             STR      R0,[SP, #+0]
   \      0x18E   0xF240 0x632B      MOVW     R3,#+1579
   \      0x192   0x4632             MOV      R2,R6
   \      0x194   0x2103             MOVS     R1,#+3
   \      0x196   0x4638             MOV      R0,R7
   \      0x198   0x....'....        BL       mbedtls_debug_print_buf
   1580              mbedtls_ssl_read_version( &ssl->major_ver, &ssl->minor_ver,
   1581                                ssl->conf->transport, buf + 0 );
   \      0x19C   0x4653             MOV      R3,R10
   \      0x19E   0x6838             LDR      R0,[R7, #+0]
   \      0x1A0   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \      0x1A4   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \      0x1A8   0xF107 0x0114      ADD      R1,R7,#+20
   \      0x1AC   0xF107 0x0010      ADD      R0,R7,#+16
   \      0x1B0   0x....'....        BL       mbedtls_ssl_read_version
   1582          
   1583              if( ssl->major_ver < ssl->conf->min_major_ver ||
   1584                  ssl->minor_ver < ssl->conf->min_minor_ver ||
   1585                  ssl->major_ver > ssl->conf->max_major_ver ||
   1586                  ssl->minor_ver > ssl->conf->max_minor_ver )
   \      0x1B4   0x6938             LDR      R0,[R7, #+16]
   \      0x1B6   0x6839             LDR      R1,[R7, #+0]
   \      0x1B8   0xF891 0x10CA      LDRB     R1,[R1, #+202]
   \      0x1BC   0x4288             CMP      R0,R1
   \      0x1BE   0xDB11             BLT.N    ??ssl_parse_server_hello_11
   \      0x1C0   0x6978             LDR      R0,[R7, #+20]
   \      0x1C2   0x6839             LDR      R1,[R7, #+0]
   \      0x1C4   0xF891 0x10CB      LDRB     R1,[R1, #+203]
   \      0x1C8   0x4288             CMP      R0,R1
   \      0x1CA   0xDB0B             BLT.N    ??ssl_parse_server_hello_11
   \      0x1CC   0x6838             LDR      R0,[R7, #+0]
   \      0x1CE   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \      0x1D2   0x6939             LDR      R1,[R7, #+16]
   \      0x1D4   0x4288             CMP      R0,R1
   \      0x1D6   0xDB05             BLT.N    ??ssl_parse_server_hello_11
   \      0x1D8   0x6838             LDR      R0,[R7, #+0]
   \      0x1DA   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \      0x1DE   0x6979             LDR      R1,[R7, #+20]
   \      0x1E0   0x4288             CMP      R0,R1
   \      0x1E2   0xDA25             BGE.N    ??ssl_parse_server_hello_12
   1587              {
   1588                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server version out of bounds - "
   1589                                      " min: [%d:%d], server: [%d:%d], max: [%d:%d]",
   1590                                      ssl->conf->min_major_ver, ssl->conf->min_minor_ver,
   1591                                      ssl->major_ver, ssl->minor_ver,
   1592                                      ssl->conf->max_major_ver, ssl->conf->max_minor_ver ) );
   \                     ??ssl_parse_server_hello_11: (+1)
   \      0x1E4   0x6838             LDR      R0,[R7, #+0]
   \      0x1E6   0xF890 0x00C9      LDRB     R0,[R0, #+201]
   \      0x1EA   0x9006             STR      R0,[SP, #+24]
   \      0x1EC   0x6838             LDR      R0,[R7, #+0]
   \      0x1EE   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \      0x1F2   0x9005             STR      R0,[SP, #+20]
   \      0x1F4   0x6978             LDR      R0,[R7, #+20]
   \      0x1F6   0x9004             STR      R0,[SP, #+16]
   \      0x1F8   0x6938             LDR      R0,[R7, #+16]
   \      0x1FA   0x9003             STR      R0,[SP, #+12]
   \      0x1FC   0x6838             LDR      R0,[R7, #+0]
   \      0x1FE   0xF890 0x00CB      LDRB     R0,[R0, #+203]
   \      0x202   0x9002             STR      R0,[SP, #+8]
   \      0x204   0x6838             LDR      R0,[R7, #+0]
   \      0x206   0xF890 0x00CA      LDRB     R0,[R0, #+202]
   \      0x20A   0x9001             STR      R0,[SP, #+4]
   \      0x20C   0x....'....        LDR.W    R0,??DataTable29
   \      0x210   0x9000             STR      R0,[SP, #+0]
   \      0x212   0xF44F 0x63C7      MOV      R3,#+1592
   \      0x216   0x4632             MOV      R2,R6
   \      0x218   0x2101             MOVS     R1,#+1
   \      0x21A   0x4638             MOV      R0,R7
   \      0x21C   0x....'....        BL       mbedtls_debug_print_msg
   1593          
   1594                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1595                                               MBEDTLS_SSL_ALERT_MSG_PROTOCOL_VERSION );
   \      0x220   0x2246             MOVS     R2,#+70
   \      0x222   0x2102             MOVS     R1,#+2
   \      0x224   0x4638             MOV      R0,R7
   \      0x226   0x....'....        BL       mbedtls_ssl_send_alert_message
   1596          
   1597                  return( MBEDTLS_ERR_SSL_BAD_HS_PROTOCOL_VERSION );
   \      0x22A   0x....'....        LDR.W    R0,??DataTable26_1  ;; 0xffff9180
   \      0x22E   0xE333             B.N      ??ssl_parse_server_hello_3
   1598              }
   1599          
   1600              MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, current time: %lu",
   1601                                     ( (uint32_t) buf[2] << 24 ) |
   1602                                     ( (uint32_t) buf[3] << 16 ) |
   1603                                     ( (uint32_t) buf[4] <<  8 ) |
   1604                                     ( (uint32_t) buf[5]       ) ) );
   \                     ??ssl_parse_server_hello_12: (+1)
   \      0x230   0xF89A 0x0002      LDRB     R0,[R10, #+2]
   \      0x234   0xF89A 0x1003      LDRB     R1,[R10, #+3]
   \      0x238   0x0409             LSLS     R1,R1,#+16
   \      0x23A   0xEA41 0x6100      ORR      R1,R1,R0, LSL #+24
   \      0x23E   0xF89A 0x0004      LDRB     R0,[R10, #+4]
   \      0x242   0xEA41 0x2100      ORR      R1,R1,R0, LSL #+8
   \      0x246   0xF89A 0x0005      LDRB     R0,[R10, #+5]
   \      0x24A   0x4301             ORRS     R1,R0,R1
   \      0x24C   0x9101             STR      R1,[SP, #+4]
   \      0x24E   0x....'....        LDR.W    R0,??DataTable29_1
   \      0x252   0x9000             STR      R0,[SP, #+0]
   \      0x254   0xF240 0x6344      MOVW     R3,#+1604
   \      0x258   0x4632             MOV      R2,R6
   \      0x25A   0x2103             MOVS     R1,#+3
   \      0x25C   0x4638             MOV      R0,R7
   \      0x25E   0x....'....        BL       mbedtls_debug_print_msg
   1605          
   1606              memcpy( ssl->handshake->randbytes + 32, buf + 2, 32 );
   \      0x262   0x2220             MOVS     R2,#+32
   \      0x264   0xF10A 0x0102      ADD      R1,R10,#+2
   \      0x268   0x6BF8             LDR      R0,[R7, #+60]
   \      0x26A   0xF200 0x407C      ADDW     R0,R0,#+1148
   \      0x26E   0x....'....        BL       __aeabi_memcpy
   1607          
   1608              n = buf[34];
   \      0x272   0xF89A 0x9022      LDRB     R9,[R10, #+34]
   1609          
   1610              MBEDTLS_SSL_DEBUG_BUF( 3,   "server hello, random bytes", buf + 2, 32 );
   \      0x276   0x2020             MOVS     R0,#+32
   \      0x278   0x9002             STR      R0,[SP, #+8]
   \      0x27A   0xF10A 0x0002      ADD      R0,R10,#+2
   \      0x27E   0x9001             STR      R0,[SP, #+4]
   \      0x280   0x....'....        LDR.W    R0,??DataTable29_2
   \      0x284   0x9000             STR      R0,[SP, #+0]
   \      0x286   0xF240 0x634A      MOVW     R3,#+1610
   \      0x28A   0x4632             MOV      R2,R6
   \      0x28C   0x2103             MOVS     R1,#+3
   \      0x28E   0x4638             MOV      R0,R7
   \      0x290   0x....'....        BL       mbedtls_debug_print_buf
   1611          
   1612              if( n > 32 )
   \      0x294   0xF1B9 0x0F21      CMP      R9,#+33
   \      0x298   0xD311             BCC.N    ??ssl_parse_server_hello_13
   1613              {
   1614                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \      0x29A   0x....'....        LDR.W    R0,??DataTable24
   \      0x29E   0x9000             STR      R0,[SP, #+0]
   \      0x2A0   0xF240 0x634E      MOVW     R3,#+1614
   \      0x2A4   0x4632             MOV      R2,R6
   \      0x2A6   0x2101             MOVS     R1,#+1
   \      0x2A8   0x4638             MOV      R0,R7
   \      0x2AA   0x....'....        BL       mbedtls_debug_print_msg
   1615                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1616                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \      0x2AE   0x2232             MOVS     R2,#+50
   \      0x2B0   0x2102             MOVS     R1,#+2
   \      0x2B2   0x4638             MOV      R0,R7
   \      0x2B4   0x....'....        BL       mbedtls_ssl_send_alert_message
   1617                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x2B8   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x2BC   0xE2EC             B.N      ??ssl_parse_server_hello_3
   1618              }
   1619          
   1620              if( ssl->in_hslen > mbedtls_ssl_hs_hdr_len( ssl ) + 39 + n )
   \                     ??ssl_parse_server_hello_13: (+1)
   \      0x2BE   0x4638             MOV      R0,R7
   \      0x2C0   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x2C4   0x4448             ADD      R0,R9,R0
   \      0x2C6   0x3027             ADDS     R0,R0,#+39
   \      0x2C8   0xF8D7 0x10A0      LDR      R1,[R7, #+160]
   \      0x2CC   0x4288             CMP      R0,R1
   \      0x2CE   0xD228             BCS.N    ??ssl_parse_server_hello_14
   1621              {
   1622                  ext_len = ( ( buf[38 + n] <<  8 )
   1623                            | ( buf[39 + n]       ) );
   \      0x2D0   0xEB0A 0x0009      ADD      R0,R10,R9
   \      0x2D4   0xF890 0x0026      LDRB     R0,[R0, #+38]
   \      0x2D8   0xEB0A 0x0109      ADD      R1,R10,R9
   \      0x2DC   0xF891 0x4027      LDRB     R4,[R1, #+39]
   \      0x2E0   0xEA54 0x2400      ORRS     R4,R4,R0, LSL #+8
   1624          
   1625                  if( ( ext_len > 0 && ext_len < 4 ) ||
   1626                      ssl->in_hslen != mbedtls_ssl_hs_hdr_len( ssl ) + 40 + n + ext_len )
   \      0x2E4   0xD001             BEQ.N    ??ssl_parse_server_hello_15
   \      0x2E6   0x2C04             CMP      R4,#+4
   \      0x2E8   0xD309             BCC.N    ??ssl_parse_server_hello_16
   \                     ??ssl_parse_server_hello_15: (+1)
   \      0x2EA   0x4638             MOV      R0,R7
   \      0x2EC   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x2F0   0xF8D7 0x10A0      LDR      R1,[R7, #+160]
   \      0x2F4   0x4448             ADD      R0,R9,R0
   \      0x2F6   0x1820             ADDS     R0,R4,R0
   \      0x2F8   0x3028             ADDS     R0,R0,#+40
   \      0x2FA   0x4281             CMP      R1,R0
   \      0x2FC   0xD01B             BEQ.N    ??ssl_parse_server_hello_17
   1627                  {
   1628                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \                     ??ssl_parse_server_hello_16: (+1)
   \      0x2FE   0x....'....        LDR.W    R0,??DataTable24
   \      0x302   0x9000             STR      R0,[SP, #+0]
   \      0x304   0xF240 0x635C      MOVW     R3,#+1628
   \      0x308   0x4632             MOV      R2,R6
   \      0x30A   0x2101             MOVS     R1,#+1
   \      0x30C   0x4638             MOV      R0,R7
   \      0x30E   0x....'....        BL       mbedtls_debug_print_msg
   1629                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1630                                                      MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \      0x312   0x2232             MOVS     R2,#+50
   \      0x314   0x2102             MOVS     R1,#+2
   \      0x316   0x4638             MOV      R0,R7
   \      0x318   0x....'....        BL       mbedtls_ssl_send_alert_message
   1631                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x31C   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x320   0xE2BA             B.N      ??ssl_parse_server_hello_3
   1632                  }
   1633              }
   1634              else if( ssl->in_hslen == mbedtls_ssl_hs_hdr_len( ssl ) + 38 + n )
   \                     ??ssl_parse_server_hello_14: (+1)
   \      0x322   0x4638             MOV      R0,R7
   \      0x324   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x328   0xF8D7 0x10A0      LDR      R1,[R7, #+160]
   \      0x32C   0x4448             ADD      R0,R9,R0
   \      0x32E   0x3026             ADDS     R0,R0,#+38
   \      0x330   0x4281             CMP      R1,R0
   \      0x332   0xD123             BNE.N    ??ssl_parse_server_hello_18
   1635              {
   1636                  ext_len = 0;
   \      0x334   0x462C             MOV      R4,R5
   1637              }
   1638              else
   1639              {
   1640                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   1641                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1642                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   1643                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   1644              }
   1645          
   1646              /* ciphersuite (used later) */
   1647              i = ( buf[35 + n] << 8 ) | buf[36 + n];
   \                     ??ssl_parse_server_hello_17: (+1)
   \      0x336   0xEB0A 0x0009      ADD      R0,R10,R9
   \      0x33A   0xF890 0x0023      LDRB     R0,[R0, #+35]
   \      0x33E   0xEB0A 0x0109      ADD      R1,R10,R9
   \      0x342   0xF891 0xB024      LDRB     R11,[R1, #+36]
   \      0x346   0xEA4B 0x2B00      ORR      R11,R11,R0, LSL #+8
   1648          
   1649              /*
   1650               * Read and check compression
   1651               */
   1652              comp = buf[37 + n];
   \      0x34A   0xEB0A 0x0009      ADD      R0,R10,R9
   \      0x34E   0xF890 0x0025      LDRB     R0,[R0, #+37]
   1653          
   1654          #if defined(MBEDTLS_ZLIB_SUPPORT)
   1655              /* See comments in ssl_write_client_hello() */
   1656          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   1657              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
   1658                  accept_comp = 0;
   1659              else
   1660          #endif
   1661                  accept_comp = 1;
   1662          
   1663              if( comp != MBEDTLS_SSL_COMPRESS_NULL &&
   1664                  ( comp != MBEDTLS_SSL_COMPRESS_DEFLATE || accept_comp == 0 ) )
   1665          #else /* MBEDTLS_ZLIB_SUPPORT */
   1666              if( comp != MBEDTLS_SSL_COMPRESS_NULL )
   \      0x352   0x2800             CMP      R0,#+0
   \      0x354   0xD024             BEQ.N    ??ssl_parse_server_hello_19
   1667          #endif/* MBEDTLS_ZLIB_SUPPORT */
   1668              {
   1669                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server hello, bad compression: %d", comp ) );
   \      0x356   0x9001             STR      R0,[SP, #+4]
   \      0x358   0x....'....        LDR.W    R0,??DataTable29_3
   \      0x35C   0x9000             STR      R0,[SP, #+0]
   \      0x35E   0xF240 0x6385      MOVW     R3,#+1669
   \      0x362   0x4632             MOV      R2,R6
   \      0x364   0x2101             MOVS     R1,#+1
   \      0x366   0x4638             MOV      R0,R7
   \      0x368   0x....'....        BL       mbedtls_debug_print_msg
   1670                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1671                                                  MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   \      0x36C   0x222F             MOVS     R2,#+47
   \      0x36E   0x2102             MOVS     R1,#+2
   \      0x370   0x4638             MOV      R0,R7
   \      0x372   0x....'....        BL       mbedtls_ssl_send_alert_message
   1672                  return( MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE );
   \      0x376   0x....'....        LDR.W    R0,??DataTable29_4  ;; 0xffff8f80
   \      0x37A   0xE28D             B.N      ??ssl_parse_server_hello_3
   1673              }
   \                     ??ssl_parse_server_hello_18: (+1)
   \      0x37C   0x....'....        LDR.W    R0,??DataTable24
   \      0x380   0x9000             STR      R0,[SP, #+0]
   \      0x382   0xF44F 0x63CD      MOV      R3,#+1640
   \      0x386   0x4632             MOV      R2,R6
   \      0x388   0x2101             MOVS     R1,#+1
   \      0x38A   0x4638             MOV      R0,R7
   \      0x38C   0x....'....        BL       mbedtls_debug_print_msg
   \      0x390   0x2232             MOVS     R2,#+50
   \      0x392   0x2102             MOVS     R1,#+2
   \      0x394   0x4638             MOV      R0,R7
   \      0x396   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x39A   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x39E   0xE27B             B.N      ??ssl_parse_server_hello_3
   1674          
   1675              /*
   1676               * Initialize update checksum functions
   1677               */
   1678              ssl->transform_negotiate->ciphersuite_info = mbedtls_ssl_ciphersuite_from_id( i );
   \                     ??ssl_parse_server_hello_19: (+1)
   \      0x3A0   0x4658             MOV      R0,R11
   \      0x3A2   0x....'....        BL       mbedtls_ssl_ciphersuite_from_id
   \      0x3A6   0x6CF9             LDR      R1,[R7, #+76]
   \      0x3A8   0x6008             STR      R0,[R1, #+0]
   1679          
   1680              if( ssl->transform_negotiate->ciphersuite_info == NULL )
   \      0x3AA   0x6CF8             LDR      R0,[R7, #+76]
   \      0x3AC   0x6800             LDR      R0,[R0, #+0]
   \      0x3AE   0x2800             CMP      R0,#+0
   \      0x3B0   0xD113             BNE.N    ??ssl_parse_server_hello_20
   1681              {
   1682                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "ciphersuite info for %04x not found", i ) );
   \      0x3B2   0xF8CD 0xB004      STR      R11,[SP, #+4]
   \      0x3B6   0x....'....        LDR.W    R0,??DataTable29_5
   \      0x3BA   0x9000             STR      R0,[SP, #+0]
   \      0x3BC   0xF240 0x6392      MOVW     R3,#+1682
   \      0x3C0   0x4632             MOV      R2,R6
   \      0x3C2   0x2101             MOVS     R1,#+1
   \      0x3C4   0x4638             MOV      R0,R7
   \      0x3C6   0x....'....        BL       mbedtls_debug_print_msg
   1683                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1684                                                  MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR );
   \      0x3CA   0x2250             MOVS     R2,#+80
   \      0x3CC   0x2102             MOVS     R1,#+2
   \      0x3CE   0x4638             MOV      R0,R7
   \      0x3D0   0x....'....        BL       mbedtls_ssl_send_alert_message
   1685                  return( MBEDTLS_ERR_SSL_BAD_INPUT_DATA );
   \      0x3D4   0x....'....        LDR.W    R0,??DataTable29_6  ;; 0xffff8f00
   \      0x3D8   0xE25E             B.N      ??ssl_parse_server_hello_3
   1686              }
   1687          
   1688              mbedtls_ssl_optimize_checksum( ssl, ssl->transform_negotiate->ciphersuite_info );
   \                     ??ssl_parse_server_hello_20: (+1)
   \      0x3DA   0x6CF8             LDR      R0,[R7, #+76]
   \      0x3DC   0x6801             LDR      R1,[R0, #+0]
   \      0x3DE   0x4638             MOV      R0,R7
   \      0x3E0   0x....'....        BL       mbedtls_ssl_optimize_checksum
   1689          
   1690              MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, session id len.: %d", n ) );
   \      0x3E4   0xF8CD 0x9004      STR      R9,[SP, #+4]
   \      0x3E8   0x....'....        LDR.W    R0,??DataTable29_7
   \      0x3EC   0x9000             STR      R0,[SP, #+0]
   \      0x3EE   0xF240 0x639A      MOVW     R3,#+1690
   \      0x3F2   0x4632             MOV      R2,R6
   \      0x3F4   0x2103             MOVS     R1,#+3
   \      0x3F6   0x4638             MOV      R0,R7
   \      0x3F8   0x....'....        BL       mbedtls_debug_print_msg
   1691              MBEDTLS_SSL_DEBUG_BUF( 3,   "server hello, session id", buf + 35, n );
   \      0x3FC   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \      0x400   0xF10A 0x0023      ADD      R0,R10,#+35
   \      0x404   0x9001             STR      R0,[SP, #+4]
   \      0x406   0x....'....        LDR.W    R0,??DataTable29_8
   \      0x40A   0x9000             STR      R0,[SP, #+0]
   \      0x40C   0xF240 0x639B      MOVW     R3,#+1691
   \      0x410   0x4632             MOV      R2,R6
   \      0x412   0x2103             MOVS     R1,#+3
   \      0x414   0x4638             MOV      R0,R7
   \      0x416   0x....'....        BL       mbedtls_debug_print_buf
   1692          
   1693              /*
   1694               * Check if the session can be resumed
   1695               */
   1696              if( ssl->handshake->resume == 0 || n == 0 ||
   1697          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1698                  ssl->renego_status != MBEDTLS_SSL_INITIAL_HANDSHAKE ||
   1699          #endif
   1700                  ssl->session_negotiate->ciphersuite != i ||
   1701                  ssl->session_negotiate->compression != comp ||
   1702                  ssl->session_negotiate->id_len != n ||
   1703                  memcmp( ssl->session_negotiate->id, buf + 35, n ) != 0 )
   \      0x41A   0x6BF8             LDR      R0,[R7, #+60]
   \      0x41C   0xF8D0 0x06C0      LDR      R0,[R0, #+1728]
   \      0x420   0x2800             CMP      R0,#+0
   \      0x422   0xD01A             BEQ.N    ??ssl_parse_server_hello_21
   \      0x424   0xF1B9 0x0F00      CMP      R9,#+0
   \      0x428   0xD017             BEQ.N    ??ssl_parse_server_hello_21
   \      0x42A   0x68B8             LDR      R0,[R7, #+8]
   \      0x42C   0x2800             CMP      R0,#+0
   \      0x42E   0xD114             BNE.N    ??ssl_parse_server_hello_21
   \      0x430   0x6BB8             LDR      R0,[R7, #+56]
   \      0x432   0x6800             LDR      R0,[R0, #+0]
   \      0x434   0x4558             CMP      R0,R11
   \      0x436   0xD110             BNE.N    ??ssl_parse_server_hello_21
   \      0x438   0x6BB8             LDR      R0,[R7, #+56]
   \      0x43A   0x6840             LDR      R0,[R0, #+4]
   \      0x43C   0x2800             CMP      R0,#+0
   \      0x43E   0xD10C             BNE.N    ??ssl_parse_server_hello_21
   \      0x440   0x6BB8             LDR      R0,[R7, #+56]
   \      0x442   0x6880             LDR      R0,[R0, #+8]
   \      0x444   0x4548             CMP      R0,R9
   \      0x446   0xD108             BNE.N    ??ssl_parse_server_hello_21
   \      0x448   0x464A             MOV      R2,R9
   \      0x44A   0xF10A 0x0123      ADD      R1,R10,#+35
   \      0x44E   0x6BB8             LDR      R0,[R7, #+56]
   \      0x450   0x300C             ADDS     R0,R0,#+12
   \      0x452   0x....'....        BL       memcmp
   \      0x456   0x2800             CMP      R0,#+0
   \      0x458   0xD01D             BEQ.N    ??ssl_parse_server_hello_22
   1704              {
   1705                  ssl->state++;
   \                     ??ssl_parse_server_hello_21: (+1)
   \      0x45A   0x6878             LDR      R0,[R7, #+4]
   \      0x45C   0x1C40             ADDS     R0,R0,#+1
   \      0x45E   0x6078             STR      R0,[R7, #+4]
   1706                  ssl->handshake->resume = 0;
   \      0x460   0x4628             MOV      R0,R5
   \      0x462   0x6BF9             LDR      R1,[R7, #+60]
   \      0x464   0xF8C1 0x06C0      STR      R0,[R1, #+1728]
   1707          #if defined(MBEDTLS_HAVE_TIME)
   1708                  ssl->session_negotiate->start = mbedtls_time( NULL );
   1709          #endif
   1710                  ssl->session_negotiate->ciphersuite = i;
   \      0x468   0x6BB8             LDR      R0,[R7, #+56]
   \      0x46A   0xF8C0 0xB000      STR      R11,[R0, #+0]
   1711                  ssl->session_negotiate->compression = comp;
   \      0x46E   0x4628             MOV      R0,R5
   \      0x470   0x6BB9             LDR      R1,[R7, #+56]
   \      0x472   0x6048             STR      R0,[R1, #+4]
   1712                  ssl->session_negotiate->id_len = n;
   \      0x474   0x6BB8             LDR      R0,[R7, #+56]
   \      0x476   0xF8C0 0x9008      STR      R9,[R0, #+8]
   1713                  memcpy( ssl->session_negotiate->id, buf + 35, n );
   \      0x47A   0x464A             MOV      R2,R9
   \      0x47C   0xF10A 0x0123      ADD      R1,R10,#+35
   \      0x480   0x6BB8             LDR      R0,[R7, #+56]
   \      0x482   0x300C             ADDS     R0,R0,#+12
   \      0x484   0x....'....        BL       __aeabi_memcpy
   1714              }
   1715              else
   1716              {
   1717                  ssl->state = MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC;
   1718          
   1719                  if( ( ret = mbedtls_ssl_derive_keys( ssl ) ) != 0 )
   1720                  {
   1721                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_derive_keys", ret );
   1722                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1723                                                      MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR );
   1724                      return( ret );
   1725                  }
   1726              }
   1727          
   1728              MBEDTLS_SSL_DEBUG_MSG( 3, ( "%s session has been resumed",
   1729                             ssl->handshake->resume ? "a" : "no" ) );
   \                     ??ssl_parse_server_hello_23: (+1)
   \      0x488   0x6BF8             LDR      R0,[R7, #+60]
   \      0x48A   0xF8D0 0x06C0      LDR      R0,[R0, #+1728]
   \      0x48E   0x2800             CMP      R0,#+0
   \      0x490   0xD01B             BEQ.N    ??ssl_parse_server_hello_24
   \      0x492   0xA0C1             ADR.N    R0,??ssl_parse_server_hello_0  ;; "a"
   \      0x494   0xE01A             B.N      ??ssl_parse_server_hello_25
   \                     ??ssl_parse_server_hello_22: (+1)
   \      0x496   0x200C             MOVS     R0,#+12
   \      0x498   0x6078             STR      R0,[R7, #+4]
   \      0x49A   0x4638             MOV      R0,R7
   \      0x49C   0x....'....        BL       mbedtls_ssl_derive_keys
   \      0x4A0   0x9002             STR      R0,[SP, #+8]
   \      0x4A2   0x2800             CMP      R0,#+0
   \      0x4A4   0xD0F0             BEQ.N    ??ssl_parse_server_hello_23
   \      0x4A6   0x9001             STR      R0,[SP, #+4]
   \      0x4A8   0x....'....        LDR.W    R0,??DataTable29_9
   \      0x4AC   0x9000             STR      R0,[SP, #+0]
   \      0x4AE   0xF240 0x63B9      MOVW     R3,#+1721
   \      0x4B2   0x4632             MOV      R2,R6
   \      0x4B4   0x2101             MOVS     R1,#+1
   \      0x4B6   0x4638             MOV      R0,R7
   \      0x4B8   0x....'....        BL       mbedtls_debug_print_ret
   \      0x4BC   0x2250             MOVS     R2,#+80
   \      0x4BE   0x2102             MOVS     R1,#+2
   \      0x4C0   0x4638             MOV      R0,R7
   \      0x4C2   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x4C6   0x9802             LDR      R0,[SP, #+8]
   \      0x4C8   0xE1E6             B.N      ??ssl_parse_server_hello_3
   \                     ??ssl_parse_server_hello_24: (+1)
   \      0x4CA   0xA0D0             ADR.N    R0,??ssl_parse_server_hello_1  ;; 0x6E, 0x6F, 0x00, 0x00
   \                     ??ssl_parse_server_hello_25: (+1)
   \      0x4CC   0x9001             STR      R0,[SP, #+4]
   \      0x4CE   0x....'....        LDR.W    R0,??DataTable29_10
   \      0x4D2   0x9000             STR      R0,[SP, #+0]
   \      0x4D4   0xF240 0x63C1      MOVW     R3,#+1729
   \      0x4D8   0x4632             MOV      R2,R6
   \      0x4DA   0x2103             MOVS     R1,#+3
   \      0x4DC   0x4638             MOV      R0,R7
   \      0x4DE   0x....'....        BL       mbedtls_debug_print_msg
   1730          
   1731              MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, chosen ciphersuite: %04x", i ) );
   \      0x4E2   0xF8CD 0xB004      STR      R11,[SP, #+4]
   \      0x4E6   0x....'....        LDR.W    R0,??DataTable29_11
   \      0x4EA   0x9000             STR      R0,[SP, #+0]
   \      0x4EC   0xF240 0x63C3      MOVW     R3,#+1731
   \      0x4F0   0x4632             MOV      R2,R6
   \      0x4F2   0x2103             MOVS     R1,#+3
   \      0x4F4   0x4638             MOV      R0,R7
   \      0x4F6   0x....'....        BL       mbedtls_debug_print_msg
   1732              MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, compress alg.: %d", buf[37 + n] ) );
   \      0x4FA   0xEB0A 0x0009      ADD      R0,R10,R9
   \      0x4FE   0xF890 0x0025      LDRB     R0,[R0, #+37]
   \      0x502   0x9001             STR      R0,[SP, #+4]
   \      0x504   0x....'....        LDR.W    R0,??DataTable29_12
   \      0x508   0x9000             STR      R0,[SP, #+0]
   \      0x50A   0xF240 0x63C4      MOVW     R3,#+1732
   \      0x50E   0x4632             MOV      R2,R6
   \      0x510   0x2103             MOVS     R1,#+3
   \      0x512   0x4638             MOV      R0,R7
   \      0x514   0x....'....        BL       mbedtls_debug_print_msg
   1733          
   1734              /*
   1735               * Perform cipher suite validation in same way as in ssl_write_client_hello.
   1736               */
   1737              i = 0;
   \      0x518   0x4629             MOV      R1,R5
   1738              while( 1 )
   1739              {
   1740                  if( ssl->conf->ciphersuite_list[ssl->minor_ver][i] == 0 )
   \                     ??ssl_parse_server_hello_26: (+1)
   \      0x51A   0x6838             LDR      R0,[R7, #+0]
   \      0x51C   0x697A             LDR      R2,[R7, #+20]
   \      0x51E   0xF850 0x0022      LDR      R0,[R0, R2, LSL #+2]
   \      0x522   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \      0x526   0x2800             CMP      R0,#+0
   \      0x528   0xD028             BEQ.N    ??ssl_parse_server_hello_27
   1741                  {
   1742                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   1743                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1744                                                      MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   1745                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   1746                  }
   1747          
   1748                  if( ssl->conf->ciphersuite_list[ssl->minor_ver][i++] ==
   1749                      ssl->session_negotiate->ciphersuite )
   \      0x52A   0x4608             MOV      R0,R1
   \      0x52C   0x1C41             ADDS     R1,R0,#+1
   \      0x52E   0x683A             LDR      R2,[R7, #+0]
   \      0x530   0x697B             LDR      R3,[R7, #+20]
   \      0x532   0xF852 0x2023      LDR      R2,[R2, R3, LSL #+2]
   \      0x536   0xF852 0x0020      LDR      R0,[R2, R0, LSL #+2]
   \      0x53A   0x6BBA             LDR      R2,[R7, #+56]
   \      0x53C   0x6812             LDR      R2,[R2, #+0]
   \      0x53E   0x4290             CMP      R0,R2
   \      0x540   0xD1EB             BNE.N    ??ssl_parse_server_hello_26
   1750                  {
   1751                      break;
   1752                  }
   1753              }
   1754          
   1755              suite_info = mbedtls_ssl_ciphersuite_from_id( ssl->session_negotiate->ciphersuite );
   \      0x542   0x4610             MOV      R0,R2
   \      0x544   0x....'....        BL       mbedtls_ssl_ciphersuite_from_id
   \      0x548   0x4683             MOV      R11,R0
   1756              if( ssl_validate_ciphersuite( suite_info, ssl, ssl->minor_ver, ssl->minor_ver ) != 0 )
   \      0x54A   0x697B             LDR      R3,[R7, #+20]
   \      0x54C   0x461A             MOV      R2,R3
   \      0x54E   0x4639             MOV      R1,R7
   \      0x550   0x....'....        BL       ssl_validate_ciphersuite
   \      0x554   0x2800             CMP      R0,#+0
   \      0x556   0xD023             BEQ.N    ??ssl_parse_server_hello_28
   1757              {
   1758                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \      0x558   0x....'....        LDR.W    R0,??DataTable24
   \      0x55C   0x9000             STR      R0,[SP, #+0]
   \      0x55E   0xF240 0x63DE      MOVW     R3,#+1758
   \      0x562   0x4632             MOV      R2,R6
   \      0x564   0x2101             MOVS     R1,#+1
   \      0x566   0x4638             MOV      R0,R7
   \      0x568   0x....'....        BL       mbedtls_debug_print_msg
   1759                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1760                                                  MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   \      0x56C   0x222F             MOVS     R2,#+47
   \      0x56E   0x2102             MOVS     R1,#+2
   \      0x570   0x4638             MOV      R0,R7
   \      0x572   0x....'....        BL       mbedtls_ssl_send_alert_message
   1761                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x576   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x57A   0xE18D             B.N      ??ssl_parse_server_hello_3
   1762              }
   \                     ??ssl_parse_server_hello_27: (+1)
   \      0x57C   0x....'....        LDR.W    R0,??DataTable24
   \      0x580   0x9000             STR      R0,[SP, #+0]
   \      0x582   0xF240 0x63CE      MOVW     R3,#+1742
   \      0x586   0x4632             MOV      R2,R6
   \      0x588   0x2101             MOVS     R1,#+1
   \      0x58A   0x4638             MOV      R0,R7
   \      0x58C   0x....'....        BL       mbedtls_debug_print_msg
   \      0x590   0x222F             MOVS     R2,#+47
   \      0x592   0x2102             MOVS     R1,#+2
   \      0x594   0x4638             MOV      R0,R7
   \      0x596   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x59A   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x59E   0xE17B             B.N      ??ssl_parse_server_hello_3
   1763          
   1764              MBEDTLS_SSL_DEBUG_MSG( 3, ( "server hello, chosen ciphersuite: %s", suite_info->name ) );
   \                     ??ssl_parse_server_hello_28: (+1)
   \      0x5A0   0xF8DB 0x0004      LDR      R0,[R11, #+4]
   \      0x5A4   0x9001             STR      R0,[SP, #+4]
   \      0x5A6   0x....'....        LDR.W    R0,??DataTable29_13
   \      0x5AA   0x9000             STR      R0,[SP, #+0]
   \      0x5AC   0xF240 0x63E4      MOVW     R3,#+1764
   \      0x5B0   0x4632             MOV      R2,R6
   \      0x5B2   0x2103             MOVS     R1,#+3
   \      0x5B4   0x4638             MOV      R0,R7
   \      0x5B6   0x....'....        BL       mbedtls_debug_print_msg
   1765          
   1766              if( comp != MBEDTLS_SSL_COMPRESS_NULL
   1767          #if defined(MBEDTLS_ZLIB_SUPPORT)
   1768                  && comp != MBEDTLS_SSL_COMPRESS_DEFLATE
   1769          #endif
   1770                )
   1771              {
   1772                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   1773                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1774                                                  MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   1775                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   1776              }
   1777              ssl->session_negotiate->compression = comp;
   \      0x5BA   0x4628             MOV      R0,R5
   \      0x5BC   0x6BB9             LDR      R1,[R7, #+56]
   \      0x5BE   0x6048             STR      R0,[R1, #+4]
   1778          
   1779              ext = buf + 40 + n;
   \      0x5C0   0xEB0A 0x0009      ADD      R0,R10,R9
   \      0x5C4   0xF100 0x0928      ADD      R9,R0,#+40
   1780          
   1781              MBEDTLS_SSL_DEBUG_MSG( 2, ( "server hello, total extension length: %d", ext_len ) );
   \      0x5C8   0x9401             STR      R4,[SP, #+4]
   \      0x5CA   0x....'....        LDR.W    R0,??DataTable29_14
   \      0x5CE   0x9000             STR      R0,[SP, #+0]
   \      0x5D0   0xF240 0x63F5      MOVW     R3,#+1781
   \      0x5D4   0x4632             MOV      R2,R6
   \      0x5D6   0x2102             MOVS     R1,#+2
   \      0x5D8   0x4638             MOV      R0,R7
   \      0x5DA   0x....'....        BL       mbedtls_debug_print_msg
   1782          
   1783              while( ext_len )
   \                     ??ssl_parse_server_hello_29: (+1)
   \      0x5DE   0x2C00             CMP      R4,#+0
   \      0x5E0   0xF000 0x815D      BEQ.W    ??ssl_parse_server_hello_30
   1784              {
   1785                  unsigned int ext_id   = ( ( ext[0] <<  8 )
   1786                                          | ( ext[1]       ) );
   \      0x5E4   0xF899 0x1000      LDRB     R1,[R9, #+0]
   \      0x5E8   0xF899 0x0001      LDRB     R0,[R9, #+1]
   \      0x5EC   0xEA40 0x2001      ORR      R0,R0,R1, LSL #+8
   1787                  unsigned int ext_size = ( ( ext[2] <<  8 )
   1788                                          | ( ext[3]       ) );
   \      0x5F0   0xF899 0x1002      LDRB     R1,[R9, #+2]
   \      0x5F4   0xF899 0xA003      LDRB     R10,[R9, #+3]
   \      0x5F8   0xEA4A 0x2A01      ORR      R10,R10,R1, LSL #+8
   1789          
   1790                  if( ext_size + 4 > ext_len )
   \      0x5FC   0xF10A 0x0104      ADD      R1,R10,#+4
   \      0x600   0x428C             CMP      R4,R1
   \      0x602   0xD211             BCS.N    ??ssl_parse_server_hello_31
   1791                  {
   1792                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \      0x604   0x....'....        LDR.W    R0,??DataTable24
   \      0x608   0x9000             STR      R0,[SP, #+0]
   \      0x60A   0xF44F 0x63E0      MOV      R3,#+1792
   \      0x60E   0x4632             MOV      R2,R6
   \      0x610   0x2101             MOVS     R1,#+1
   \      0x612   0x4638             MOV      R0,R7
   \      0x614   0x....'....        BL       mbedtls_debug_print_msg
   1793                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1794                                                      MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \      0x618   0x2232             MOVS     R2,#+50
   \      0x61A   0x2102             MOVS     R1,#+2
   \      0x61C   0x4638             MOV      R0,R7
   \      0x61E   0x....'....        BL       mbedtls_ssl_send_alert_message
   1795                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x622   0x....'....        LDR.W    R0,??DataTable26_7  ;; 0xffff8680
   \      0x626   0xE137             B.N      ??ssl_parse_server_hello_3
   1796                  }
   1797          
   1798                  switch( ext_id )
   \                     ??ssl_parse_server_hello_31: (+1)
   \      0x628   0x4601             MOV      R1,R0
   \      0x62A   0x2901             CMP      R1,#+1
   \      0x62C   0xD028             BEQ.N    ??ssl_parse_server_hello_32
   \      0x62E   0x2904             CMP      R1,#+4
   \      0x630   0xD03A             BEQ.N    ??ssl_parse_server_hello_33
   \      0x632   0x290B             CMP      R1,#+11
   \      0x634   0xF000 0x8088      BEQ.W    ??ssl_parse_server_hello_34
   \      0x638   0x2910             CMP      R1,#+16
   \      0x63A   0xF000 0x8099      BEQ.W    ??ssl_parse_server_hello_35
   \      0x63E   0x2916             CMP      R1,#+22
   \      0x640   0xD046             BEQ.N    ??ssl_parse_server_hello_36
   \      0x642   0x2917             CMP      R1,#+23
   \      0x644   0xD058             BEQ.N    ??ssl_parse_server_hello_37
   \      0x646   0x2923             CMP      R1,#+35
   \      0x648   0xD06A             BEQ.N    ??ssl_parse_server_hello_38
   \      0x64A   0xF64F 0x7201      MOVW     R2,#+65281
   \      0x64E   0x4291             CMP      R1,R2
   \      0x650   0xF040 0x80A4      BNE.W    ??ssl_parse_server_hello_39
   1799                  {
   1800                  case MBEDTLS_TLS_EXT_RENEGOTIATION_INFO:
   1801                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found renegotiation extension" ) );
   \      0x654   0x....'....        LDR.W    R0,??DataTable29_15
   \      0x658   0x9000             STR      R0,[SP, #+0]
   \      0x65A   0xF240 0x7309      MOVW     R3,#+1801
   \      0x65E   0x4632             MOV      R2,R6
   \      0x660   0x2103             MOVS     R1,#+3
   \      0x662   0x4638             MOV      R0,R7
   \      0x664   0x....'....        BL       mbedtls_debug_print_msg
   1802          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1803                      renegotiation_info_seen = 1;
   \      0x668   0xF04F 0x0801      MOV      R8,#+1
   1804          #endif
   1805          
   1806                      if( ( ret = ssl_parse_renegotiation_info( ssl, ext + 4,
   1807                                                                ext_size ) ) != 0 )
   \      0x66C   0x4652             MOV      R2,R10
   \      0x66E   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x672   0x4638             MOV      R0,R7
   \      0x674   0x....'....        BL       ssl_parse_renegotiation_info
   \      0x678   0x2800             CMP      R0,#+0
   \      0x67A   0xF040 0x810D      BNE.W    ??ssl_parse_server_hello_3
   \      0x67E   0xE098             B.N      ??ssl_parse_server_hello_40
   1808                          return( ret );
   1809          
   1810                      break;
   1811          
   1812          #if defined(MBEDTLS_SSL_MAX_FRAGMENT_LENGTH)
   1813                  case MBEDTLS_TLS_EXT_MAX_FRAGMENT_LENGTH:
   1814                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found max_fragment_length extension" ) );
   \                     ??ssl_parse_server_hello_32: (+1)
   \      0x680   0x....'....        LDR.W    R0,??DataTable29_16
   \      0x684   0x9000             STR      R0,[SP, #+0]
   \      0x686   0xF240 0x7316      MOVW     R3,#+1814
   \      0x68A   0x4632             MOV      R2,R6
   \      0x68C   0x2103             MOVS     R1,#+3
   \      0x68E   0x4638             MOV      R0,R7
   \      0x690   0x....'....        BL       mbedtls_debug_print_msg
   1815          
   1816                      if( ( ret = ssl_parse_max_fragment_length_ext( ssl,
   1817                                      ext + 4, ext_size ) ) != 0 )
   \      0x694   0x4652             MOV      R2,R10
   \      0x696   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x69A   0x4638             MOV      R0,R7
   \      0x69C   0x....'....        BL       ssl_parse_max_fragment_length_ext
   \      0x6A0   0x2800             CMP      R0,#+0
   \      0x6A2   0xF040 0x80F9      BNE.W    ??ssl_parse_server_hello_3
   \      0x6A6   0xE084             B.N      ??ssl_parse_server_hello_40
   1818                      {
   1819                          return( ret );
   1820                      }
   1821          
   1822                      break;
   1823          #endif /* MBEDTLS_SSL_MAX_FRAGMENT_LENGTH */
   1824          
   1825          #if defined(MBEDTLS_SSL_TRUNCATED_HMAC)
   1826                  case MBEDTLS_TLS_EXT_TRUNCATED_HMAC:
   1827                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found truncated_hmac extension" ) );
   \                     ??ssl_parse_server_hello_33: (+1)
   \      0x6A8   0x....'....        LDR.W    R0,??DataTable29_17
   \      0x6AC   0x9000             STR      R0,[SP, #+0]
   \      0x6AE   0xF240 0x7323      MOVW     R3,#+1827
   \      0x6B2   0x4632             MOV      R2,R6
   \      0x6B4   0x2103             MOVS     R1,#+3
   \      0x6B6   0x4638             MOV      R0,R7
   \      0x6B8   0x....'....        BL       mbedtls_debug_print_msg
   1828          
   1829                      if( ( ret = ssl_parse_truncated_hmac_ext( ssl,
   1830                                      ext + 4, ext_size ) ) != 0 )
   \      0x6BC   0x4652             MOV      R2,R10
   \      0x6BE   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x6C2   0x4638             MOV      R0,R7
   \      0x6C4   0x....'....        BL       ssl_parse_truncated_hmac_ext
   \      0x6C8   0x2800             CMP      R0,#+0
   \      0x6CA   0xF040 0x80E5      BNE.W    ??ssl_parse_server_hello_3
   \      0x6CE   0xE070             B.N      ??ssl_parse_server_hello_40
   1831                      {
   1832                          return( ret );
   1833                      }
   1834          
   1835                      break;
   1836          #endif /* MBEDTLS_SSL_TRUNCATED_HMAC */
   1837          
   1838          #if defined(MBEDTLS_SSL_ENCRYPT_THEN_MAC)
   1839                  case MBEDTLS_TLS_EXT_ENCRYPT_THEN_MAC:
   1840                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found encrypt_then_mac extension" ) );
   \                     ??ssl_parse_server_hello_36: (+1)
   \      0x6D0   0x....'....        LDR.W    R0,??DataTable29_18
   \      0x6D4   0x9000             STR      R0,[SP, #+0]
   \      0x6D6   0xF44F 0x63E6      MOV      R3,#+1840
   \      0x6DA   0x4632             MOV      R2,R6
   \      0x6DC   0x2103             MOVS     R1,#+3
   \      0x6DE   0x4638             MOV      R0,R7
   \      0x6E0   0x....'....        BL       mbedtls_debug_print_msg
   1841          
   1842                      if( ( ret = ssl_parse_encrypt_then_mac_ext( ssl,
   1843                                      ext + 4, ext_size ) ) != 0 )
   \      0x6E4   0x4652             MOV      R2,R10
   \      0x6E6   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x6EA   0x4638             MOV      R0,R7
   \      0x6EC   0x....'....        BL       ssl_parse_encrypt_then_mac_ext
   \      0x6F0   0x2800             CMP      R0,#+0
   \      0x6F2   0xF040 0x80D1      BNE.W    ??ssl_parse_server_hello_3
   \      0x6F6   0xE05C             B.N      ??ssl_parse_server_hello_40
   1844                      {
   1845                          return( ret );
   1846                      }
   1847          
   1848                      break;
   1849          #endif /* MBEDTLS_SSL_ENCRYPT_THEN_MAC */
   1850          
   1851          #if defined(MBEDTLS_SSL_EXTENDED_MASTER_SECRET)
   1852                  case MBEDTLS_TLS_EXT_EXTENDED_MASTER_SECRET:
   1853                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found extended_master_secret extension" ) );
   \                     ??ssl_parse_server_hello_37: (+1)
   \      0x6F8   0x....'....        LDR.W    R0,??DataTable30
   \      0x6FC   0x9000             STR      R0,[SP, #+0]
   \      0x6FE   0xF240 0x733D      MOVW     R3,#+1853
   \      0x702   0x4632             MOV      R2,R6
   \      0x704   0x2103             MOVS     R1,#+3
   \      0x706   0x4638             MOV      R0,R7
   \      0x708   0x....'....        BL       mbedtls_debug_print_msg
   1854          
   1855                      if( ( ret = ssl_parse_extended_ms_ext( ssl,
   1856                                      ext + 4, ext_size ) ) != 0 )
   \      0x70C   0x4652             MOV      R2,R10
   \      0x70E   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x712   0x4638             MOV      R0,R7
   \      0x714   0x....'....        BL       ssl_parse_extended_ms_ext
   \      0x718   0x2800             CMP      R0,#+0
   \      0x71A   0xF040 0x80BD      BNE.W    ??ssl_parse_server_hello_3
   \      0x71E   0xE048             B.N      ??ssl_parse_server_hello_40
   1857                      {
   1858                          return( ret );
   1859                      }
   1860          
   1861                      break;
   1862          #endif /* MBEDTLS_SSL_EXTENDED_MASTER_SECRET */
   1863          
   1864          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
   1865                  case MBEDTLS_TLS_EXT_SESSION_TICKET:
   1866                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found session_ticket extension" ) );
   \                     ??ssl_parse_server_hello_38: (+1)
   \      0x720   0x....'....        LDR.W    R0,??DataTable30_1
   \      0x724   0x9000             STR      R0,[SP, #+0]
   \      0x726   0xF240 0x734A      MOVW     R3,#+1866
   \      0x72A   0x4632             MOV      R2,R6
   \      0x72C   0x2103             MOVS     R1,#+3
   \      0x72E   0x4638             MOV      R0,R7
   \      0x730   0x....'....        BL       mbedtls_debug_print_msg
   1867          
   1868                      if( ( ret = ssl_parse_session_ticket_ext( ssl,
   1869                                      ext + 4, ext_size ) ) != 0 )
   \      0x734   0x4652             MOV      R2,R10
   \      0x736   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x73A   0x4638             MOV      R0,R7
   \      0x73C   0x....'....        BL       ssl_parse_session_ticket_ext
   \      0x740   0x2800             CMP      R0,#+0
   \      0x742   0xF040 0x80A9      BNE.W    ??ssl_parse_server_hello_3
   \      0x746   0xE034             B.N      ??ssl_parse_server_hello_40
   1870                      {
   1871                          return( ret );
   1872                      }
   1873          
   1874                      break;
   1875          #endif /* MBEDTLS_SSL_SESSION_TICKETS */
   1876          
   1877          #if defined(MBEDTLS_ECDH_C) || defined(MBEDTLS_ECDSA_C) || \
   1878              defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1879                  case MBEDTLS_TLS_EXT_SUPPORTED_POINT_FORMATS:
   1880                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found supported_point_formats extension" ) );
   \                     ??ssl_parse_server_hello_34: (+1)
   \      0x748   0x....'....        LDR.W    R0,??DataTable30_2
   \      0x74C   0x9000             STR      R0,[SP, #+0]
   \      0x74E   0xF44F 0x63EB      MOV      R3,#+1880
   \      0x752   0x4632             MOV      R2,R6
   \      0x754   0x2103             MOVS     R1,#+3
   \      0x756   0x4638             MOV      R0,R7
   \      0x758   0x....'....        BL       mbedtls_debug_print_msg
   1881          
   1882                      if( ( ret = ssl_parse_supported_point_formats_ext( ssl,
   1883                                      ext + 4, ext_size ) ) != 0 )
   \      0x75C   0x4652             MOV      R2,R10
   \      0x75E   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x762   0x4638             MOV      R0,R7
   \      0x764   0x....'....        BL       ssl_parse_supported_point_formats_ext
   \      0x768   0x2800             CMP      R0,#+0
   \      0x76A   0xF040 0x8095      BNE.W    ??ssl_parse_server_hello_3
   \      0x76E   0xE020             B.N      ??ssl_parse_server_hello_40
   1884                      {
   1885                          return( ret );
   1886                      }
   1887          
   1888                      break;
   1889          #endif /* MBEDTLS_ECDH_C || MBEDTLS_ECDSA_C ||
   1890                    MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
   1891          
   1892          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   1893                  case MBEDTLS_TLS_EXT_ECJPAKE_KKPP:
   1894                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found ecjpake_kkpp extension" ) );
   1895          
   1896                      if( ( ret = ssl_parse_ecjpake_kkpp( ssl,
   1897                                      ext + 4, ext_size ) ) != 0 )
   1898                      {
   1899                          return( ret );
   1900                      }
   1901          
   1902                      break;
   1903          #endif /* MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
   1904          
   1905          #if defined(MBEDTLS_SSL_ALPN)
   1906                  case MBEDTLS_TLS_EXT_ALPN:
   1907                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "found alpn extension" ) );
   \                     ??ssl_parse_server_hello_35: (+1)
   \      0x770   0x....'....        LDR.W    R0,??DataTable30_3
   \      0x774   0x9000             STR      R0,[SP, #+0]
   \      0x776   0xF240 0x7373      MOVW     R3,#+1907
   \      0x77A   0x4632             MOV      R2,R6
   \      0x77C   0x2103             MOVS     R1,#+3
   \      0x77E   0x4638             MOV      R0,R7
   \      0x780   0x....'....        BL       mbedtls_debug_print_msg
   1908          
   1909                      if( ( ret = ssl_parse_alpn_ext( ssl, ext + 4, ext_size ) ) != 0 )
   \      0x784   0x4652             MOV      R2,R10
   \      0x786   0xF109 0x0104      ADD      R1,R9,#+4
   \      0x78A   0x4638             MOV      R0,R7
   \      0x78C   0x....'....        BL       ssl_parse_alpn_ext
   \      0x790   0x2800             CMP      R0,#+0
   \      0x792   0xD00E             BEQ.N    ??ssl_parse_server_hello_40
   \      0x794   0xE080             B.N      ??ssl_parse_server_hello_3
   \      0x796   0xBF00             Nop      
   \                     ??ssl_parse_server_hello_0:
   \      0x798   0x61 0x00          DC8      "a",0x0,0x0
   \              0x00 0x00    
   1910                          return( ret );
   1911          
   1912                      break;
   1913          #endif /* MBEDTLS_SSL_ALPN */
   1914          
   1915                  default:
   1916                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "unknown extension found: %d (ignoring)",
   1917                                     ext_id ) );
   \                     ??ssl_parse_server_hello_39: (+1)
   \      0x79C   0x9001             STR      R0,[SP, #+4]
   \      0x79E   0x....'....        LDR.W    R0,??DataTable30_4
   \      0x7A2   0x9000             STR      R0,[SP, #+0]
   \      0x7A4   0xF240 0x737D      MOVW     R3,#+1917
   \      0x7A8   0x4632             MOV      R2,R6
   \      0x7AA   0x2103             MOVS     R1,#+3
   \      0x7AC   0x4638             MOV      R0,R7
   \      0x7AE   0x....'....        BL       mbedtls_debug_print_msg
   1918                  }
   1919          
   1920                  ext_len -= 4 + ext_size;
   \                     ??ssl_parse_server_hello_40: (+1)
   \      0x7B2   0xEBA4 0x040A      SUB      R4,R4,R10
   \      0x7B6   0x1F24             SUBS     R4,R4,#+4
   1921                  ext += 4 + ext_size;
   \      0x7B8   0xEB09 0x000A      ADD      R0,R9,R10
   \      0x7BC   0xF100 0x0904      ADD      R9,R0,#+4
   1922          
   1923                  if( ext_len > 0 && ext_len < 4 )
   \      0x7C0   0xF43F 0xAF0D      BEQ.W    ??ssl_parse_server_hello_29
   \      0x7C4   0x2C04             CMP      R4,#+4
   \      0x7C6   0xF4BF 0xAF0A      BCS.W    ??ssl_parse_server_hello_29
   \      0x7CA   0x4638             MOV      R0,R7
   1924                  {
   1925                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello message" ) );
   \      0x7CC   0x....             LDR.N    R1,??DataTable24
   \      0x7CE   0x9100             STR      R1,[SP, #+0]
   \      0x7D0   0xF240 0x7385      MOVW     R3,#+1925
   \      0x7D4   0x4632             MOV      R2,R6
   \      0x7D6   0x2101             MOVS     R1,#+1
   \      0x7D8   0x....'....        BL       mbedtls_debug_print_msg
   1926                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x7DC   0x....             LDR.N    R0,??DataTable26_7  ;; 0xffff8680
   \      0x7DE   0xE05B             B.N      ??ssl_parse_server_hello_3
   1927                  }
   1928              }
   1929          
   1930              /*
   1931               * Renegotiation security checks
   1932               */
   1933              if( ssl->secure_renegotiation == MBEDTLS_SSL_LEGACY_RENEGOTIATION &&
   1934                  ssl->conf->allow_legacy_renegotiation == MBEDTLS_SSL_LEGACY_BREAK_HANDSHAKE )
   1935              {
   1936                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "legacy renegotiation, breaking off handshake" ) );
   1937                  handshake_failure = 1;
   1938              }
   1939          #if defined(MBEDTLS_SSL_RENEGOTIATION)
   1940              else if( ssl->renego_status == MBEDTLS_SSL_RENEGOTIATION_IN_PROGRESS &&
   1941                       ssl->secure_renegotiation == MBEDTLS_SSL_SECURE_RENEGOTIATION &&
   1942                       renegotiation_info_seen == 0 )
   \                     ??ssl_parse_server_hello_41: (+1)
   \      0x7E0   0x68B9             LDR      R1,[R7, #+8]
   \      0x7E2   0x2901             CMP      R1,#+1
   \      0x7E4   0xD114             BNE.N    ??ssl_parse_server_hello_42
   \      0x7E6   0xF8D7 0x10F4      LDR      R1,[R7, #+244]
   \      0x7EA   0x2901             CMP      R1,#+1
   \      0x7EC   0xD110             BNE.N    ??ssl_parse_server_hello_42
   \      0x7EE   0x2800             CMP      R0,#+0
   \      0x7F0   0xD10E             BNE.N    ??ssl_parse_server_hello_42
   1943              {
   1944                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "renegotiation_info extension missing (secure)" ) );
   \      0x7F2   0x....'....        LDR.W    R0,??DataTable30_5
   \      0x7F6   0x9000             STR      R0,[SP, #+0]
   \      0x7F8   0xF44F 0x63F3      MOV      R3,#+1944
   \      0x7FC   0x4632             MOV      R2,R6
   \      0x7FE   0x2101             MOVS     R1,#+1
   \      0x800   0x4638             MOV      R0,R7
   \      0x802   0x....'....        BL       mbedtls_debug_print_msg
   1945                  handshake_failure = 1;
   \      0x806   0x2001             MOVS     R0,#+1
   \      0x808   0x4605             MOV      R5,R0
   \      0x80A   0xE031             B.N      ??ssl_parse_server_hello_43
   \                     ??ssl_parse_server_hello_1:
   \      0x80C   0x6E 0x6F          DC8      0x6E, 0x6F, 0x00, 0x00
   \              0x00 0x00    
   1946              }
   1947              else if( ssl->renego_status == MBEDTLS_SSL_RENEGOTIATION_IN_PROGRESS &&
   1948                       ssl->secure_renegotiation == MBEDTLS_SSL_LEGACY_RENEGOTIATION &&
   1949                       ssl->conf->allow_legacy_renegotiation == MBEDTLS_SSL_LEGACY_NO_RENEGOTIATION )
   \                     ??ssl_parse_server_hello_42: (+1)
   \      0x810   0x68B9             LDR      R1,[R7, #+8]
   \      0x812   0x2901             CMP      R1,#+1
   \      0x814   0xD117             BNE.N    ??ssl_parse_server_hello_44
   \      0x816   0xF8D7 0x10F4      LDR      R1,[R7, #+244]
   \      0x81A   0x2900             CMP      R1,#+0
   \      0x81C   0xD113             BNE.N    ??ssl_parse_server_hello_44
   \      0x81E   0x6839             LDR      R1,[R7, #+0]
   \      0x820   0xF8D1 0x10CC      LDR      R1,[R1, #+204]
   \      0x824   0xF3C1 0x1101      UBFX     R1,R1,#+4,#+2
   \      0x828   0x2900             CMP      R1,#+0
   \      0x82A   0xD10C             BNE.N    ??ssl_parse_server_hello_44
   1950              {
   1951                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "legacy renegotiation not allowed" ) );
   \      0x82C   0x....'....        LDR.W    R0,??DataTable30_6
   \      0x830   0x9000             STR      R0,[SP, #+0]
   \      0x832   0xF240 0x739F      MOVW     R3,#+1951
   \      0x836   0x4632             MOV      R2,R6
   \      0x838   0x2101             MOVS     R1,#+1
   \      0x83A   0x4638             MOV      R0,R7
   \      0x83C   0x....'....        BL       mbedtls_debug_print_msg
   1952                  handshake_failure = 1;
   \      0x840   0x2001             MOVS     R0,#+1
   \      0x842   0x4605             MOV      R5,R0
   \      0x844   0xE014             B.N      ??ssl_parse_server_hello_43
   1953              }
   1954              else if( ssl->renego_status == MBEDTLS_SSL_RENEGOTIATION_IN_PROGRESS &&
   1955                       ssl->secure_renegotiation == MBEDTLS_SSL_LEGACY_RENEGOTIATION &&
   1956                       renegotiation_info_seen == 1 )
   \                     ??ssl_parse_server_hello_44: (+1)
   \      0x846   0x68B9             LDR      R1,[R7, #+8]
   \      0x848   0x2901             CMP      R1,#+1
   \      0x84A   0xD111             BNE.N    ??ssl_parse_server_hello_43
   \      0x84C   0xF8D7 0x10F4      LDR      R1,[R7, #+244]
   \      0x850   0x2900             CMP      R1,#+0
   \      0x852   0xD10D             BNE.N    ??ssl_parse_server_hello_43
   \      0x854   0x2801             CMP      R0,#+1
   \      0x856   0xD10B             BNE.N    ??ssl_parse_server_hello_43
   1957              {
   1958                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "renegotiation_info extension present (legacy)" ) );
   \      0x858   0x....'....        LDR.W    R0,??DataTable30_7
   \      0x85C   0x9000             STR      R0,[SP, #+0]
   \      0x85E   0xF240 0x73A6      MOVW     R3,#+1958
   \      0x862   0x4632             MOV      R2,R6
   \      0x864   0x2101             MOVS     R1,#+1
   \      0x866   0x4638             MOV      R0,R7
   \      0x868   0x....'....        BL       mbedtls_debug_print_msg
   1959                  handshake_failure = 1;
   \      0x86C   0x2001             MOVS     R0,#+1
   \      0x86E   0x4605             MOV      R5,R0
   1960              }
   1961          #endif /* MBEDTLS_SSL_RENEGOTIATION */
   1962          
   1963              if( handshake_failure == 1 )
   \                     ??ssl_parse_server_hello_43: (+1)
   \      0x870   0x2D01             CMP      R5,#+1
   \      0x872   0xD106             BNE.N    ??ssl_parse_server_hello_45
   1964              {
   1965                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   1966                                                  MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \      0x874   0x2228             MOVS     R2,#+40
   \      0x876   0x2102             MOVS     R1,#+2
   \      0x878   0x4638             MOV      R0,R7
   \      0x87A   0x....'....        BL       mbedtls_ssl_send_alert_message
   1967                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO );
   \      0x87E   0x....             LDR.N    R0,??DataTable26_7  ;; 0xffff8680
   \      0x880   0xE00A             B.N      ??ssl_parse_server_hello_3
   1968              }
   1969          
   1970              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse server hello" ) );
   \                     ??ssl_parse_server_hello_45: (+1)
   \      0x882   0x....'....        LDR.W    R0,??DataTable28_1
   \      0x886   0x9000             STR      R0,[SP, #+0]
   \      0x888   0xF240 0x73B2      MOVW     R3,#+1970
   \      0x88C   0x4632             MOV      R2,R6
   \      0x88E   0x2102             MOVS     R1,#+2
   \      0x890   0x4638             MOV      R0,R7
   \      0x892   0x....'....        BL       mbedtls_debug_print_msg
   1971          
   1972              return( 0 );
   \      0x896   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_server_hello_3: (+1)
   \      0x898   0xB007             ADD      SP,SP,#+28
   \      0x89A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??ssl_parse_server_hello_30: (+1)
   \      0x89E   0x4640             MOV      R0,R8
   \      0x8A0   0xF8D7 0x10F4      LDR      R1,[R7, #+244]
   \      0x8A4   0x2900             CMP      R1,#+0
   \      0x8A6   0xD19B             BNE.N    ??ssl_parse_server_hello_41
   \      0x8A8   0x6839             LDR      R1,[R7, #+0]
   \      0x8AA   0xF8D1 0x10CC      LDR      R1,[R1, #+204]
   \      0x8AE   0xF3C1 0x1101      UBFX     R1,R1,#+4,#+2
   \      0x8B2   0x2902             CMP      R1,#+2
   \      0x8B4   0xD194             BNE.N    ??ssl_parse_server_hello_41
   \      0x8B6   0x....'....        LDR.W    R0,??DataTable31
   \      0x8BA   0x9000             STR      R0,[SP, #+0]
   \      0x8BC   0xF44F 0x63F2      MOV      R3,#+1936
   \      0x8C0   0x4632             MOV      R2,R6
   \      0x8C2   0x2101             MOVS     R1,#+1
   \      0x8C4   0x4638             MOV      R0,R7
   \      0x8C6   0x....'....        BL       mbedtls_debug_print_msg
   \      0x8CA   0x2001             MOVS     R0,#+1
   \      0x8CC   0x4605             MOV      R5,R0
   \      0x8CE   0xE7CF             B.N      ??ssl_parse_server_hello_43
   1973          }
   1974          
   1975          #if defined(MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED) ||                       \
   1976              defined(MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   1977          static int ssl_parse_server_dh_params( mbedtls_ssl_context *ssl, unsigned char **p,
   1978                                                 unsigned char *end )
   1979          {
   \                     ssl_parse_server_dh_params: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x4605             MOV      R5,R0
   1980              int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;
   1981          
   1982              /*
   1983               * Ephemeral DH parameters:
   1984               *
   1985               * struct {
   1986               *     opaque dh_p<1..2^16-1>;
   1987               *     opaque dh_g<1..2^16-1>;
   1988               *     opaque dh_Ys<1..2^16-1>;
   1989               * } ServerDHParams;
   1990               */
   1991              if( ( ret = mbedtls_dhm_read_params( &ssl->handshake->dhm_ctx, p, end ) ) != 0 )
   \        0x4   0x6BE8             LDR      R0,[R5, #+60]
   \        0x6   0x1D00             ADDS     R0,R0,#+4
   \        0x8   0x....'....        BL       mbedtls_dhm_read_params
   \        0xC   0x0004             MOVS     R4,R0
   \        0xE   0xD00C             BEQ.N    ??ssl_parse_server_dh_params_0
   1992              {
   1993                  MBEDTLS_SSL_DEBUG_RET( 2, ( "mbedtls_dhm_read_params" ), ret );
   \       0x10   0x9401             STR      R4,[SP, #+4]
   \       0x12   0x....'....        LDR.W    R0,??DataTable30_8
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF240 0x73C9      MOVW     R3,#+1993
   \       0x1C   0x....             LDR.N    R2,??DataTable25_1
   \       0x1E   0x2102             MOVS     R1,#+2
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       mbedtls_debug_print_ret
   1994                  return( ret );
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0xE043             B.N      ??ssl_parse_server_dh_params_1
   1995              }
   1996          
   1997              if( ssl->handshake->dhm_ctx.len * 8 < ssl->conf->dhm_min_bitlen )
   \                     ??ssl_parse_server_dh_params_0: (+1)
   \       0x2A   0x6BE8             LDR      R0,[R5, #+60]
   \       0x2C   0x6840             LDR      R0,[R0, #+4]
   \       0x2E   0x00C0             LSLS     R0,R0,#+3
   \       0x30   0x6829             LDR      R1,[R5, #+0]
   \       0x32   0xF8D1 0x10C4      LDR      R1,[R1, #+196]
   \       0x36   0x4288             CMP      R0,R1
   \       0x38   0xD212             BCS.N    ??ssl_parse_server_dh_params_2
   1998              {
   1999                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "DHM prime too short: %d < %d",
   2000                                              ssl->handshake->dhm_ctx.len * 8,
   2001                                              ssl->conf->dhm_min_bitlen ) );
   \       0x3A   0x4608             MOV      R0,R1
   \       0x3C   0x9002             STR      R0,[SP, #+8]
   \       0x3E   0x6BE8             LDR      R0,[R5, #+60]
   \       0x40   0x6840             LDR      R0,[R0, #+4]
   \       0x42   0x00C0             LSLS     R0,R0,#+3
   \       0x44   0x9001             STR      R0,[SP, #+4]
   \       0x46   0x....'....        LDR.W    R0,??DataTable30_9
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0xF240 0x73D1      MOVW     R3,#+2001
   \       0x50   0x....             LDR.N    R2,??DataTable25_1
   \       0x52   0x2101             MOVS     R1,#+1
   \       0x54   0x4628             MOV      R0,R5
   \       0x56   0x....'....        BL       mbedtls_debug_print_msg
   2002                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x5A   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x5E   0xE028             B.N      ??ssl_parse_server_dh_params_1
   2003              }
   2004          
   2005              MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: P ", &ssl->handshake->dhm_ctx.P  );
   \                     ??ssl_parse_server_dh_params_2: (+1)
   \       0x60   0x....             LDR.N    R6,??DataTable25_1
   \       0x62   0x6BE8             LDR      R0,[R5, #+60]
   \       0x64   0x3008             ADDS     R0,R0,#+8
   \       0x66   0x9001             STR      R0,[SP, #+4]
   \       0x68   0x....'....        LDR.W    R0,??DataTable31_1
   \       0x6C   0x9000             STR      R0,[SP, #+0]
   \       0x6E   0xF240 0x73D5      MOVW     R3,#+2005
   \       0x72   0x4632             MOV      R2,R6
   \       0x74   0x2103             MOVS     R1,#+3
   \       0x76   0x4628             MOV      R0,R5
   \       0x78   0x....'....        BL       mbedtls_debug_print_mpi
   2006              MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: G ", &ssl->handshake->dhm_ctx.G  );
   \       0x7C   0x6BE8             LDR      R0,[R5, #+60]
   \       0x7E   0x3014             ADDS     R0,R0,#+20
   \       0x80   0x9001             STR      R0,[SP, #+4]
   \       0x82   0x....'....        LDR.W    R0,??DataTable31_2
   \       0x86   0x9000             STR      R0,[SP, #+0]
   \       0x88   0xF240 0x73D6      MOVW     R3,#+2006
   \       0x8C   0x4632             MOV      R2,R6
   \       0x8E   0x2103             MOVS     R1,#+3
   \       0x90   0x4628             MOV      R0,R5
   \       0x92   0x....'....        BL       mbedtls_debug_print_mpi
   2007              MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: GY", &ssl->handshake->dhm_ctx.GY );
   \       0x96   0x6BE8             LDR      R0,[R5, #+60]
   \       0x98   0x3038             ADDS     R0,R0,#+56
   \       0x9A   0x9001             STR      R0,[SP, #+4]
   \       0x9C   0x....'....        LDR.W    R0,??DataTable32_1
   \       0xA0   0x9000             STR      R0,[SP, #+0]
   \       0xA2   0xF240 0x73D7      MOVW     R3,#+2007
   \       0xA6   0x4632             MOV      R2,R6
   \       0xA8   0x2103             MOVS     R1,#+3
   \       0xAA   0x4628             MOV      R0,R5
   \       0xAC   0x....'....        BL       mbedtls_debug_print_mpi
   2008          
   2009              return( ret );
   \       0xB0   0x4620             MOV      R0,R4
   \                     ??ssl_parse_server_dh_params_1: (+1)
   \       0xB2   0xB004             ADD      SP,SP,#+16
   \       0xB4   0xBD70             POP      {R4-R6,PC}       ;; return
   2010          }
   2011          #endif /* MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED ||
   2012                    MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED */
   2013          
   2014          #if defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) ||                     \
   2015              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED) ||                   \
   2016              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED) ||                     \
   2017              defined(MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED) ||                      \
   2018              defined(MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   2019          static int ssl_check_server_ecdh_params( const mbedtls_ssl_context *ssl )
   2020          {
   \                     ssl_check_server_ecdh_params: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   2021              const mbedtls_ecp_curve_info *curve_info;
   2022          
   2023              curve_info = mbedtls_ecp_curve_info_from_grp_id( ssl->handshake->ecdh_ctx.grp.id );
   \        0x4   0x6BE0             LDR      R0,[R4, #+60]
   \        0x6   0xF890 0x0080      LDRB     R0,[R0, #+128]
   \        0xA   0x....'....        BL       mbedtls_ecp_curve_info_from_grp_id
   2024              if( curve_info == NULL )
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD10C             BNE.N    ??ssl_check_server_ecdh_params_0
   2025              {
   2026                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   \       0x12   0x....'....        LDR.W    R0,??DataTable31_3
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF240 0x73EA      MOVW     R3,#+2026
   \       0x1C   0x....             LDR.N    R2,??DataTable25_1
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x4620             MOV      R0,R4
   \       0x22   0x....'....        BL       mbedtls_debug_print_msg
   2027                  return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   \       0x26   0x....'....        LDR.W    R0,??DataTable31_4  ;; 0xffff9400
   \       0x2A   0xBD3E             POP      {R1-R5,PC}
   2028              }
   2029          
   2030              MBEDTLS_SSL_DEBUG_MSG( 2, ( "ECDH curve: %s", curve_info->name ) );
   \                     ??ssl_check_server_ecdh_params_0: (+1)
   \       0x2C   0x....             LDR.N    R5,??DataTable25_1
   \       0x2E   0x6880             LDR      R0,[R0, #+8]
   \       0x30   0x9001             STR      R0,[SP, #+4]
   \       0x32   0x....'....        LDR.W    R0,??DataTable31_5
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0xF240 0x73EE      MOVW     R3,#+2030
   \       0x3C   0x462A             MOV      R2,R5
   \       0x3E   0x2102             MOVS     R1,#+2
   \       0x40   0x4620             MOV      R0,R4
   \       0x42   0x....'....        BL       mbedtls_debug_print_msg
   2031          
   2032          #if defined(MBEDTLS_ECP_C)
   2033              if( mbedtls_ssl_check_curve( ssl, ssl->handshake->ecdh_ctx.grp.id ) != 0 )
   \       0x46   0x6BE0             LDR      R0,[R4, #+60]
   \       0x48   0xF890 0x1080      LDRB     R1,[R0, #+128]
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       mbedtls_ssl_check_curve
   \       0x52   0x2800             CMP      R0,#+0
   \       0x54   0xD002             BEQ.N    ??ssl_check_server_ecdh_params_1
   2034          #else
   2035              if( ssl->handshake->ecdh_ctx.grp.nbits < 163 ||
   2036                  ssl->handshake->ecdh_ctx.grp.nbits > 521 )
   2037          #endif
   2038                  return( -1 );
   \       0x56   0xF04F 0x30FF      MOV      R0,#-1
   \       0x5A   0xBD3E             POP      {R1-R5,PC}
   2039          
   2040              MBEDTLS_SSL_DEBUG_ECP( 3, "ECDH: Qp", &ssl->handshake->ecdh_ctx.Qp );
   \                     ??ssl_check_server_ecdh_params_1: (+1)
   \       0x5C   0x6BE0             LDR      R0,[R4, #+60]
   \       0x5E   0xF500 0x7096      ADD      R0,R0,#+300
   \       0x62   0x9001             STR      R0,[SP, #+4]
   \       0x64   0x....'....        LDR.W    R0,??DataTable32_4
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0xF44F 0x63FF      MOV      R3,#+2040
   \       0x6E   0x462A             MOV      R2,R5
   \       0x70   0x2103             MOVS     R1,#+3
   \       0x72   0x4620             MOV      R0,R4
   \       0x74   0x....'....        BL       mbedtls_debug_print_ecp
   2041          
   2042              return( 0 );
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0xBD3E             POP      {R1-R5,PC}       ;; return
   2043          }
   2044          #endif /* MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED ||
   2045                    MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED ||
   2046                    MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED ||
   2047                    MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED ||
   2048                    MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED */
   2049          
   2050          #if defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) ||                     \
   2051              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED) ||                   \
   2052              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   2053          static int ssl_parse_server_ecdh_params( mbedtls_ssl_context *ssl,
   2054                                                   unsigned char **p,
   2055                                                   unsigned char *end )
   2056          {
   \                     ssl_parse_server_ecdh_params: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
   2057              int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;
   2058          
   2059              /*
   2060               * Ephemeral ECDH parameters:
   2061               *
   2062               * struct {
   2063               *     ECParameters curve_params;
   2064               *     ECPoint      public;
   2065               * } ServerECDHParams;
   2066               */
   2067              if( ( ret = mbedtls_ecdh_read_params( &ssl->handshake->ecdh_ctx,
   2068                                            (const unsigned char **) p, end ) ) != 0 )
   \        0x4   0x6BE8             LDR      R0,[R5, #+60]
   \        0x6   0x3080             ADDS     R0,R0,#+128
   \        0x8   0x....'....        BL       mbedtls_ecdh_read_params
   \        0xC   0x0004             MOVS     R4,R0
   \        0xE   0xD00C             BEQ.N    ??ssl_parse_server_ecdh_params_0
   2069              {
   2070                  MBEDTLS_SSL_DEBUG_RET( 1, ( "mbedtls_ecdh_read_params" ), ret );
   \       0x10   0x9401             STR      R4,[SP, #+4]
   \       0x12   0x....'....        LDR.W    R0,??DataTable32_5
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0xF640 0x0316      MOVW     R3,#+2070
   \       0x1C   0x....             LDR.N    R2,??DataTable25_1
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       mbedtls_debug_print_ret
   2071                  return( ret );
   \       0x26   0x4620             MOV      R0,R4
   \       0x28   0xBD3E             POP      {R1-R5,PC}
   2072              }
   2073          
   2074              if( ssl_check_server_ecdh_params( ssl ) != 0 )
   \                     ??ssl_parse_server_ecdh_params_0: (+1)
   \       0x2A   0x4628             MOV      R0,R5
   \       0x2C   0x....'....        BL       ssl_check_server_ecdh_params
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD00C             BEQ.N    ??ssl_parse_server_ecdh_params_1
   2075              {
   2076                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message (ECDHE curve)" ) );
   \       0x34   0x....'....        LDR.W    R0,??DataTable32_6
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0xF640 0x031C      MOVW     R3,#+2076
   \       0x3E   0x....             LDR.N    R2,??DataTable25_1
   \       0x40   0x2101             MOVS     R1,#+1
   \       0x42   0x4628             MOV      R0,R5
   \       0x44   0x....'....        BL       mbedtls_debug_print_msg
   2077                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x48   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x4C   0xBD3E             POP      {R1-R5,PC}
   2078              }
   2079          
   2080              return( ret );
   \                     ??ssl_parse_server_ecdh_params_1: (+1)
   \       0x4E   0x4620             MOV      R0,R4
   \       0x50   0xBD3E             POP      {R1-R5,PC}       ;; return
   2081          }
   2082          #endif /* MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED ||
   2083                    MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED ||
   2084                    MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED */
   2085          
   2086          #if defined(MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   2087          static int ssl_parse_server_psk_hint( mbedtls_ssl_context *ssl,
   2088                                                unsigned char **p,
   2089                                                unsigned char *end )
   2090          {
   \                     ssl_parse_server_psk_hint: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   2091              int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;
   2092              size_t  len;
   2093              ((void) ssl);
   2094          
   2095              /*
   2096               * PSK parameters:
   2097               *
   2098               * opaque psk_identity_hint<0..2^16-1>;
   2099               */
   2100              if( (*p) > end - 2 )
   \        0x2   0x1E93             SUBS     R3,R2,#+2
   \        0x4   0x680C             LDR      R4,[R1, #+0]
   \        0x6   0x42A3             CMP      R3,R4
   \        0x8   0xD20C             BCS.N    ??ssl_parse_server_psk_hint_0
   2101              {
   2102                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message "
   2103                                              "(psk_identity_hint length)" ) );
   \        0xA   0x....'....        LDR.W    R1,??DataTable32_7
   \        0xE   0x9100             STR      R1,[SP, #+0]
   \       0x10   0xF640 0x0337      MOVW     R3,#+2103
   \       0x14   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x18   0x2101             MOVS     R1,#+1
   \       0x1A   0x....'....        BL       mbedtls_debug_print_msg
   2104                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x1E   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x22   0xBD16             POP      {R1,R2,R4,PC}
   2105              }
   2106              len = (*p)[0] << 8 | (*p)[1];
   \                     ??ssl_parse_server_psk_hint_0: (+1)
   \       0x24   0x4623             MOV      R3,R4
   \       0x26   0x781C             LDRB     R4,[R3, #+0]
   \       0x28   0x785B             LDRB     R3,[R3, #+1]
   \       0x2A   0xEA43 0x2304      ORR      R3,R3,R4, LSL #+8
   2107              *p += 2;
   \       0x2E   0x680C             LDR      R4,[R1, #+0]
   \       0x30   0x1CA4             ADDS     R4,R4,#+2
   \       0x32   0x600C             STR      R4,[R1, #+0]
   2108          
   2109              if( (*p) > end - len )
   \       0x34   0x425C             RSBS     R4,R3,#+0
   \       0x36   0x4422             ADD      R2,R2,R4
   \       0x38   0x680C             LDR      R4,[R1, #+0]
   \       0x3A   0x42A2             CMP      R2,R4
   \       0x3C   0xD20C             BCS.N    ??ssl_parse_server_psk_hint_1
   2110              {
   2111                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message "
   2112                                              "(psk_identity_hint length)" ) );
   \       0x3E   0x....'....        LDR.W    R1,??DataTable32_7
   \       0x42   0x9100             STR      R1,[SP, #+0]
   \       0x44   0xF44F 0x6304      MOV      R3,#+2112
   \       0x48   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x4C   0x2101             MOVS     R1,#+1
   \       0x4E   0x....'....        BL       mbedtls_debug_print_msg
   2113                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x52   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x56   0xBD16             POP      {R1,R2,R4,PC}
   2114              }
   2115          
   2116              /*
   2117               * Note: we currently ignore the PKS identity hint, as we only allow one
   2118               * PSK to be provisionned on the client. This could be changed later if
   2119               * someone needs that feature.
   2120               */
   2121              *p += len;
   \                     ??ssl_parse_server_psk_hint_1: (+1)
   \       0x58   0x4620             MOV      R0,R4
   \       0x5A   0x4418             ADD      R0,R0,R3
   \       0x5C   0x6008             STR      R0,[R1, #+0]
   2122              ret = 0;
   2123          
   2124              return( ret );
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0xBD16             POP      {R1,R2,R4,PC}    ;; return
   2125          }
   2126          #endif /* MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED */
   2127          
   2128          #if defined(MBEDTLS_KEY_EXCHANGE_RSA_ENABLED) ||                           \
   2129              defined(MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED)
   2130          /*
   2131           * Generate a pre-master secret and encrypt it with the server's RSA key
   2132           */

   \                                 In section .text, align 2, keep-with-next
   2133          static int ssl_write_encrypted_pms( mbedtls_ssl_context *ssl,
   2134                                              size_t offset, size_t *olen,
   2135                                              size_t pms_offset )
   2136          {
   \                     ssl_write_encrypted_pms: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x4605             MOV      R5,R0
   \        0x8   0x460E             MOV      R6,R1
   \        0xA   0x4617             MOV      R7,R2
   2137              int ret;
   2138              size_t len_bytes = ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_0 ? 0 : 2;
   \        0xC   0x6968             LDR      R0,[R5, #+20]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD102             BNE.N    ??ssl_write_encrypted_pms_0
   \       0x12   0xF04F 0x0800      MOV      R8,#+0
   \       0x16   0xE001             B.N      ??ssl_write_encrypted_pms_1
   \                     ??ssl_write_encrypted_pms_0: (+1)
   \       0x18   0xF04F 0x0802      MOV      R8,#+2
   2139              unsigned char *p = ssl->handshake->premaster + pms_offset;
   \                     ??ssl_write_encrypted_pms_1: (+1)
   \       0x1C   0x6BE8             LDR      R0,[R5, #+60]
   \       0x1E   0x4418             ADD      R0,R0,R3
   \       0x20   0xF200 0x499C      ADDW     R9,R0,#+1180
   2140          
   2141              if( offset + len_bytes > MBEDTLS_SSL_OUT_CONTENT_LEN )
   \       0x24   0xEB08 0x0006      ADD      R0,R8,R6
   \       0x28   0xF642 0x0101      MOVW     R1,#+10241
   \       0x2C   0x4288             CMP      R0,R1
   \       0x2E   0xD30D             BCC.N    ??ssl_write_encrypted_pms_2
   2142              {
   2143                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "buffer too small for encrypted pms" ) );
   \       0x30   0x....'....        LDR.W    R0,??DataTable32_9
   \       0x34   0x9000             STR      R0,[SP, #+0]
   \       0x36   0xF640 0x035F      MOVW     R3,#+2143
   \       0x3A   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x3E   0x2101             MOVS     R1,#+1
   \       0x40   0x4628             MOV      R0,R5
   \       0x42   0x....'....        BL       mbedtls_debug_print_msg
   2144                  return( MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL );
   \       0x46   0x....'....        LDR.W    R0,??DataTable32_10  ;; 0xffff9600
   \       0x4A   0xE08A             B.N      ??ssl_write_encrypted_pms_3
   2145              }
   2146          
   2147              /*
   2148               * Generate (part of) the pre-master as
   2149               *  struct {
   2150               *      ProtocolVersion client_version;
   2151               *      opaque random[46];
   2152               *  } PreMasterSecret;
   2153               */
   2154              mbedtls_ssl_write_version( ssl->conf->max_major_ver, ssl->conf->max_minor_ver,
   2155                                 ssl->conf->transport, p );
   \                     ??ssl_write_encrypted_pms_2: (+1)
   \       0x4C   0x464B             MOV      R3,R9
   \       0x4E   0x6828             LDR      R0,[R5, #+0]
   \       0x50   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x54   0xF3C0 0x0240      UBFX     R2,R0,#+1,#+1
   \       0x58   0x6828             LDR      R0,[R5, #+0]
   \       0x5A   0xF890 0x10C9      LDRB     R1,[R0, #+201]
   \       0x5E   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \       0x62   0x....'....        BL       mbedtls_ssl_write_version
   2156          
   2157              if( ( ret = ssl->conf->f_rng( ssl->conf->p_rng, p + 2, 46 ) ) != 0 )
   \       0x66   0x222E             MOVS     R2,#+46
   \       0x68   0xF109 0x0102      ADD      R1,R9,#+2
   \       0x6C   0x6828             LDR      R0,[R5, #+0]
   \       0x6E   0x69C0             LDR      R0,[R0, #+28]
   \       0x70   0x682B             LDR      R3,[R5, #+0]
   \       0x72   0x699B             LDR      R3,[R3, #+24]
   \       0x74   0x4798             BLX      R3
   \       0x76   0x0004             MOVS     R4,R0
   \       0x78   0xD00D             BEQ.N    ??ssl_write_encrypted_pms_4
   2158              {
   2159                  MBEDTLS_SSL_DEBUG_RET( 1, "f_rng", ret );
   \       0x7A   0x9401             STR      R4,[SP, #+4]
   \       0x7C   0x....'....        LDR.W    R0,??DataTable32_11
   \       0x80   0x9000             STR      R0,[SP, #+0]
   \       0x82   0xF640 0x036F      MOVW     R3,#+2159
   \       0x86   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x8A   0x2101             MOVS     R1,#+1
   \       0x8C   0x4628             MOV      R0,R5
   \       0x8E   0x....'....        BL       mbedtls_debug_print_ret
   2160                  return( ret );
   \       0x92   0x4620             MOV      R0,R4
   \       0x94   0xE065             B.N      ??ssl_write_encrypted_pms_3
   2161              }
   2162          
   2163              ssl->handshake->pmslen = 48;
   \                     ??ssl_write_encrypted_pms_4: (+1)
   \       0x96   0x2030             MOVS     R0,#+48
   \       0x98   0x6BE9             LDR      R1,[R5, #+60]
   \       0x9A   0xF8C1 0x0458      STR      R0,[R1, #+1112]
   2164          
   2165              if( ssl->session_negotiate->peer_cert == NULL )
   \       0x9E   0x6BA8             LDR      R0,[R5, #+56]
   \       0xA0   0x6DC0             LDR      R0,[R0, #+92]
   \       0xA2   0x2800             CMP      R0,#+0
   \       0xA4   0xD10C             BNE.N    ??ssl_write_encrypted_pms_5
   2166              {
   2167                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "certificate required" ) );
   \       0xA6   0x....'....        LDR.W    R0,??DataTable32_12
   \       0xAA   0x9000             STR      R0,[SP, #+0]
   \       0xAC   0xF640 0x0377      MOVW     R3,#+2167
   \       0xB0   0x....'....        LDR.W    R2,??DataTable32_8
   \       0xB4   0x2102             MOVS     R1,#+2
   \       0xB6   0x4628             MOV      R0,R5
   \       0xB8   0x....'....        BL       mbedtls_debug_print_msg
   2168                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0xBC   0x....             LDR.N    R0,??DataTable28  ;; 0xffff8900
   \       0xBE   0xE050             B.N      ??ssl_write_encrypted_pms_3
   2169              }
   2170          
   2171              /*
   2172               * Now write it out, encrypted
   2173               */
   2174              if( ! mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk,
   2175                          MBEDTLS_PK_RSA ) )
   \                     ??ssl_write_encrypted_pms_5: (+1)
   \       0xC0   0x2101             MOVS     R1,#+1
   \       0xC2   0x6BA8             LDR      R0,[R5, #+56]
   \       0xC4   0x6DC0             LDR      R0,[R0, #+92]
   \       0xC6   0x30BC             ADDS     R0,R0,#+188
   \       0xC8   0x....'....        BL       mbedtls_pk_can_do
   \       0xCC   0x2800             CMP      R0,#+0
   \       0xCE   0xD10D             BNE.N    ??ssl_write_encrypted_pms_6
   2176              {
   2177                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "certificate key type mismatch" ) );
   \       0xD0   0x....'....        LDR.W    R0,??DataTable32_13
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0xF640 0x0381      MOVW     R3,#+2177
   \       0xDA   0x....'....        LDR.W    R2,??DataTable32_8
   \       0xDE   0x2101             MOVS     R1,#+1
   \       0xE0   0x4628             MOV      R0,R5
   \       0xE2   0x....'....        BL       mbedtls_debug_print_msg
   2178                  return( MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH );
   \       0xE6   0x....'....        LDR.W    R0,??DataTable32_14  ;; 0xffff9300
   \       0xEA   0xE03A             B.N      ??ssl_write_encrypted_pms_3
   2179              }
   2180          
   2181              if( ( ret = mbedtls_pk_encrypt( &ssl->session_negotiate->peer_cert->pk,
   2182                                      p, ssl->handshake->pmslen,
   2183                                      ssl->out_msg + offset + len_bytes, olen,
   2184                                      MBEDTLS_SSL_OUT_CONTENT_LEN - offset - len_bytes,
   2185                                      ssl->conf->f_rng, ssl->conf->p_rng ) ) != 0 )
   \                     ??ssl_write_encrypted_pms_6: (+1)
   \       0xEC   0x6828             LDR      R0,[R5, #+0]
   \       0xEE   0x69C0             LDR      R0,[R0, #+28]
   \       0xF0   0x9003             STR      R0,[SP, #+12]
   \       0xF2   0x6828             LDR      R0,[R5, #+0]
   \       0xF4   0x6980             LDR      R0,[R0, #+24]
   \       0xF6   0x9002             STR      R0,[SP, #+8]
   \       0xF8   0xF5C6 0x5020      RSB      R0,R6,#+10240
   \       0xFC   0xEBA0 0x0008      SUB      R0,R0,R8
   \      0x100   0x9001             STR      R0,[SP, #+4]
   \      0x102   0x9700             STR      R7,[SP, #+0]
   \      0x104   0xF8D5 0x00C4      LDR      R0,[R5, #+196]
   \      0x108   0x4430             ADD      R0,R0,R6
   \      0x10A   0xEB00 0x0308      ADD      R3,R0,R8
   \      0x10E   0x6BE8             LDR      R0,[R5, #+60]
   \      0x110   0xF8D0 0x2458      LDR      R2,[R0, #+1112]
   \      0x114   0x4649             MOV      R1,R9
   \      0x116   0x6BA8             LDR      R0,[R5, #+56]
   \      0x118   0x6DC0             LDR      R0,[R0, #+92]
   \      0x11A   0x30BC             ADDS     R0,R0,#+188
   \      0x11C   0x....'....        BL       mbedtls_pk_encrypt
   \      0x120   0x0004             MOVS     R4,R0
   \      0x122   0xD00D             BEQ.N    ??ssl_write_encrypted_pms_7
   2186              {
   2187                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_rsa_pkcs1_encrypt", ret );
   \      0x124   0x9401             STR      R4,[SP, #+4]
   \      0x126   0x....'....        LDR.W    R0,??DataTable32_15
   \      0x12A   0x9000             STR      R0,[SP, #+0]
   \      0x12C   0xF640 0x038B      MOVW     R3,#+2187
   \      0x130   0x....'....        LDR.W    R2,??DataTable32_8
   \      0x134   0x2101             MOVS     R1,#+1
   \      0x136   0x4628             MOV      R0,R5
   \      0x138   0x....'....        BL       mbedtls_debug_print_ret
   2188                  return( ret );
   \      0x13C   0x4620             MOV      R0,R4
   \      0x13E   0xE010             B.N      ??ssl_write_encrypted_pms_3
   2189              }
   2190          
   2191          #if defined(MBEDTLS_SSL_PROTO_TLS1) || defined(MBEDTLS_SSL_PROTO_TLS1_1) || \
   2192              defined(MBEDTLS_SSL_PROTO_TLS1_2)
   2193              if( len_bytes == 2 )
   \                     ??ssl_write_encrypted_pms_7: (+1)
   \      0x140   0xF1B8 0x0F02      CMP      R8,#+2
   \      0x144   0xD10C             BNE.N    ??ssl_write_encrypted_pms_8
   2194              {
   2195                  ssl->out_msg[offset+0] = (unsigned char)( *olen >> 8 );
   \      0x146   0x6838             LDR      R0,[R7, #+0]
   \      0x148   0x0A00             LSRS     R0,R0,#+8
   \      0x14A   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x14E   0x5588             STRB     R0,[R1, R6]
   2196                  ssl->out_msg[offset+1] = (unsigned char)( *olen      );
   \      0x150   0x6838             LDR      R0,[R7, #+0]
   \      0x152   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x156   0x4431             ADD      R1,R1,R6
   \      0x158   0x7048             STRB     R0,[R1, #+1]
   2197                  *olen += 2;
   \      0x15A   0x6838             LDR      R0,[R7, #+0]
   \      0x15C   0x1C80             ADDS     R0,R0,#+2
   \      0x15E   0x6038             STR      R0,[R7, #+0]
   2198              }
   2199          #endif
   2200          
   2201              return( 0 );
   \                     ??ssl_write_encrypted_pms_8: (+1)
   \      0x160   0x2000             MOVS     R0,#+0
   \                     ??ssl_write_encrypted_pms_3: (+1)
   \      0x162   0xB005             ADD      SP,SP,#+20
   \      0x164   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
   2202          }
   2203          #endif /* MBEDTLS_KEY_EXCHANGE_RSA_ENABLED ||
   2204                    MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED */
   2205          
   2206          #if defined(MBEDTLS_SSL_PROTO_TLS1_2)
   2207          #if defined(MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED) ||                       \
   2208              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) ||                     \
   2209              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   2210          static int ssl_parse_signature_algorithm( mbedtls_ssl_context *ssl,
   2211                                                    unsigned char **p,
   2212                                                    unsigned char *end,
   2213                                                    mbedtls_md_type_t *md_alg,
   2214                                                    mbedtls_pk_type_t *pk_alg )
   2215          {
   \                     ssl_parse_signature_algorithm: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x461E             MOV      R6,R3
   \        0x8   0x9F08             LDR      R7,[SP, #+32]
   2216              ((void) ssl);
   2217              *md_alg = MBEDTLS_MD_NONE;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x7030             STRB     R0,[R6, #+0]
   2218              *pk_alg = MBEDTLS_PK_NONE;
   \        0xE   0x7038             STRB     R0,[R7, #+0]
   2219          
   2220              /* Only in TLS 1.2 */
   2221              if( ssl->minor_ver != MBEDTLS_SSL_MINOR_VERSION_3 )
   \       0x10   0x6960             LDR      R0,[R4, #+20]
   \       0x12   0x2803             CMP      R0,#+3
   \       0x14   0xD001             BEQ.N    ??ssl_parse_signature_algorithm_0
   2222              {
   2223                  return( 0 );
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xBDFE             POP      {R1-R7,PC}
   2224              }
   2225          
   2226              if( (*p) + 2 > end )
   \                     ??ssl_parse_signature_algorithm_0: (+1)
   \       0x1A   0x6828             LDR      R0,[R5, #+0]
   \       0x1C   0x1C80             ADDS     R0,R0,#+2
   \       0x1E   0x4282             CMP      R2,R0
   \       0x20   0xD202             BCS.N    ??ssl_parse_signature_algorithm_1
   2227                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x22   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x26   0xBDFE             POP      {R1-R7,PC}
   2228          
   2229              /*
   2230               * Get hash algorithm
   2231               */
   2232              if( ( *md_alg = mbedtls_ssl_md_alg_from_hash( (*p)[0] ) ) == MBEDTLS_MD_NONE )
   \                     ??ssl_parse_signature_algorithm_1: (+1)
   \       0x28   0x6828             LDR      R0,[R5, #+0]
   \       0x2A   0x7800             LDRB     R0,[R0, #+0]
   \       0x2C   0x....'....        BL       mbedtls_ssl_md_alg_from_hash
   \       0x30   0x7030             STRB     R0,[R6, #+0]
   \       0x32   0x2800             CMP      R0,#+0
   \       0x34   0x6828             LDR      R0,[R5, #+0]
   \       0x36   0xD10F             BNE.N    ??ssl_parse_signature_algorithm_2
   2233              {
   2234                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "Server used unsupported "
   2235                                      "HashAlgorithm %d", *(p)[0] ) );
   \       0x38   0x7800             LDRB     R0,[R0, #+0]
   \       0x3A   0x9001             STR      R0,[SP, #+4]
   \       0x3C   0x....'....        LDR.W    R0,??DataTable32_16
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0xF640 0x03BB      MOVW     R3,#+2235
   \       0x46   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x4A   0x2101             MOVS     R1,#+1
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       mbedtls_debug_print_msg
   2236                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x52   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x56   0xBDFE             POP      {R1-R7,PC}
   2237              }
   2238          
   2239              /*
   2240               * Get signature algorithm
   2241               */
   2242              if( ( *pk_alg = mbedtls_ssl_pk_alg_from_sig( (*p)[1] ) ) == MBEDTLS_PK_NONE )
   \                     ??ssl_parse_signature_algorithm_2: (+1)
   \       0x58   0x7840             LDRB     R0,[R0, #+1]
   \       0x5A   0x....'....        BL       mbedtls_ssl_pk_alg_from_sig
   \       0x5E   0x7038             STRB     R0,[R7, #+0]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD110             BNE.N    ??ssl_parse_signature_algorithm_3
   2243              {
   2244                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server used unsupported "
   2245                                      "SignatureAlgorithm %d", (*p)[1] ) );
   \       0x64   0x6828             LDR      R0,[R5, #+0]
   \       0x66   0x7840             LDRB     R0,[R0, #+1]
   \       0x68   0x9001             STR      R0,[SP, #+4]
   \       0x6A   0x....'....        LDR.W    R0,??DataTable32_17
   \       0x6E   0x9000             STR      R0,[SP, #+0]
   \       0x70   0xF640 0x03C5      MOVW     R3,#+2245
   \       0x74   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x78   0x2101             MOVS     R1,#+1
   \       0x7A   0x4620             MOV      R0,R4
   \       0x7C   0x....'....        BL       mbedtls_debug_print_msg
   2246                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0x80   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0x84   0xBDFE             POP      {R1-R7,PC}
   2247              }
   2248          
   2249              /*
   2250               * Check if the hash is acceptable
   2251               */
   2252              if( mbedtls_ssl_check_sig_hash( ssl, *md_alg ) != 0 )
   \                     ??ssl_parse_signature_algorithm_3: (+1)
   \       0x86   0x7831             LDRB     R1,[R6, #+0]
   \       0x88   0x4620             MOV      R0,R4
   \       0x8A   0x....'....        BL       mbedtls_ssl_check_sig_hash
   \       0x8E   0x2800             CMP      R0,#+0
   \       0x90   0xD010             BEQ.N    ??ssl_parse_signature_algorithm_4
   2253              {
   2254                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server used HashAlgorithm %d that was not offered",
   2255                                              *(p)[0] ) );
   \       0x92   0x6828             LDR      R0,[R5, #+0]
   \       0x94   0x7800             LDRB     R0,[R0, #+0]
   \       0x96   0x9001             STR      R0,[SP, #+4]
   \       0x98   0x....'....        LDR.W    R0,??DataTable32_18
   \       0x9C   0x9000             STR      R0,[SP, #+0]
   \       0x9E   0xF640 0x03CF      MOVW     R3,#+2255
   \       0xA2   0x....'....        LDR.W    R2,??DataTable32_8
   \       0xA6   0x2101             MOVS     R1,#+1
   \       0xA8   0x4620             MOV      R0,R4
   \       0xAA   0x....'....        BL       mbedtls_debug_print_msg
   2256                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   \       0xAE   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \       0xB2   0xBDFE             POP      {R1-R7,PC}
   2257              }
   2258          
   2259              MBEDTLS_SSL_DEBUG_MSG( 2, ( "Server used SignatureAlgorithm %d", (*p)[1] ) );
   \                     ??ssl_parse_signature_algorithm_4: (+1)
   \       0xB4   0x....'....        LDR.W    R6,??DataTable32_8
   \       0xB8   0x6828             LDR      R0,[R5, #+0]
   \       0xBA   0x7840             LDRB     R0,[R0, #+1]
   \       0xBC   0x9001             STR      R0,[SP, #+4]
   \       0xBE   0x....'....        LDR.W    R0,??DataTable32_19
   \       0xC2   0x9000             STR      R0,[SP, #+0]
   \       0xC4   0xF640 0x03D3      MOVW     R3,#+2259
   \       0xC8   0x4632             MOV      R2,R6
   \       0xCA   0x2102             MOVS     R1,#+2
   \       0xCC   0x4620             MOV      R0,R4
   \       0xCE   0x....'....        BL       mbedtls_debug_print_msg
   2260              MBEDTLS_SSL_DEBUG_MSG( 2, ( "Server used HashAlgorithm %d", (*p)[0] ) );
   \       0xD2   0x6828             LDR      R0,[R5, #+0]
   \       0xD4   0x7800             LDRB     R0,[R0, #+0]
   \       0xD6   0x9001             STR      R0,[SP, #+4]
   \       0xD8   0x....'....        LDR.W    R0,??DataTable32_20
   \       0xDC   0x9000             STR      R0,[SP, #+0]
   \       0xDE   0xF640 0x03D4      MOVW     R3,#+2260
   \       0xE2   0x4632             MOV      R2,R6
   \       0xE4   0x2102             MOVS     R1,#+2
   \       0xE6   0x4620             MOV      R0,R4
   \       0xE8   0x....'....        BL       mbedtls_debug_print_msg
   2261              *p += 2;
   \       0xEC   0x6828             LDR      R0,[R5, #+0]
   \       0xEE   0x1C80             ADDS     R0,R0,#+2
   \       0xF0   0x6028             STR      R0,[R5, #+0]
   2262          
   2263              return( 0 );
   \       0xF2   0x2000             MOVS     R0,#+0
   \       0xF4   0xBDFE             POP      {R1-R7,PC}       ;; return
   2264          }
   2265          #endif /* MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED ||
   2266                    MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED ||
   2267                    MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED */
   2268          #endif /* MBEDTLS_SSL_PROTO_TLS1_2 */
   2269          
   2270          #if defined(MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED) || \
   2271              defined(MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED)

   \                                 In section .text, align 2, keep-with-next
   2272          static int ssl_get_ecdh_params_from_cert( mbedtls_ssl_context *ssl )
   2273          {
   \                     ssl_get_ecdh_params_from_cert: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
   2274              int ret;
   2275              const mbedtls_ecp_keypair *peer_key;
   2276          
   2277              if( ssl->session_negotiate->peer_cert == NULL )
   \        0x4   0x6BA8             LDR      R0,[R5, #+56]
   \        0x6   0x6DC0             LDR      R0,[R0, #+92]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD10D             BNE.N    ??ssl_get_ecdh_params_from_cert_0
   2278              {
   2279                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "certificate required" ) );
   \        0xC   0x....'....        LDR.W    R0,??DataTable32_12
   \       0x10   0x9000             STR      R0,[SP, #+0]
   \       0x12   0xF640 0x03E7      MOVW     R3,#+2279
   \       0x16   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x1A   0x2102             MOVS     R1,#+2
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x....'....        BL       mbedtls_debug_print_msg
   2280                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0x22   0x....'....        LDR.W    R0,??DataTable32_21  ;; 0xffff8900
   \       0x26   0xBD3E             POP      {R1-R5,PC}
   2281              }
   2282          
   2283              if( ! mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk,
   2284                               MBEDTLS_PK_ECKEY ) )
   \                     ??ssl_get_ecdh_params_from_cert_0: (+1)
   \       0x28   0x2102             MOVS     R1,#+2
   \       0x2A   0x6BA8             LDR      R0,[R5, #+56]
   \       0x2C   0x6DC0             LDR      R0,[R0, #+92]
   \       0x2E   0x30BC             ADDS     R0,R0,#+188
   \       0x30   0x....'....        BL       mbedtls_pk_can_do
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD10D             BNE.N    ??ssl_get_ecdh_params_from_cert_1
   2285              {
   2286                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server key not ECDH capable" ) );
   \       0x38   0x....'....        LDR.W    R0,??DataTable32_22
   \       0x3C   0x9000             STR      R0,[SP, #+0]
   \       0x3E   0xF640 0x03EE      MOVW     R3,#+2286
   \       0x42   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x46   0x2101             MOVS     R1,#+1
   \       0x48   0x4628             MOV      R0,R5
   \       0x4A   0x....'....        BL       mbedtls_debug_print_msg
   2287                  return( MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH );
   \       0x4E   0x....'....        LDR.W    R0,??DataTable32_14  ;; 0xffff9300
   \       0x52   0xBD3E             POP      {R1-R5,PC}
   2288              }
   2289          
   2290              peer_key = mbedtls_pk_ec( ssl->session_negotiate->peer_cert->pk );
   \                     ??ssl_get_ecdh_params_from_cert_1: (+1)
   \       0x54   0x6BA8             LDR      R0,[R5, #+56]
   \       0x56   0x6DC0             LDR      R0,[R0, #+92]
   \       0x58   0xF100 0x02BC      ADD      R2,R0,#+188
   \       0x5C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0x60   0x....'....        BL       mbedtls_pk_ec
   \       0x64   0x4601             MOV      R1,R0
   2291          
   2292              if( ( ret = mbedtls_ecdh_get_params( &ssl->handshake->ecdh_ctx, peer_key,
   2293                                           MBEDTLS_ECDH_THEIRS ) ) != 0 )
   \       0x66   0x2201             MOVS     R2,#+1
   \       0x68   0x6BE8             LDR      R0,[R5, #+60]
   \       0x6A   0x3080             ADDS     R0,R0,#+128
   \       0x6C   0x....'....        BL       mbedtls_ecdh_get_params
   \       0x70   0x0004             MOVS     R4,R0
   \       0x72   0xD00D             BEQ.N    ??ssl_get_ecdh_params_from_cert_2
   2294              {
   2295                  MBEDTLS_SSL_DEBUG_RET( 1, ( "mbedtls_ecdh_get_params" ), ret );
   \       0x74   0x9401             STR      R4,[SP, #+4]
   \       0x76   0x....'....        LDR.W    R0,??DataTable32_23
   \       0x7A   0x9000             STR      R0,[SP, #+0]
   \       0x7C   0xF640 0x03F7      MOVW     R3,#+2295
   \       0x80   0x....'....        LDR.W    R2,??DataTable32_8
   \       0x84   0x2101             MOVS     R1,#+1
   \       0x86   0x4628             MOV      R0,R5
   \       0x88   0x....'....        BL       mbedtls_debug_print_ret
   2296                  return( ret );
   \       0x8C   0x4620             MOV      R0,R4
   \       0x8E   0xBD3E             POP      {R1-R5,PC}
   2297              }
   2298          
   2299              if( ssl_check_server_ecdh_params( ssl ) != 0 )
   \                     ??ssl_get_ecdh_params_from_cert_2: (+1)
   \       0x90   0x4628             MOV      R0,R5
   \       0x92   0x....'....        BL       ssl_check_server_ecdh_params
   \       0x96   0x2800             CMP      R0,#+0
   \       0x98   0xD00D             BEQ.N    ??ssl_get_ecdh_params_from_cert_3
   2300              {
   2301                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server certificate (ECDH curve)" ) );
   \       0x9A   0x....'....        LDR.W    R0,??DataTable32_24
   \       0x9E   0x9000             STR      R0,[SP, #+0]
   \       0xA0   0xF640 0x03FD      MOVW     R3,#+2301
   \       0xA4   0x....'....        LDR.W    R2,??DataTable33
   \       0xA8   0x2101             MOVS     R1,#+1
   \       0xAA   0x4628             MOV      R0,R5
   \       0xAC   0x....'....        BL       mbedtls_debug_print_msg
   2302                  return( MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE );
   \       0xB0   0x....'....        LDR.W    R0,??DataTable33_1  ;; 0xffff8600
   \       0xB4   0xBD3E             POP      {R1-R5,PC}
   2303              }
   2304          
   2305              return( ret );
   \                     ??ssl_get_ecdh_params_from_cert_3: (+1)
   \       0xB6   0x4620             MOV      R0,R4
   \       0xB8   0xBD3E             POP      {R1-R5,PC}       ;; return
   2306          }
   2307          #endif /* MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED) ||
   2308                    MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED */
   2309          

   \                                 In section .text, align 2, keep-with-next
   2310          static int ssl_parse_server_key_exchange( mbedtls_ssl_context *ssl )
   2311          {
   \                     ssl_parse_server_key_exchange: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xB096             SUB      SP,SP,#+88
   \        0x6   0x4605             MOV      R5,R0
   2312              int ret;
   2313              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   2314                  ssl->transform_negotiate->ciphersuite_info;
   \        0x8   0x6CE8             LDR      R0,[R5, #+76]
   \        0xA   0xF8D0 0xA000      LDR      R10,[R0, #+0]
   2315              unsigned char *p = NULL, *end = NULL;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x9004             STR      R0,[SP, #+16]
   2316          
   2317              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse server key exchange" ) );
   \       0x12   0x....'....        LDR.W    R6,??DataTable33
   \       0x16   0x....'....        LDR.W    R0,??DataTable33_2
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0xF640 0x130D      MOVW     R3,#+2317
   \       0x20   0x4632             MOV      R2,R6
   \       0x22   0x2102             MOVS     R1,#+2
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x....'....        BL       mbedtls_debug_print_msg
   2318          
   2319          #if defined(MBEDTLS_KEY_EXCHANGE_RSA_ENABLED)
   2320              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA )
   \       0x2A   0xF89A 0x000A      LDRB     R0,[R10, #+10]
   \       0x2E   0x2801             CMP      R0,#+1
   \       0x30   0xD10E             BNE.N    ??ssl_parse_server_key_exchange_0
   2321              {
   2322                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip parse server key exchange" ) );
   \       0x32   0x....'....        LDR.W    R0,??DataTable33_3
   \       0x36   0x9000             STR      R0,[SP, #+0]
   \       0x38   0xF640 0x1312      MOVW     R3,#+2322
   \       0x3C   0x4632             MOV      R2,R6
   \       0x3E   0x2102             MOVS     R1,#+2
   \       0x40   0x4628             MOV      R0,R5
   \       0x42   0x....'....        BL       mbedtls_debug_print_msg
   2323                  ssl->state++;
   \       0x46   0x6868             LDR      R0,[R5, #+4]
   \       0x48   0x1C40             ADDS     R0,R0,#+1
   \       0x4A   0x6068             STR      R0,[R5, #+4]
   2324                  return( 0 );
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0xE06C             B.N      ??ssl_parse_server_key_exchange_1
   2325              }
   2326              ((void) p);
   2327              ((void) end);
   2328          #endif
   2329          
   2330          #if defined(MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED) || \
   2331              defined(MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED)
   2332              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_RSA ||
   2333                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA )
   \                     ??ssl_parse_server_key_exchange_0: (+1)
   \       0x50   0x2809             CMP      R0,#+9
   \       0x52   0xD001             BEQ.N    ??ssl_parse_server_key_exchange_2
   \       0x54   0x280A             CMP      R0,#+10
   \       0x56   0xD125             BNE.N    ??ssl_parse_server_key_exchange_3
   2334              {
   2335                  if( ( ret = ssl_get_ecdh_params_from_cert( ssl ) ) != 0 )
   \                     ??ssl_parse_server_key_exchange_2: (+1)
   \       0x58   0x4628             MOV      R0,R5
   \       0x5A   0x....'....        BL       ssl_get_ecdh_params_from_cert
   \       0x5E   0x0004             MOVS     R4,R0
   \       0x60   0xD011             BEQ.N    ??ssl_parse_server_key_exchange_4
   2336                  {
   2337                      MBEDTLS_SSL_DEBUG_RET( 1, "ssl_get_ecdh_params_from_cert", ret );
   \       0x62   0x9401             STR      R4,[SP, #+4]
   \       0x64   0x....'....        LDR.W    R0,??DataTable33_4
   \       0x68   0x9000             STR      R0,[SP, #+0]
   \       0x6A   0xF640 0x1321      MOVW     R3,#+2337
   \       0x6E   0x4632             MOV      R2,R6
   \       0x70   0x2101             MOVS     R1,#+1
   \       0x72   0x4628             MOV      R0,R5
   \       0x74   0x....'....        BL       mbedtls_debug_print_ret
   2338                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2339                                                      MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   \       0x78   0x2228             MOVS     R2,#+40
   \       0x7A   0x2102             MOVS     R1,#+2
   \       0x7C   0x4628             MOV      R0,R5
   \       0x7E   0x....'....        BL       mbedtls_ssl_send_alert_message
   2340                      return( ret );
   \       0x82   0x4620             MOV      R0,R4
   \       0x84   0xE051             B.N      ??ssl_parse_server_key_exchange_1
   2341                  }
   2342          
   2343                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip parse server key exchange" ) );
   \                     ??ssl_parse_server_key_exchange_4: (+1)
   \       0x86   0x....'....        LDR.W    R0,??DataTable33_3
   \       0x8A   0x9000             STR      R0,[SP, #+0]
   \       0x8C   0xF640 0x1327      MOVW     R3,#+2343
   \       0x90   0x4632             MOV      R2,R6
   \       0x92   0x2102             MOVS     R1,#+2
   \       0x94   0x4628             MOV      R0,R5
   \       0x96   0x....'....        BL       mbedtls_debug_print_msg
   2344                  ssl->state++;
   \       0x9A   0x6868             LDR      R0,[R5, #+4]
   \       0x9C   0x1C40             ADDS     R0,R0,#+1
   \       0x9E   0x6068             STR      R0,[R5, #+4]
   2345                  return( 0 );
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0xE042             B.N      ??ssl_parse_server_key_exchange_1
   2346              }
   2347              ((void) p);
   2348              ((void) end);
   2349          #endif /* MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED ||
   2350                    MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED */
   2351          
   2352              if( ( ret = mbedtls_ssl_read_record( ssl, 1 ) ) != 0 )
   \                     ??ssl_parse_server_key_exchange_3: (+1)
   \       0xA4   0x2101             MOVS     R1,#+1
   \       0xA6   0x4628             MOV      R0,R5
   \       0xA8   0x....'....        BL       mbedtls_ssl_read_record
   \       0xAC   0x0004             MOVS     R4,R0
   \       0xAE   0xD00C             BEQ.N    ??ssl_parse_server_key_exchange_5
   2353              {
   2354                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_read_record", ret );
   \       0xB0   0x9401             STR      R4,[SP, #+4]
   \       0xB2   0x....'....        LDR.W    R0,??DataTable33_5
   \       0xB6   0x9000             STR      R0,[SP, #+0]
   \       0xB8   0xF640 0x1332      MOVW     R3,#+2354
   \       0xBC   0x4632             MOV      R2,R6
   \       0xBE   0x2101             MOVS     R1,#+1
   \       0xC0   0x4628             MOV      R0,R5
   \       0xC2   0x....'....        BL       mbedtls_debug_print_ret
   2355                  return( ret );
   \       0xC6   0x4620             MOV      R0,R4
   \       0xC8   0xE02F             B.N      ??ssl_parse_server_key_exchange_1
   2356              }
   2357          
   2358              if( ssl->in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE )
   \                     ??ssl_parse_server_key_exchange_5: (+1)
   \       0xCA   0x6FA8             LDR      R0,[R5, #+120]
   \       0xCC   0x2816             CMP      R0,#+22
   \       0xCE   0xD011             BEQ.N    ??ssl_parse_server_key_exchange_6
   2359              {
   2360                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   \       0xD0   0x....'....        LDR.W    R0,??DataTable33_6
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0xF640 0x1338      MOVW     R3,#+2360
   \       0xDA   0x4632             MOV      R2,R6
   \       0xDC   0x2101             MOVS     R1,#+1
   \       0xDE   0x4628             MOV      R0,R5
   \       0xE0   0x....'....        BL       mbedtls_debug_print_msg
   2361                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2362                                                  MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE );
   \       0xE4   0x220A             MOVS     R2,#+10
   \       0xE6   0x2102             MOVS     R1,#+2
   \       0xE8   0x4628             MOV      R0,R5
   \       0xEA   0x....'....        BL       mbedtls_ssl_send_alert_message
   2363                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0xEE   0x....'....        LDR.W    R0,??DataTable32_21  ;; 0xffff8900
   \       0xF2   0xE01A             B.N      ??ssl_parse_server_key_exchange_1
   2364              }
   2365          
   2366              /*
   2367               * ServerKeyExchange may be skipped with PSK and RSA-PSK when the server
   2368               * doesn't use a psk_identity_hint
   2369               */
   2370              if( ssl->in_msg[0] != MBEDTLS_SSL_HS_SERVER_KEY_EXCHANGE )
   \                     ??ssl_parse_server_key_exchange_6: (+1)
   \       0xF4   0x6F28             LDR      R0,[R5, #+112]
   \       0xF6   0x7800             LDRB     R0,[R0, #+0]
   \       0xF8   0x280C             CMP      R0,#+12
   \       0xFA   0xD02B             BEQ.N    ??ssl_parse_server_key_exchange_7
   2371              {
   2372                  if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
   2373                      ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK )
   \       0xFC   0xF89A 0x000A      LDRB     R0,[R10, #+10]
   \      0x100   0x2805             CMP      R0,#+5
   \      0x102   0xD001             BEQ.N    ??ssl_parse_server_key_exchange_8
   \      0x104   0x2807             CMP      R0,#+7
   \      0x106   0xD113             BNE.N    ??ssl_parse_server_key_exchange_9
   2374                  {
   2375                      /* Current message is probably either
   2376                       * CertificateRequest or ServerHelloDone */
   2377                      ssl->keep_current_message = 1;
   \                     ??ssl_parse_server_key_exchange_8: (+1)
   \      0x108   0x2001             MOVS     R0,#+1
   \      0x10A   0xF8C5 0x00A8      STR      R0,[R5, #+168]
   2378                      goto exit;
   2379                  }
   2380          
   2381                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "server key exchange message must "
   2382                                              "not be skipped" ) );
   2383                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2384                                                  MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE );
   2385          
   2386                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   2387              }
   2388          
   2389              p   = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl );
   2390              end = ssl->in_msg + ssl->in_hslen;
   2391              MBEDTLS_SSL_DEBUG_BUF( 3,   "server key exchange", p, end - p );
   2392          
   2393          #if defined(MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED)
   2394              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
   2395                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK ||
   2396                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK ||
   2397                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK )
   2398              {
   2399                  if( ssl_parse_server_psk_hint( ssl, &p, end ) != 0 )
   2400                  {
   2401                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2402                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2403                                                      MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2404                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2405                  }
   2406              } /* FALLTROUGH */
   2407          #endif /* MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED */
   2408          
   2409          #if defined(MBEDTLS_KEY_EXCHANGE_PSK_ENABLED) ||                       \
   2410              defined(MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED)
   2411              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
   2412                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK )
   2413                  ; /* nothing more to do */
   2414              else
   2415          #endif /* MBEDTLS_KEY_EXCHANGE_PSK_ENABLED ||
   2416                    MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED */
   2417          #if defined(MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED) ||                       \
   2418              defined(MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED)
   2419              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_RSA ||
   2420                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK )
   2421              {
   2422                  if( ssl_parse_server_dh_params( ssl, &p, end ) != 0 )
   2423                  {
   2424                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2425                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2426                                                      MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2427                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2428                  }
   2429              }
   2430              else
   2431          #endif /* MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED ||
   2432                    MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED */
   2433          #if defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) ||                     \
   2434              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED) ||                     \
   2435              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED)
   2436              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_RSA ||
   2437                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK ||
   2438                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA )
   2439              {
   2440                  if( ssl_parse_server_ecdh_params( ssl, &p, end ) != 0 )
   2441                  {
   2442                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2443                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2444                                                      MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2445                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2446                  }
   2447              }
   2448              else
   2449          #endif /* MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED ||
   2450                    MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED ||
   2451                    MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED */
   2452          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   2453              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE )
   2454              {
   2455                  ret = mbedtls_ecjpake_read_round_two( &ssl->handshake->ecjpake_ctx,
   2456                                                        p, end - p );
   2457                  if( ret != 0 )
   2458                  {
   2459                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecjpake_read_round_two", ret );
   2460                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2461                                                      MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2462                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2463                  }
   2464              }
   2465              else
   2466          #endif /* MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED */
   2467              {
   2468                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   2469                  return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   2470              }
   2471          
   2472          #if defined(MBEDTLS_KEY_EXCHANGE__WITH_SERVER_SIGNATURE__ENABLED)
   2473              if( mbedtls_ssl_ciphersuite_uses_server_signature( ciphersuite_info ) )
   2474              {
   2475                  size_t sig_len, hashlen;
   2476                  unsigned char hash[64];
   2477                  mbedtls_md_type_t md_alg = MBEDTLS_MD_NONE;
   2478                  mbedtls_pk_type_t pk_alg = MBEDTLS_PK_NONE;
   2479                  unsigned char *params = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl );
   2480                  size_t params_len = p - params;
   2481          
   2482                  /*
   2483                   * Handle the digitally-signed structure
   2484                   */
   2485          #if defined(MBEDTLS_SSL_PROTO_TLS1_2)
   2486                  if( ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_3 )
   2487                  {
   2488                      if( ssl_parse_signature_algorithm( ssl, &p, end,
   2489                                                         &md_alg, &pk_alg ) != 0 )
   2490                      {
   2491                          MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2492                          mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2493                                                          MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2494                          return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2495                      }
   2496          
   2497                      if( pk_alg != mbedtls_ssl_get_ciphersuite_sig_pk_alg( ciphersuite_info ) )
   2498                      {
   2499                          MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2500                          mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2501                                                          MBEDTLS_SSL_ALERT_MSG_ILLEGAL_PARAMETER );
   2502                          return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2503                      }
   2504                  }
   2505                  else
   2506          #endif /* MBEDTLS_SSL_PROTO_TLS1_2 */
   2507          #if defined(MBEDTLS_SSL_PROTO_SSL3) || defined(MBEDTLS_SSL_PROTO_TLS1) || \
   2508              defined(MBEDTLS_SSL_PROTO_TLS1_1)
   2509                  if( ssl->minor_ver < MBEDTLS_SSL_MINOR_VERSION_3 )
   2510                  {
   2511                      pk_alg = mbedtls_ssl_get_ciphersuite_sig_pk_alg( ciphersuite_info );
   2512          
   2513                      /* Default hash for ECDSA is SHA-1 */
   2514                      if( pk_alg == MBEDTLS_PK_ECDSA && md_alg == MBEDTLS_MD_NONE )
   2515                          md_alg = MBEDTLS_MD_SHA1;
   2516                  }
   2517                  else
   2518          #endif
   2519                  {
   2520                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   2521                      return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   2522                  }
   2523          
   2524                  /*
   2525                   * Read signature
   2526                   */
   2527          
   2528                  if( p > end - 2 )
   2529                  {
   2530                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2531                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2532                                                      MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2533                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2534                  }
   2535                  sig_len = ( p[0] << 8 ) | p[1];
   2536                  p += 2;
   2537          
   2538                  if( p != end - sig_len )
   2539                  {
   2540                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2541                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2542                                                      MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2543                      return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
   2544                  }
   2545          
   2546                  MBEDTLS_SSL_DEBUG_BUF( 3, "signature", p, sig_len );
   2547          
   2548                  /*
   2549                   * Compute the hash that has been signed
   2550                   */
   2551          #if defined(MBEDTLS_SSL_PROTO_SSL3) || defined(MBEDTLS_SSL_PROTO_TLS1) || \
   2552              defined(MBEDTLS_SSL_PROTO_TLS1_1)
   2553                  if( md_alg == MBEDTLS_MD_NONE )
   2554                  {
   2555                      hashlen = 36;
   2556                      ret = mbedtls_ssl_get_key_exchange_md_ssl_tls( ssl, hash, params,
   2557                                                                     params_len );
   2558                      if( ret != 0 )
   2559                          return( ret );
   2560                  }
   2561                  else
   2562          #endif /* MBEDTLS_SSL_PROTO_SSL3 || MBEDTLS_SSL_PROTO_TLS1 || \
   2563                    MBEDTLS_SSL_PROTO_TLS1_1 */
   2564          #if defined(MBEDTLS_SSL_PROTO_TLS1) || defined(MBEDTLS_SSL_PROTO_TLS1_1) || \
   2565              defined(MBEDTLS_SSL_PROTO_TLS1_2)
   2566                  if( md_alg != MBEDTLS_MD_NONE )
   2567                  {
   2568                      ret = mbedtls_ssl_get_key_exchange_md_tls1_2( ssl, hash, &hashlen,
   2569                                                                    params, params_len,
   2570                                                                    md_alg );
   2571                      if( ret != 0 )
   2572                          return( ret );
   2573                  }
   2574                  else
   2575          #endif /* MBEDTLS_SSL_PROTO_TLS1 || MBEDTLS_SSL_PROTO_TLS1_1 || \
   2576                    MBEDTLS_SSL_PROTO_TLS1_2 */
   2577                  {
   2578                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   2579                      return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   2580                  }
   2581          
   2582                  MBEDTLS_SSL_DEBUG_BUF( 3, "parameters hash", hash, hashlen );
   2583          
   2584                  if( ssl->session_negotiate->peer_cert == NULL )
   2585                  {
   2586                      MBEDTLS_SSL_DEBUG_MSG( 2, ( "certificate required" ) );
   2587                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2588                                                      MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   2589                      return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   2590                  }
   2591          
   2592                  /*
   2593                   * Verify signature
   2594                   */
   2595                  if( ! mbedtls_pk_can_do( &ssl->session_negotiate->peer_cert->pk, pk_alg ) )
   2596                  {
   2597                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server key exchange message" ) );
   2598                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2599                                                      MBEDTLS_SSL_ALERT_MSG_HANDSHAKE_FAILURE );
   2600                      return( MBEDTLS_ERR_SSL_PK_TYPE_MISMATCH );
   2601                  }
   2602          
   2603                  if( ( ret = mbedtls_pk_verify( &ssl->session_negotiate->peer_cert->pk,
   2604                                         md_alg, hash, hashlen, p, sig_len ) ) != 0 )
   2605                  {
   2606                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2607                                                      MBEDTLS_SSL_ALERT_MSG_DECRYPT_ERROR );
   2608                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_pk_verify", ret );
   2609                      return( ret );
   2610                  }
   2611              }
   2612          #endif /* MBEDTLS_KEY_EXCHANGE__WITH_SERVER_SIGNATURE__ENABLED */
   2613          
   2614          exit:
   2615              ssl->state++;
   \                     ??ssl_parse_server_key_exchange_10: (+1)
   \      0x10E   0x6868             LDR      R0,[R5, #+4]
   \      0x110   0x1C40             ADDS     R0,R0,#+1
   \      0x112   0x6068             STR      R0,[R5, #+4]
   2616          
   2617              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse server key exchange" ) );
   \      0x114   0x....'....        LDR.W    R0,??DataTable33_7
   \      0x118   0x9000             STR      R0,[SP, #+0]
   \      0x11A   0xF640 0x2339      MOVW     R3,#+2617
   \      0x11E   0x4632             MOV      R2,R6
   \      0x120   0x2102             MOVS     R1,#+2
   \      0x122   0x4628             MOV      R0,R5
   \      0x124   0x....'....        BL       mbedtls_debug_print_msg
   2618          
   2619              return( 0 );
   \      0x128   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_server_key_exchange_1: (+1)
   \      0x12A   0xB016             ADD      SP,SP,#+88
   \      0x12C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \                     ??ssl_parse_server_key_exchange_9: (+1)
   \      0x130   0x....'....        LDR.W    R0,??DataTable33_8
   \      0x134   0x9000             STR      R0,[SP, #+0]
   \      0x136   0xF640 0x134E      MOVW     R3,#+2382
   \      0x13A   0x4632             MOV      R2,R6
   \      0x13C   0x2101             MOVS     R1,#+1
   \      0x13E   0x4628             MOV      R0,R5
   \      0x140   0x....'....        BL       mbedtls_debug_print_msg
   \      0x144   0x220A             MOVS     R2,#+10
   \      0x146   0x2102             MOVS     R1,#+2
   \      0x148   0x4628             MOV      R0,R5
   \      0x14A   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x14E   0x....'....        LDR.W    R0,??DataTable32_21  ;; 0xffff8900
   \      0x152   0xE7EA             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_7: (+1)
   \      0x154   0x4628             MOV      R0,R5
   \      0x156   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x15A   0x6F29             LDR      R1,[R5, #+112]
   \      0x15C   0x4408             ADD      R0,R1,R0
   \      0x15E   0x9004             STR      R0,[SP, #+16]
   \      0x160   0x6F28             LDR      R0,[R5, #+112]
   \      0x162   0xF8D5 0x10A0      LDR      R1,[R5, #+160]
   \      0x166   0xEB00 0x0901      ADD      R9,R0,R1
   \      0x16A   0x9804             LDR      R0,[SP, #+16]
   \      0x16C   0xEBA9 0x0000      SUB      R0,R9,R0
   \      0x170   0x9002             STR      R0,[SP, #+8]
   \      0x172   0x9804             LDR      R0,[SP, #+16]
   \      0x174   0x9001             STR      R0,[SP, #+4]
   \      0x176   0x....'....        LDR.W    R0,??DataTable33_9
   \      0x17A   0x9000             STR      R0,[SP, #+0]
   \      0x17C   0xF640 0x1357      MOVW     R3,#+2391
   \      0x180   0x4632             MOV      R2,R6
   \      0x182   0x2103             MOVS     R1,#+3
   \      0x184   0x4628             MOV      R0,R5
   \      0x186   0x....'....        BL       mbedtls_debug_print_buf
   \      0x18A   0xF89A 0x000A      LDRB     R0,[R10, #+10]
   \      0x18E   0x2805             CMP      R0,#+5
   \      0x190   0xD005             BEQ.N    ??ssl_parse_server_key_exchange_11
   \      0x192   0x2807             CMP      R0,#+7
   \      0x194   0xD003             BEQ.N    ??ssl_parse_server_key_exchange_11
   \      0x196   0x2806             CMP      R0,#+6
   \      0x198   0xD001             BEQ.N    ??ssl_parse_server_key_exchange_11
   \      0x19A   0x2808             CMP      R0,#+8
   \      0x19C   0xD118             BNE.N    ??ssl_parse_server_key_exchange_12
   \                     ??ssl_parse_server_key_exchange_11: (+1)
   \      0x19E   0x464A             MOV      R2,R9
   \      0x1A0   0xA904             ADD      R1,SP,#+16
   \      0x1A2   0x4628             MOV      R0,R5
   \      0x1A4   0x....'....        BL       ssl_parse_server_psk_hint
   \      0x1A8   0x2800             CMP      R0,#+0
   \      0x1AA   0xD011             BEQ.N    ??ssl_parse_server_key_exchange_12
   \      0x1AC   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x1B0   0x9000             STR      R0,[SP, #+0]
   \      0x1B2   0xF640 0x1361      MOVW     R3,#+2401
   \      0x1B6   0x4632             MOV      R2,R6
   \      0x1B8   0x2101             MOVS     R1,#+1
   \      0x1BA   0x4628             MOV      R0,R5
   \      0x1BC   0x....'....        BL       mbedtls_debug_print_msg
   \      0x1C0   0x222F             MOVS     R2,#+47
   \      0x1C2   0x2102             MOVS     R1,#+2
   \      0x1C4   0x4628             MOV      R0,R5
   \      0x1C6   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x1CA   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x1CE   0xE7AC             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_12: (+1)
   \      0x1D0   0xF89A 0x000A      LDRB     R0,[R10, #+10]
   \      0x1D4   0x2805             CMP      R0,#+5
   \      0x1D6   0xD04A             BEQ.N    ??ssl_parse_server_key_exchange_13
   \      0x1D8   0x2807             CMP      R0,#+7
   \      0x1DA   0xD048             BEQ.N    ??ssl_parse_server_key_exchange_13
   \      0x1DC   0x2802             CMP      R0,#+2
   \      0x1DE   0xD001             BEQ.N    ??ssl_parse_server_key_exchange_14
   \      0x1E0   0x2806             CMP      R0,#+6
   \      0x1E2   0xD118             BNE.N    ??ssl_parse_server_key_exchange_15
   \                     ??ssl_parse_server_key_exchange_14: (+1)
   \      0x1E4   0x464A             MOV      R2,R9
   \      0x1E6   0xA904             ADD      R1,SP,#+16
   \      0x1E8   0x4628             MOV      R0,R5
   \      0x1EA   0x....'....        BL       ssl_parse_server_dh_params
   \      0x1EE   0x2800             CMP      R0,#+0
   \      0x1F0   0xD03D             BEQ.N    ??ssl_parse_server_key_exchange_13
   \      0x1F2   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x1F6   0x9000             STR      R0,[SP, #+0]
   \      0x1F8   0xF640 0x1378      MOVW     R3,#+2424
   \      0x1FC   0x4632             MOV      R2,R6
   \      0x1FE   0x2101             MOVS     R1,#+1
   \      0x200   0x4628             MOV      R0,R5
   \      0x202   0x....'....        BL       mbedtls_debug_print_msg
   \      0x206   0x222F             MOVS     R2,#+47
   \      0x208   0x2102             MOVS     R1,#+2
   \      0x20A   0x4628             MOV      R0,R5
   \      0x20C   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x210   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x214   0xE789             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_15: (+1)
   \      0x216   0x2803             CMP      R0,#+3
   \      0x218   0xD003             BEQ.N    ??ssl_parse_server_key_exchange_16
   \      0x21A   0x2808             CMP      R0,#+8
   \      0x21C   0xD001             BEQ.N    ??ssl_parse_server_key_exchange_16
   \      0x21E   0x2804             CMP      R0,#+4
   \      0x220   0xD118             BNE.N    ??ssl_parse_server_key_exchange_17
   \                     ??ssl_parse_server_key_exchange_16: (+1)
   \      0x222   0x464A             MOV      R2,R9
   \      0x224   0xA904             ADD      R1,SP,#+16
   \      0x226   0x4628             MOV      R0,R5
   \      0x228   0x....'....        BL       ssl_parse_server_ecdh_params
   \      0x22C   0x2800             CMP      R0,#+0
   \      0x22E   0xD01E             BEQ.N    ??ssl_parse_server_key_exchange_13
   \      0x230   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x234   0x9000             STR      R0,[SP, #+0]
   \      0x236   0xF640 0x138A      MOVW     R3,#+2442
   \      0x23A   0x4632             MOV      R2,R6
   \      0x23C   0x2101             MOVS     R1,#+1
   \      0x23E   0x4628             MOV      R0,R5
   \      0x240   0x....'....        BL       mbedtls_debug_print_msg
   \      0x244   0x222F             MOVS     R2,#+47
   \      0x246   0x2102             MOVS     R1,#+2
   \      0x248   0x4628             MOV      R0,R5
   \      0x24A   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x24E   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x252   0xE76A             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_17: (+1)
   \      0x254   0x....'....        LDR.W    R0,??DataTable31_3
   \      0x258   0x9000             STR      R0,[SP, #+0]
   \      0x25A   0xF640 0x13A4      MOVW     R3,#+2468
   \      0x25E   0x4632             MOV      R2,R6
   \      0x260   0x2101             MOVS     R1,#+1
   \      0x262   0x4628             MOV      R0,R5
   \      0x264   0x....'....        BL       mbedtls_debug_print_msg
   \      0x268   0x....'....        LDR.W    R0,??DataTable31_4  ;; 0xffff9400
   \      0x26C   0xE75D             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_13: (+1)
   \      0x26E   0x4650             MOV      R0,R10
   \      0x270   0x....'....        BL       mbedtls_ssl_ciphersuite_uses_server_signature
   \      0x274   0x2800             CMP      R0,#+0
   \      0x276   0xF43F 0xAF4A      BEQ.W    ??ssl_parse_server_key_exchange_10
   \      0x27A   0x2000             MOVS     R0,#+0
   \      0x27C   0xF8AD 0x000C      STRH     R0,[SP, #+12]
   \      0x280   0x4628             MOV      R0,R5
   \      0x282   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x286   0x6F29             LDR      R1,[R5, #+112]
   \      0x288   0x180F             ADDS     R7,R1,R0
   \      0x28A   0xF8DD 0x8010      LDR      R8,[SP, #+16]
   \      0x28E   0xEBA8 0x0807      SUB      R8,R8,R7
   \      0x292   0x6968             LDR      R0,[R5, #+20]
   \      0x294   0x2803             CMP      R0,#+3
   \      0x296   0xD135             BNE.N    ??ssl_parse_server_key_exchange_18
   \      0x298   0xF10D 0x000D      ADD      R0,SP,#+13
   \      0x29C   0x9000             STR      R0,[SP, #+0]
   \      0x29E   0xAB03             ADD      R3,SP,#+12
   \      0x2A0   0x464A             MOV      R2,R9
   \      0x2A2   0xA904             ADD      R1,SP,#+16
   \      0x2A4   0x4628             MOV      R0,R5
   \      0x2A6   0x....'....        BL       ssl_parse_signature_algorithm
   \      0x2AA   0x2800             CMP      R0,#+0
   \      0x2AC   0xD011             BEQ.N    ??ssl_parse_server_key_exchange_19
   \      0x2AE   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x2B2   0x9000             STR      R0,[SP, #+0]
   \      0x2B4   0xF640 0x13BB      MOVW     R3,#+2491
   \      0x2B8   0x4632             MOV      R2,R6
   \      0x2BA   0x2101             MOVS     R1,#+1
   \      0x2BC   0x4628             MOV      R0,R5
   \      0x2BE   0x....'....        BL       mbedtls_debug_print_msg
   \      0x2C2   0x222F             MOVS     R2,#+47
   \      0x2C4   0x2102             MOVS     R1,#+2
   \      0x2C6   0x4628             MOV      R0,R5
   \      0x2C8   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x2CC   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x2D0   0xE72B             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_19: (+1)
   \      0x2D2   0x4650             MOV      R0,R10
   \      0x2D4   0x....'....        BL       mbedtls_ssl_get_ciphersuite_sig_pk_alg
   \      0x2D8   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \      0x2DC   0x4281             CMP      R1,R0
   \      0x2DE   0xD020             BEQ.N    ??ssl_parse_server_key_exchange_20
   \      0x2E0   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x2E4   0x9000             STR      R0,[SP, #+0]
   \      0x2E6   0xF640 0x13C3      MOVW     R3,#+2499
   \      0x2EA   0x4632             MOV      R2,R6
   \      0x2EC   0x2101             MOVS     R1,#+1
   \      0x2EE   0x4628             MOV      R0,R5
   \      0x2F0   0x....'....        BL       mbedtls_debug_print_msg
   \      0x2F4   0x222F             MOVS     R2,#+47
   \      0x2F6   0x2102             MOVS     R1,#+2
   \      0x2F8   0x4628             MOV      R0,R5
   \      0x2FA   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x2FE   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x302   0xE712             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_18: (+1)
   \      0x304   0xDA24             BGE.N    ??ssl_parse_server_key_exchange_21
   \      0x306   0x4650             MOV      R0,R10
   \      0x308   0x....'....        BL       mbedtls_ssl_get_ciphersuite_sig_pk_alg
   \      0x30C   0xF88D 0x000D      STRB     R0,[SP, #+13]
   \      0x310   0x2804             CMP      R0,#+4
   \      0x312   0xD106             BNE.N    ??ssl_parse_server_key_exchange_20
   \      0x314   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \      0x318   0x2800             CMP      R0,#+0
   \      0x31A   0xD102             BNE.N    ??ssl_parse_server_key_exchange_20
   \      0x31C   0x2004             MOVS     R0,#+4
   \      0x31E   0xF88D 0x000C      STRB     R0,[SP, #+12]
   \                     ??ssl_parse_server_key_exchange_20: (+1)
   \      0x322   0xF1A9 0x0002      SUB      R0,R9,#+2
   \      0x326   0x9904             LDR      R1,[SP, #+16]
   \      0x328   0x4288             CMP      R0,R1
   \      0x32A   0xD21E             BCS.N    ??ssl_parse_server_key_exchange_22
   \      0x32C   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x330   0x9000             STR      R0,[SP, #+0]
   \      0x332   0xF640 0x13E2      MOVW     R3,#+2530
   \      0x336   0x4632             MOV      R2,R6
   \      0x338   0x2101             MOVS     R1,#+1
   \      0x33A   0x4628             MOV      R0,R5
   \      0x33C   0x....'....        BL       mbedtls_debug_print_msg
   \      0x340   0x2232             MOVS     R2,#+50
   \      0x342   0x2102             MOVS     R1,#+2
   \      0x344   0x4628             MOV      R0,R5
   \      0x346   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x34A   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x34E   0xE6EC             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_21: (+1)
   \      0x350   0x....'....        LDR.W    R0,??DataTable31_3
   \      0x354   0x9000             STR      R0,[SP, #+0]
   \      0x356   0xF640 0x13D8      MOVW     R3,#+2520
   \      0x35A   0x4632             MOV      R2,R6
   \      0x35C   0x2101             MOVS     R1,#+1
   \      0x35E   0x4628             MOV      R0,R5
   \      0x360   0x....'....        BL       mbedtls_debug_print_msg
   \      0x364   0x....'....        LDR.W    R0,??DataTable31_4  ;; 0xffff9400
   \      0x368   0xE6DF             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_22: (+1)
   \      0x36A   0x4608             MOV      R0,R1
   \      0x36C   0x7800             LDRB     R0,[R0, #+0]
   \      0x36E   0x784C             LDRB     R4,[R1, #+1]
   \      0x370   0xEA44 0x2400      ORR      R4,R4,R0, LSL #+8
   \      0x374   0x4608             MOV      R0,R1
   \      0x376   0x1C80             ADDS     R0,R0,#+2
   \      0x378   0x9004             STR      R0,[SP, #+16]
   \      0x37A   0x4261             RSBS     R1,R4,#+0
   \      0x37C   0x4449             ADD      R1,R9,R1
   \      0x37E   0x4288             CMP      R0,R1
   \      0x380   0xD011             BEQ.N    ??ssl_parse_server_key_exchange_23
   \      0x382   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x386   0x9000             STR      R0,[SP, #+0]
   \      0x388   0xF640 0x13EC      MOVW     R3,#+2540
   \      0x38C   0x4632             MOV      R2,R6
   \      0x38E   0x2101             MOVS     R1,#+1
   \      0x390   0x4628             MOV      R0,R5
   \      0x392   0x....'....        BL       mbedtls_debug_print_msg
   \      0x396   0x2232             MOVS     R2,#+50
   \      0x398   0x2102             MOVS     R1,#+2
   \      0x39A   0x4628             MOV      R0,R5
   \      0x39C   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x3A0   0x....'....        LDR.W    R0,??DataTable32  ;; 0xffff8500
   \      0x3A4   0xE6C1             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_23: (+1)
   \      0x3A6   0x9402             STR      R4,[SP, #+8]
   \      0x3A8   0x9804             LDR      R0,[SP, #+16]
   \      0x3AA   0x9001             STR      R0,[SP, #+4]
   \      0x3AC   0x....'....        LDR.W    R0,??DataTable34
   \      0x3B0   0x9000             STR      R0,[SP, #+0]
   \      0x3B2   0xF640 0x13F2      MOVW     R3,#+2546
   \      0x3B6   0x4632             MOV      R2,R6
   \      0x3B8   0x2103             MOVS     R1,#+3
   \      0x3BA   0x4628             MOV      R0,R5
   \      0x3BC   0x....'....        BL       mbedtls_debug_print_buf
   \      0x3C0   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \      0x3C4   0x2800             CMP      R0,#+0
   \      0x3C6   0xD10A             BNE.N    ??ssl_parse_server_key_exchange_24
   \      0x3C8   0x2024             MOVS     R0,#+36
   \      0x3CA   0x9005             STR      R0,[SP, #+20]
   \      0x3CC   0x4643             MOV      R3,R8
   \      0x3CE   0x463A             MOV      R2,R7
   \      0x3D0   0xA906             ADD      R1,SP,#+24
   \      0x3D2   0x4628             MOV      R0,R5
   \      0x3D4   0x....'....        BL       mbedtls_ssl_get_key_exchange_md_ssl_tls
   \      0x3D8   0x2800             CMP      R0,#+0
   \      0x3DA   0xD00C             BEQ.N    ??ssl_parse_server_key_exchange_25
   \      0x3DC   0xE6A5             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_24: (+1)
   \      0x3DE   0x9001             STR      R0,[SP, #+4]
   \      0x3E0   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \      0x3E4   0x463B             MOV      R3,R7
   \      0x3E6   0xAA05             ADD      R2,SP,#+20
   \      0x3E8   0xA906             ADD      R1,SP,#+24
   \      0x3EA   0x4628             MOV      R0,R5
   \      0x3EC   0x....'....        BL       mbedtls_ssl_get_key_exchange_md_tls1_2
   \      0x3F0   0x2800             CMP      R0,#+0
   \      0x3F2   0xF47F 0xAE9A      BNE.W    ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_25: (+1)
   \      0x3F6   0x9805             LDR      R0,[SP, #+20]
   \      0x3F8   0x9002             STR      R0,[SP, #+8]
   \      0x3FA   0xA806             ADD      R0,SP,#+24
   \      0x3FC   0x9001             STR      R0,[SP, #+4]
   \      0x3FE   0x....'....        LDR.W    R0,??DataTable34_1
   \      0x402   0x9000             STR      R0,[SP, #+0]
   \      0x404   0xF640 0x2316      MOVW     R3,#+2582
   \      0x408   0x4632             MOV      R2,R6
   \      0x40A   0x2103             MOVS     R1,#+3
   \      0x40C   0x4628             MOV      R0,R5
   \      0x40E   0x....'....        BL       mbedtls_debug_print_buf
   \      0x412   0x6BA8             LDR      R0,[R5, #+56]
   \      0x414   0x6DC0             LDR      R0,[R0, #+92]
   \      0x416   0x2800             CMP      R0,#+0
   \      0x418   0xD111             BNE.N    ??ssl_parse_server_key_exchange_26
   \      0x41A   0x....'....        LDR.W    R0,??DataTable32_12
   \      0x41E   0x9000             STR      R0,[SP, #+0]
   \      0x420   0xF640 0x231A      MOVW     R3,#+2586
   \      0x424   0x4632             MOV      R2,R6
   \      0x426   0x2102             MOVS     R1,#+2
   \      0x428   0x4628             MOV      R0,R5
   \      0x42A   0x....'....        BL       mbedtls_debug_print_msg
   \      0x42E   0x2228             MOVS     R2,#+40
   \      0x430   0x2102             MOVS     R1,#+2
   \      0x432   0x4628             MOV      R0,R5
   \      0x434   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x438   0x....'....        LDR.W    R0,??DataTable32_21  ;; 0xffff8900
   \      0x43C   0xE675             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_26: (+1)
   \      0x43E   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \      0x442   0x6BA8             LDR      R0,[R5, #+56]
   \      0x444   0x6DC0             LDR      R0,[R0, #+92]
   \      0x446   0x30BC             ADDS     R0,R0,#+188
   \      0x448   0x....'....        BL       mbedtls_pk_can_do
   \      0x44C   0x2800             CMP      R0,#+0
   \      0x44E   0xD111             BNE.N    ??ssl_parse_server_key_exchange_27
   \      0x450   0x....'....        LDR.W    R0,??DataTable33_6
   \      0x454   0x9000             STR      R0,[SP, #+0]
   \      0x456   0xF640 0x2325      MOVW     R3,#+2597
   \      0x45A   0x4632             MOV      R2,R6
   \      0x45C   0x2101             MOVS     R1,#+1
   \      0x45E   0x4628             MOV      R0,R5
   \      0x460   0x....'....        BL       mbedtls_debug_print_msg
   \      0x464   0x2228             MOVS     R2,#+40
   \      0x466   0x2102             MOVS     R1,#+2
   \      0x468   0x4628             MOV      R0,R5
   \      0x46A   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x46E   0x....'....        LDR.W    R0,??DataTable32_14  ;; 0xffff9300
   \      0x472   0xE65A             B.N      ??ssl_parse_server_key_exchange_1
   \                     ??ssl_parse_server_key_exchange_27: (+1)
   \      0x474   0x9401             STR      R4,[SP, #+4]
   \      0x476   0x9804             LDR      R0,[SP, #+16]
   \      0x478   0x9000             STR      R0,[SP, #+0]
   \      0x47A   0x9B05             LDR      R3,[SP, #+20]
   \      0x47C   0xAA06             ADD      R2,SP,#+24
   \      0x47E   0xF89D 0x100C      LDRB     R1,[SP, #+12]
   \      0x482   0x6BA8             LDR      R0,[R5, #+56]
   \      0x484   0x6DC0             LDR      R0,[R0, #+92]
   \      0x486   0x30BC             ADDS     R0,R0,#+188
   \      0x488   0x....'....        BL       mbedtls_pk_verify
   \      0x48C   0x0004             MOVS     R4,R0
   \      0x48E   0xF43F 0xAE3E      BEQ.W    ??ssl_parse_server_key_exchange_10
   \      0x492   0x2233             MOVS     R2,#+51
   \      0x494   0x2102             MOVS     R1,#+2
   \      0x496   0x4628             MOV      R0,R5
   \      0x498   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x49C   0x9401             STR      R4,[SP, #+4]
   \      0x49E   0x....'....        LDR.W    R0,??DataTable35
   \      0x4A2   0x9000             STR      R0,[SP, #+0]
   \      0x4A4   0xF44F 0x6323      MOV      R3,#+2608
   \      0x4A8   0x4632             MOV      R2,R6
   \      0x4AA   0x2101             MOVS     R1,#+1
   \      0x4AC   0x4628             MOV      R0,R5
   \      0x4AE   0x....'....        BL       mbedtls_debug_print_ret
   \      0x4B2   0x4620             MOV      R0,R4
   \      0x4B4   0xE639             B.N      ??ssl_parse_server_key_exchange_1
   2620          }
   2621          
   2622          #if ! defined(MBEDTLS_KEY_EXCHANGE__CERT_REQ_ALLOWED__ENABLED)
   2623          static int ssl_parse_certificate_request( mbedtls_ssl_context *ssl )
   2624          {
   2625              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   2626                  ssl->transform_negotiate->ciphersuite_info;
   2627          
   2628              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse certificate request" ) );
   2629          
   2630              if( ! mbedtls_ssl_ciphersuite_cert_req_allowed( ciphersuite_info ) )
   2631              {
   2632                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip parse certificate request" ) );
   2633                  ssl->state++;
   2634                  return( 0 );
   2635              }
   2636          
   2637              MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   2638              return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   2639          }
   2640          #else /* MBEDTLS_KEY_EXCHANGE__CERT_REQ_ALLOWED__ENABLED */

   \                                 In section .text, align 2, keep-with-next
   2641          static int ssl_parse_certificate_request( mbedtls_ssl_context *ssl )
   2642          {
   \                     ssl_parse_certificate_request: (+1)
   \        0x0   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \        0x4   0x4604             MOV      R4,R0
   2643              int ret;
   2644              unsigned char *buf;
   2645              size_t n = 0;
   2646              size_t cert_type_len = 0, dn_len = 0;
   2647              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   2648                  ssl->transform_negotiate->ciphersuite_info;
   \        0x6   0x6CE0             LDR      R0,[R4, #+76]
   \        0x8   0x6805             LDR      R5,[R0, #+0]
   2649          
   2650              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse certificate request" ) );
   \        0xA   0x....'....        LDR.W    R6,??DataTable33
   \        0xE   0x....'....        LDR.W    R0,??DataTable35_1
   \       0x12   0x9000             STR      R0,[SP, #+0]
   \       0x14   0xF640 0x235A      MOVW     R3,#+2650
   \       0x18   0x4632             MOV      R2,R6
   \       0x1A   0x2102             MOVS     R1,#+2
   \       0x1C   0x4620             MOV      R0,R4
   \       0x1E   0x....'....        BL       mbedtls_debug_print_msg
   2651          
   2652              if( ! mbedtls_ssl_ciphersuite_cert_req_allowed( ciphersuite_info ) )
   \       0x22   0x4628             MOV      R0,R5
   \       0x24   0x....'....        BL       mbedtls_ssl_ciphersuite_cert_req_allowed
   \       0x28   0x2800             CMP      R0,#+0
   \       0x2A   0xD10E             BNE.N    ??ssl_parse_certificate_request_0
   2653              {
   2654                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip parse certificate request" ) );
   \       0x2C   0x....'....        LDR.W    R0,??DataTable35_2
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0xF640 0x235E      MOVW     R3,#+2654
   \       0x36   0x4632             MOV      R2,R6
   \       0x38   0x2102             MOVS     R1,#+2
   \       0x3A   0x4620             MOV      R0,R4
   \       0x3C   0x....'....        BL       mbedtls_debug_print_msg
   2655                  ssl->state++;
   \       0x40   0x6860             LDR      R0,[R4, #+4]
   \       0x42   0x1C40             ADDS     R0,R0,#+1
   \       0x44   0x6060             STR      R0,[R4, #+4]
   2656                  return( 0 );
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0xE054             B.N      ??ssl_parse_certificate_request_1
   2657              }
   2658          
   2659              if( ( ret = mbedtls_ssl_read_record( ssl, 1 ) ) != 0 )
   \                     ??ssl_parse_certificate_request_0: (+1)
   \       0x4A   0x2101             MOVS     R1,#+1
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       mbedtls_ssl_read_record
   \       0x52   0x0005             MOVS     R5,R0
   \       0x54   0xD00C             BEQ.N    ??ssl_parse_certificate_request_2
   2660              {
   2661                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_read_record", ret );
   \       0x56   0x9501             STR      R5,[SP, #+4]
   \       0x58   0x....'....        LDR.W    R0,??DataTable33_5
   \       0x5C   0x9000             STR      R0,[SP, #+0]
   \       0x5E   0xF640 0x2365      MOVW     R3,#+2661
   \       0x62   0x4632             MOV      R2,R6
   \       0x64   0x2101             MOVS     R1,#+1
   \       0x66   0x4620             MOV      R0,R4
   \       0x68   0x....'....        BL       mbedtls_debug_print_ret
   2662                  return( ret );
   \       0x6C   0x4628             MOV      R0,R5
   \       0x6E   0xE041             B.N      ??ssl_parse_certificate_request_1
   2663              }
   2664          
   2665              if( ssl->in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE )
   \                     ??ssl_parse_certificate_request_2: (+1)
   \       0x70   0x6FA0             LDR      R0,[R4, #+120]
   \       0x72   0x2816             CMP      R0,#+22
   \       0x74   0xD010             BEQ.N    ??ssl_parse_certificate_request_3
   2666              {
   2667                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad certificate request message" ) );
   \       0x76   0x....'....        LDR.W    R0,??DataTable35_3
   \       0x7A   0x9000             STR      R0,[SP, #+0]
   \       0x7C   0xF640 0x236B      MOVW     R3,#+2667
   \       0x80   0x4632             MOV      R2,R6
   \       0x82   0x2101             MOVS     R1,#+1
   \       0x84   0x4620             MOV      R0,R4
   \       0x86   0x....'....        BL       mbedtls_debug_print_msg
   2668                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2669                                                  MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE );
   \       0x8A   0x220A             MOVS     R2,#+10
   \       0x8C   0x2102             MOVS     R1,#+2
   \       0x8E   0x4620             MOV      R0,R4
   \       0x90   0x....'....        BL       mbedtls_ssl_send_alert_message
   2670                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0x94   0x....             LDR.N    R0,??DataTable32_21  ;; 0xffff8900
   \       0x96   0xE02D             B.N      ??ssl_parse_certificate_request_1
   2671              }
   2672          
   2673              ssl->state++;
   \                     ??ssl_parse_certificate_request_3: (+1)
   \       0x98   0x6860             LDR      R0,[R4, #+4]
   \       0x9A   0x1C40             ADDS     R0,R0,#+1
   \       0x9C   0x6060             STR      R0,[R4, #+4]
   2674              ssl->client_auth = ( ssl->in_msg[0] == MBEDTLS_SSL_HS_CERTIFICATE_REQUEST );
   \       0x9E   0x6F20             LDR      R0,[R4, #+112]
   \       0xA0   0x7800             LDRB     R0,[R0, #+0]
   \       0xA2   0x280D             CMP      R0,#+13
   \       0xA4   0xD101             BNE.N    ??ssl_parse_certificate_request_4
   \       0xA6   0x2001             MOVS     R0,#+1
   \       0xA8   0xE000             B.N      ??ssl_parse_certificate_request_5
   \                     ??ssl_parse_certificate_request_4: (+1)
   \       0xAA   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_certificate_request_5: (+1)
   \       0xAC   0xF8C4 0x00E0      STR      R0,[R4, #+224]
   2675          
   2676              MBEDTLS_SSL_DEBUG_MSG( 3, ( "got %s certificate request",
   2677                                  ssl->client_auth ? "a" : "no" ) );
   \       0xB0   0x2800             CMP      R0,#+0
   \       0xB2   0xD001             BEQ.N    ??ssl_parse_certificate_request_6
   \       0xB4   0x....             ADR.N    R0,??DataTable32_2  ;; "a"
   \       0xB6   0xE000             B.N      ??ssl_parse_certificate_request_7
   \                     ??ssl_parse_certificate_request_6: (+1)
   \       0xB8   0x....             ADR.N    R0,??DataTable32_3  ;; 0x6E, 0x6F, 0x00, 0x00
   \                     ??ssl_parse_certificate_request_7: (+1)
   \       0xBA   0x9001             STR      R0,[SP, #+4]
   \       0xBC   0x....'....        LDR.W    R0,??DataTable35_4
   \       0xC0   0x9000             STR      R0,[SP, #+0]
   \       0xC2   0xF640 0x2375      MOVW     R3,#+2677
   \       0xC6   0x4632             MOV      R2,R6
   \       0xC8   0x2103             MOVS     R1,#+3
   \       0xCA   0x4620             MOV      R0,R4
   \       0xCC   0x....'....        BL       mbedtls_debug_print_msg
   2678          
   2679              if( ssl->client_auth == 0 )
   \       0xD0   0xF8D4 0x00E0      LDR      R0,[R4, #+224]
   \       0xD4   0x2800             CMP      R0,#+0
   \       0xD6   0xD110             BNE.N    ??ssl_parse_certificate_request_8
   2680              {
   2681                  /* Current message is probably the ServerHelloDone */
   2682                  ssl->keep_current_message = 1;
   \       0xD8   0x2001             MOVS     R0,#+1
   \       0xDA   0xF8C4 0x00A8      STR      R0,[R4, #+168]
   2683                  goto exit;
   2684              }
   2685          
   2686              /*
   2687               *  struct {
   2688               *      ClientCertificateType certificate_types<1..2^8-1>;
   2689               *      SignatureAndHashAlgorithm
   2690               *        supported_signature_algorithms<2^16-1>; -- TLS 1.2 only
   2691               *      DistinguishedName certificate_authorities<0..2^16-1>;
   2692               *  } CertificateRequest;
   2693               *
   2694               *  Since we only support a single certificate on clients, let's just
   2695               *  ignore all the information that's supposed to help us pick a
   2696               *  certificate.
   2697               *
   2698               *  We could check that our certificate matches the request, and bail out
   2699               *  if it doesn't, but it's simpler to just send the certificate anyway,
   2700               *  and give the server the opportunity to decide if it should terminate
   2701               *  the connection when it doesn't like our certificate.
   2702               *
   2703               *  Same goes for the hash in TLS 1.2's signature_algorithms: at this
   2704               *  point we only have one hash available (see comments in
   2705               *  write_certificate_verify), so let's just use what we have.
   2706               *
   2707               *  However, we still minimally parse the message to check it is at least
   2708               *  superficially sane.
   2709               */
   2710              buf = ssl->in_msg;
   2711          
   2712              /* certificate_types */
   2713              if( ssl->in_hslen <= mbedtls_ssl_hs_hdr_len( ssl ) )
   2714              {
   2715                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad certificate request message" ) );
   2716                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2717                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2718                  return( MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST );
   2719              }
   2720              cert_type_len = buf[mbedtls_ssl_hs_hdr_len( ssl )];
   2721              n = cert_type_len;
   2722          
   2723              /*
   2724               * In the subsequent code there are two paths that read from buf:
   2725               *     * the length of the signature algorithms field (if minor version of
   2726               *       SSL is 3),
   2727               *     * distinguished name length otherwise.
   2728               * Both reach at most the index:
   2729               *    ...hdr_len + 2 + n,
   2730               * therefore the buffer length at this point must be greater than that
   2731               * regardless of the actual code path.
   2732               */
   2733              if( ssl->in_hslen <= mbedtls_ssl_hs_hdr_len( ssl ) + 2 + n )
   2734              {
   2735                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad certificate request message" ) );
   2736                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2737                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2738                  return( MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST );
   2739              }
   2740          
   2741              /* supported_signature_algorithms */
   2742          #if defined(MBEDTLS_SSL_PROTO_TLS1_2)
   2743              if( ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_3 )
   2744              {
   2745                  size_t sig_alg_len = ( ( buf[mbedtls_ssl_hs_hdr_len( ssl ) + 1 + n] <<  8 )
   2746                                       | ( buf[mbedtls_ssl_hs_hdr_len( ssl ) + 2 + n]       ) );
   2747          #if defined(MBEDTLS_DEBUG_C)
   2748                  unsigned char* sig_alg;
   2749                  size_t i;
   2750          #endif
   2751          
   2752                  /*
   2753                   * The furthest access in buf is in the loop few lines below:
   2754                   *     sig_alg[i + 1],
   2755                   * where:
   2756                   *     sig_alg = buf + ...hdr_len + 3 + n,
   2757                   *     max(i) = sig_alg_len - 1.
   2758                   * Therefore the furthest access is:
   2759                   *     buf[...hdr_len + 3 + n + sig_alg_len - 1 + 1],
   2760                   * which reduces to:
   2761                   *     buf[...hdr_len + 3 + n + sig_alg_len],
   2762                   * which is one less than we need the buf to be.
   2763                   */
   2764                  if( ssl->in_hslen <= mbedtls_ssl_hs_hdr_len( ssl ) + 3 + n + sig_alg_len )
   2765                  {
   2766                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad certificate request message" ) );
   2767                      mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2768                                                      MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2769                      return( MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST );
   2770                  }
   2771          
   2772          #if defined(MBEDTLS_DEBUG_C)
   2773                  sig_alg = buf + mbedtls_ssl_hs_hdr_len( ssl ) + 3 + n;
   2774                  for( i = 0; i < sig_alg_len; i += 2 )
   2775                  {
   2776                      MBEDTLS_SSL_DEBUG_MSG( 3, ( "Supported Signature Algorithm found: %d"
   2777                                                  ",%d", sig_alg[i], sig_alg[i + 1]  ) );
   2778                  }
   2779          #endif
   2780          
   2781                  n += 2 + sig_alg_len;
   2782              }
   2783          #endif /* MBEDTLS_SSL_PROTO_TLS1_2 */
   2784          
   2785              /* certificate_authorities */
   2786              dn_len = ( ( buf[mbedtls_ssl_hs_hdr_len( ssl ) + 1 + n] <<  8 )
   2787                       | ( buf[mbedtls_ssl_hs_hdr_len( ssl ) + 2 + n]       ) );
   2788          
   2789              n += dn_len;
   2790              if( ssl->in_hslen != mbedtls_ssl_hs_hdr_len( ssl ) + 3 + n )
   2791              {
   2792                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad certificate request message" ) );
   2793                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2794                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   2795                  return( MBEDTLS_ERR_SSL_BAD_HS_CERTIFICATE_REQUEST );
   2796              }
   2797          
   2798          exit:
   2799              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse certificate request" ) );
   \                     ??ssl_parse_certificate_request_9: (+1)
   \       0xDE   0x....'....        LDR.W    R0,??DataTable35_5
   \       0xE2   0x9000             STR      R0,[SP, #+0]
   \       0xE4   0xF640 0x23EF      MOVW     R3,#+2799
   \       0xE8   0x4632             MOV      R2,R6
   \       0xEA   0x2102             MOVS     R1,#+2
   \       0xEC   0x4620             MOV      R0,R4
   \       0xEE   0x....'....        BL       mbedtls_debug_print_msg
   2800          
   2801              return( 0 );
   \       0xF2   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_certificate_request_1: (+1)
   \       0xF4   0xB004             ADD      SP,SP,#+16
   \       0xF6   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \                     ??ssl_parse_certificate_request_8: (+1)
   \       0xFA   0x6F25             LDR      R5,[R4, #+112]
   \       0xFC   0x4620             MOV      R0,R4
   \       0xFE   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x102   0xF8D4 0x10A0      LDR      R1,[R4, #+160]
   \      0x106   0x4288             CMP      R0,R1
   \      0x108   0xD311             BCC.N    ??ssl_parse_certificate_request_10
   \      0x10A   0x....'....        LDR.W    R0,??DataTable35_3
   \      0x10E   0x9000             STR      R0,[SP, #+0]
   \      0x110   0xF640 0x239B      MOVW     R3,#+2715
   \      0x114   0x4632             MOV      R2,R6
   \      0x116   0x2101             MOVS     R1,#+1
   \      0x118   0x4620             MOV      R0,R4
   \      0x11A   0x....'....        BL       mbedtls_debug_print_msg
   \      0x11E   0x2232             MOVS     R2,#+50
   \      0x120   0x2102             MOVS     R1,#+2
   \      0x122   0x4620             MOV      R0,R4
   \      0x124   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x128   0x....'....        LDR.W    R0,??DataTable36  ;; 0xffff8580
   \      0x12C   0xE7E2             B.N      ??ssl_parse_certificate_request_1
   \                     ??ssl_parse_certificate_request_10: (+1)
   \      0x12E   0x4620             MOV      R0,R4
   \      0x130   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x134   0x5C2F             LDRB     R7,[R5, R0]
   \      0x136   0x4620             MOV      R0,R4
   \      0x138   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x13C   0x1838             ADDS     R0,R7,R0
   \      0x13E   0x1C80             ADDS     R0,R0,#+2
   \      0x140   0xF8D4 0x10A0      LDR      R1,[R4, #+160]
   \      0x144   0x4288             CMP      R0,R1
   \      0x146   0xD311             BCC.N    ??ssl_parse_certificate_request_11
   \      0x148   0x....'....        LDR.W    R0,??DataTable35_3
   \      0x14C   0x9000             STR      R0,[SP, #+0]
   \      0x14E   0xF640 0x23AF      MOVW     R3,#+2735
   \      0x152   0x4632             MOV      R2,R6
   \      0x154   0x2101             MOVS     R1,#+1
   \      0x156   0x4620             MOV      R0,R4
   \      0x158   0x....'....        BL       mbedtls_debug_print_msg
   \      0x15C   0x2232             MOVS     R2,#+50
   \      0x15E   0x2102             MOVS     R1,#+2
   \      0x160   0x4620             MOV      R0,R4
   \      0x162   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x166   0x....'....        LDR.W    R0,??DataTable36  ;; 0xffff8580
   \      0x16A   0xE7C3             B.N      ??ssl_parse_certificate_request_1
   \                     ??ssl_parse_certificate_request_11: (+1)
   \      0x16C   0x6960             LDR      R0,[R4, #+20]
   \      0x16E   0x2803             CMP      R0,#+3
   \      0x170   0xD14E             BNE.N    ??ssl_parse_certificate_request_12
   \      0x172   0x4620             MOV      R0,R4
   \      0x174   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x178   0x4680             MOV      R8,R0
   \      0x17A   0x4620             MOV      R0,R4
   \      0x17C   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x180   0x44B8             ADD      R8,R7,R8
   \      0x182   0xEB05 0x0108      ADD      R1,R5,R8
   \      0x186   0x7849             LDRB     R1,[R1, #+1]
   \      0x188   0x1838             ADDS     R0,R7,R0
   \      0x18A   0x4428             ADD      R0,R5,R0
   \      0x18C   0xF890 0x8002      LDRB     R8,[R0, #+2]
   \      0x190   0xEA48 0x2801      ORR      R8,R8,R1, LSL #+8
   \      0x194   0x4620             MOV      R0,R4
   \      0x196   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x19A   0x1838             ADDS     R0,R7,R0
   \      0x19C   0x4440             ADD      R0,R8,R0
   \      0x19E   0x1CC0             ADDS     R0,R0,#+3
   \      0x1A0   0xF8D4 0x10A0      LDR      R1,[R4, #+160]
   \      0x1A4   0x4288             CMP      R0,R1
   \      0x1A6   0xD311             BCC.N    ??ssl_parse_certificate_request_13
   \      0x1A8   0x....'....        LDR.W    R0,??DataTable35_3
   \      0x1AC   0x9000             STR      R0,[SP, #+0]
   \      0x1AE   0xF640 0x23CE      MOVW     R3,#+2766
   \      0x1B2   0x4632             MOV      R2,R6
   \      0x1B4   0x2101             MOVS     R1,#+1
   \      0x1B6   0x4620             MOV      R0,R4
   \      0x1B8   0x....'....        BL       mbedtls_debug_print_msg
   \      0x1BC   0x2232             MOVS     R2,#+50
   \      0x1BE   0x2102             MOVS     R1,#+2
   \      0x1C0   0x4620             MOV      R0,R4
   \      0x1C2   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x1C6   0x....'....        LDR.W    R0,??DataTable36  ;; 0xffff8580
   \      0x1CA   0xE793             B.N      ??ssl_parse_certificate_request_1
   \                     ??ssl_parse_certificate_request_13: (+1)
   \      0x1CC   0x4620             MOV      R0,R4
   \      0x1CE   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x1D2   0x4428             ADD      R0,R5,R0
   \      0x1D4   0x4438             ADD      R0,R0,R7
   \      0x1D6   0xF100 0x0903      ADD      R9,R0,#+3
   \      0x1DA   0xF04F 0x0A00      MOV      R10,#+0
   \      0x1DE   0xE012             B.N      ??ssl_parse_certificate_request_14
   \                     ??ssl_parse_certificate_request_15: (+1)
   \      0x1E0   0xEB09 0x000A      ADD      R0,R9,R10
   \      0x1E4   0x7840             LDRB     R0,[R0, #+1]
   \      0x1E6   0x9002             STR      R0,[SP, #+8]
   \      0x1E8   0xF819 0x000A      LDRB     R0,[R9, R10]
   \      0x1EC   0x9001             STR      R0,[SP, #+4]
   \      0x1EE   0x....'....        LDR.W    R0,??DataTable36_1
   \      0x1F2   0x9000             STR      R0,[SP, #+0]
   \      0x1F4   0xF640 0x23D9      MOVW     R3,#+2777
   \      0x1F8   0x4632             MOV      R2,R6
   \      0x1FA   0x2103             MOVS     R1,#+3
   \      0x1FC   0x4620             MOV      R0,R4
   \      0x1FE   0x....'....        BL       mbedtls_debug_print_msg
   \      0x202   0xF10A 0x0A02      ADD      R10,R10,#+2
   \                     ??ssl_parse_certificate_request_14: (+1)
   \      0x206   0x45C2             CMP      R10,R8
   \      0x208   0xD3EA             BCC.N    ??ssl_parse_certificate_request_15
   \      0x20A   0xF108 0x0802      ADD      R8,R8,#+2
   \      0x20E   0x4447             ADD      R7,R8,R7
   \                     ??ssl_parse_certificate_request_12: (+1)
   \      0x210   0x4620             MOV      R0,R4
   \      0x212   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x216   0x4680             MOV      R8,R0
   \      0x218   0x4620             MOV      R0,R4
   \      0x21A   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x21E   0x44B8             ADD      R8,R7,R8
   \      0x220   0xEB05 0x0108      ADD      R1,R5,R8
   \      0x224   0x7849             LDRB     R1,[R1, #+1]
   \      0x226   0x1838             ADDS     R0,R7,R0
   \      0x228   0x4428             ADD      R0,R5,R0
   \      0x22A   0x7885             LDRB     R5,[R0, #+2]
   \      0x22C   0xEA45 0x2501      ORR      R5,R5,R1, LSL #+8
   \      0x230   0x4620             MOV      R0,R4
   \      0x232   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \      0x236   0xF8D4 0x10A0      LDR      R1,[R4, #+160]
   \      0x23A   0x183F             ADDS     R7,R7,R0
   \      0x23C   0x19EF             ADDS     R7,R5,R7
   \      0x23E   0x1CFF             ADDS     R7,R7,#+3
   \      0x240   0x42B9             CMP      R1,R7
   \      0x242   0xF43F 0xAF4C      BEQ.W    ??ssl_parse_certificate_request_9
   \      0x246   0x....'....        LDR.W    R0,??DataTable35_3
   \      0x24A   0x9000             STR      R0,[SP, #+0]
   \      0x24C   0xF640 0x23E8      MOVW     R3,#+2792
   \      0x250   0x4632             MOV      R2,R6
   \      0x252   0x2101             MOVS     R1,#+1
   \      0x254   0x4620             MOV      R0,R4
   \      0x256   0x....'....        BL       mbedtls_debug_print_msg
   \      0x25A   0x2232             MOVS     R2,#+50
   \      0x25C   0x2102             MOVS     R1,#+2
   \      0x25E   0x4620             MOV      R0,R4
   \      0x260   0x....'....        BL       mbedtls_ssl_send_alert_message
   \      0x264   0x....'....        LDR.W    R0,??DataTable36  ;; 0xffff8580
   \      0x268   0xE744             B.N      ??ssl_parse_certificate_request_1
   2802          }
   2803          #endif /* MBEDTLS_KEY_EXCHANGE__CERT_REQ_ALLOWED__ENABLED */
   2804          

   \                                 In section .text, align 2, keep-with-next
   2805          static int ssl_parse_server_hello_done( mbedtls_ssl_context *ssl )
   2806          {
   \                     ssl_parse_server_hello_done: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4605             MOV      R5,R0
   2807              int ret;
   2808          
   2809              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse server hello done" ) );
   \        0x4   0x....'....        LDR.W    R6,??DataTable33
   \        0x8   0x....'....        LDR.W    R0,??DataTable36_2
   \        0xC   0x9000             STR      R0,[SP, #+0]
   \        0xE   0xF640 0x23F9      MOVW     R3,#+2809
   \       0x12   0x4632             MOV      R2,R6
   \       0x14   0x2102             MOVS     R1,#+2
   \       0x16   0x4628             MOV      R0,R5
   \       0x18   0x....'....        BL       mbedtls_debug_print_msg
   2810          
   2811              if( ( ret = mbedtls_ssl_read_record( ssl, 1 ) ) != 0 )
   \       0x1C   0x2101             MOVS     R1,#+1
   \       0x1E   0x4628             MOV      R0,R5
   \       0x20   0x....'....        BL       mbedtls_ssl_read_record
   \       0x24   0x0004             MOVS     R4,R0
   \       0x26   0xD00C             BEQ.N    ??ssl_parse_server_hello_done_0
   2812              {
   2813                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_read_record", ret );
   \       0x28   0x9401             STR      R4,[SP, #+4]
   \       0x2A   0x....'....        LDR.W    R0,??DataTable33_5
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0xF640 0x23FD      MOVW     R3,#+2813
   \       0x34   0x4632             MOV      R2,R6
   \       0x36   0x2101             MOVS     R1,#+1
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0x....'....        BL       mbedtls_debug_print_ret
   2814                  return( ret );
   \       0x3E   0x4620             MOV      R0,R4
   \       0x40   0xBD76             POP      {R1,R2,R4-R6,PC}
   2815              }
   2816          
   2817              if( ssl->in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE )
   \                     ??ssl_parse_server_hello_done_0: (+1)
   \       0x42   0x6FA8             LDR      R0,[R5, #+120]
   \       0x44   0x2816             CMP      R0,#+22
   \       0x46   0xD00B             BEQ.N    ??ssl_parse_server_hello_done_1
   2818              {
   2819                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello done message" ) );
   \       0x48   0x....'....        LDR.W    R0,??DataTable36_3
   \       0x4C   0x9000             STR      R0,[SP, #+0]
   \       0x4E   0xF640 0x3303      MOVW     R3,#+2819
   \       0x52   0x4632             MOV      R2,R6
   \       0x54   0x2101             MOVS     R1,#+1
   \       0x56   0x4628             MOV      R0,R5
   \       0x58   0x....'....        BL       mbedtls_debug_print_msg
   2820                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0x5C   0x....             LDR.N    R0,??DataTable32_21  ;; 0xffff8900
   \       0x5E   0xBD76             POP      {R1,R2,R4-R6,PC}
   2821              }
   2822          
   2823              if( ssl->in_hslen  != mbedtls_ssl_hs_hdr_len( ssl ) ||
   2824                  ssl->in_msg[0] != MBEDTLS_SSL_HS_SERVER_HELLO_DONE )
   \                     ??ssl_parse_server_hello_done_1: (+1)
   \       0x60   0x4628             MOV      R0,R5
   \       0x62   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \       0x66   0xF8D5 0x10A0      LDR      R1,[R5, #+160]
   \       0x6A   0x4281             CMP      R1,R0
   \       0x6C   0xD103             BNE.N    ??ssl_parse_server_hello_done_2
   \       0x6E   0x6F28             LDR      R0,[R5, #+112]
   \       0x70   0x7800             LDRB     R0,[R0, #+0]
   \       0x72   0x280E             CMP      R0,#+14
   \       0x74   0xD011             BEQ.N    ??ssl_parse_server_hello_done_3
   2825              {
   2826                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad server hello done message" ) );
   \                     ??ssl_parse_server_hello_done_2: (+1)
   \       0x76   0x....'....        LDR.W    R0,??DataTable36_3
   \       0x7A   0x9000             STR      R0,[SP, #+0]
   \       0x7C   0xF640 0x330A      MOVW     R3,#+2826
   \       0x80   0x4632             MOV      R2,R6
   \       0x82   0x2101             MOVS     R1,#+1
   \       0x84   0x4628             MOV      R0,R5
   \       0x86   0x....'....        BL       mbedtls_debug_print_msg
   2827                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   2828                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \       0x8A   0x2232             MOVS     R2,#+50
   \       0x8C   0x2102             MOVS     R1,#+2
   \       0x8E   0x4628             MOV      R0,R5
   \       0x90   0x....'....        BL       mbedtls_ssl_send_alert_message
   2829                  return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_HELLO_DONE );
   \       0x94   0x....'....        LDR.W    R0,??DataTable36_4  ;; 0xffff8480
   \       0x98   0xBD76             POP      {R1,R2,R4-R6,PC}
   2830              }
   2831          
   2832              ssl->state++;
   \                     ??ssl_parse_server_hello_done_3: (+1)
   \       0x9A   0x6868             LDR      R0,[R5, #+4]
   \       0x9C   0x1C40             ADDS     R0,R0,#+1
   \       0x9E   0x6068             STR      R0,[R5, #+4]
   2833          
   2834          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   2835              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM )
   \       0xA0   0x6828             LDR      R0,[R5, #+0]
   \       0xA2   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0xA6   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \       0xAA   0x2800             CMP      R0,#+0
   \       0xAC   0xD002             BEQ.N    ??ssl_parse_server_hello_done_4
   2836                  mbedtls_ssl_recv_flight_completed( ssl );
   \       0xAE   0x4628             MOV      R0,R5
   \       0xB0   0x....'....        BL       mbedtls_ssl_recv_flight_completed
   2837          #endif
   2838          
   2839              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse server hello done" ) );
   \                     ??ssl_parse_server_hello_done_4: (+1)
   \       0xB4   0x....'....        LDR.W    R0,??DataTable36_5
   \       0xB8   0x9000             STR      R0,[SP, #+0]
   \       0xBA   0xF640 0x3317      MOVW     R3,#+2839
   \       0xBE   0x4632             MOV      R2,R6
   \       0xC0   0x2102             MOVS     R1,#+2
   \       0xC2   0x4628             MOV      R0,R5
   \       0xC4   0x....'....        BL       mbedtls_debug_print_msg
   2840          
   2841              return( 0 );
   \       0xC8   0x2000             MOVS     R0,#+0
   \       0xCA   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
   2842          }
   2843          

   \                                 In section .text, align 2, keep-with-next
   2844          static int ssl_write_client_key_exchange( mbedtls_ssl_context *ssl )
   2845          {
   \                     ssl_write_client_key_exchange: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
   \        0x4   0x4606             MOV      R6,R0
   2846              int ret;
   2847              size_t i, n;
   2848              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   2849                  ssl->transform_negotiate->ciphersuite_info;
   \        0x6   0x6CF0             LDR      R0,[R6, #+76]
   \        0x8   0xF8D0 0x8000      LDR      R8,[R0, #+0]
   2850          
   2851              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> write client key exchange" ) );
   \        0xC   0x....'....        LDR.W    R7,??DataTable33
   \       0x10   0x....'....        LDR.W    R0,??DataTable36_6
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0xF640 0x3323      MOVW     R3,#+2851
   \       0x1A   0x463A             MOV      R2,R7
   \       0x1C   0x2102             MOVS     R1,#+2
   \       0x1E   0x4630             MOV      R0,R6
   \       0x20   0x....'....        BL       mbedtls_debug_print_msg
   2852          
   2853          #if defined(MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED)
   2854              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_RSA )
   \       0x24   0xF898 0x000A      LDRB     R0,[R8, #+10]
   \       0x28   0x2802             CMP      R0,#+2
   \       0x2A   0xF040 0x8095      BNE.W    ??ssl_write_client_key_exchange_0
   2855              {
   2856                  /*
   2857                   * DHM key exchange -- send G^X mod P
   2858                   */
   2859                  n = ssl->handshake->dhm_ctx.len;
   \       0x2E   0x6BF0             LDR      R0,[R6, #+60]
   \       0x30   0x6840             LDR      R0,[R0, #+4]
   \       0x32   0x9002             STR      R0,[SP, #+8]
   2860          
   2861                  ssl->out_msg[4] = (unsigned char)( n >> 8 );
   \       0x34   0x0A00             LSRS     R0,R0,#+8
   \       0x36   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \       0x3A   0x7108             STRB     R0,[R1, #+4]
   2862                  ssl->out_msg[5] = (unsigned char)( n      );
   \       0x3C   0x9802             LDR      R0,[SP, #+8]
   \       0x3E   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \       0x42   0x7148             STRB     R0,[R1, #+5]
   2863                  i = 6;
   \       0x44   0x2406             MOVS     R4,#+6
   2864          
   2865                  ret = mbedtls_dhm_make_public( &ssl->handshake->dhm_ctx,
   2866                                          (int) mbedtls_mpi_size( &ssl->handshake->dhm_ctx.P ),
   2867                                         &ssl->out_msg[i], n,
   2868                                          ssl->conf->f_rng, ssl->conf->p_rng );
   \       0x46   0x6BF0             LDR      R0,[R6, #+60]
   \       0x48   0x3008             ADDS     R0,R0,#+8
   \       0x4A   0x....'....        BL       mbedtls_mpi_size
   \       0x4E   0x4601             MOV      R1,R0
   \       0x50   0x6830             LDR      R0,[R6, #+0]
   \       0x52   0x69C0             LDR      R0,[R0, #+28]
   \       0x54   0x9001             STR      R0,[SP, #+4]
   \       0x56   0x6830             LDR      R0,[R6, #+0]
   \       0x58   0x6980             LDR      R0,[R0, #+24]
   \       0x5A   0x9000             STR      R0,[SP, #+0]
   \       0x5C   0x9B02             LDR      R3,[SP, #+8]
   \       0x5E   0xF8D6 0x00C4      LDR      R0,[R6, #+196]
   \       0x62   0x1D82             ADDS     R2,R0,#+6
   \       0x64   0x6BF0             LDR      R0,[R6, #+60]
   \       0x66   0x1D00             ADDS     R0,R0,#+4
   \       0x68   0x....'....        BL       mbedtls_dhm_make_public
   \       0x6C   0x0005             MOVS     R5,R0
   2869                  if( ret != 0 )
   \       0x6E   0xD00C             BEQ.N    ??ssl_write_client_key_exchange_1
   2870                  {
   2871                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_dhm_make_public", ret );
   \       0x70   0x9501             STR      R5,[SP, #+4]
   \       0x72   0x....'....        LDR.W    R0,??DataTable36_7
   \       0x76   0x9000             STR      R0,[SP, #+0]
   \       0x78   0xF640 0x3337      MOVW     R3,#+2871
   \       0x7C   0x463A             MOV      R2,R7
   \       0x7E   0x2101             MOVS     R1,#+1
   \       0x80   0x4630             MOV      R0,R6
   \       0x82   0x....'....        BL       mbedtls_debug_print_ret
   2872                      return( ret );
   \       0x86   0x4628             MOV      R0,R5
   \       0x88   0xE1E2             B.N      ??ssl_write_client_key_exchange_2
   2873                  }
   2874          
   2875                  MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: X ", &ssl->handshake->dhm_ctx.X  );
   \                     ??ssl_write_client_key_exchange_1: (+1)
   \       0x8A   0x6BF0             LDR      R0,[R6, #+60]
   \       0x8C   0x3020             ADDS     R0,R0,#+32
   \       0x8E   0x9001             STR      R0,[SP, #+4]
   \       0x90   0x....'....        LDR.W    R0,??DataTable36_8
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0xF640 0x333B      MOVW     R3,#+2875
   \       0x9A   0x463A             MOV      R2,R7
   \       0x9C   0x2103             MOVS     R1,#+3
   \       0x9E   0x4630             MOV      R0,R6
   \       0xA0   0x....'....        BL       mbedtls_debug_print_mpi
   2876                  MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: GX", &ssl->handshake->dhm_ctx.GX );
   \       0xA4   0x6BF0             LDR      R0,[R6, #+60]
   \       0xA6   0x302C             ADDS     R0,R0,#+44
   \       0xA8   0x9001             STR      R0,[SP, #+4]
   \       0xAA   0x....'....        LDR.W    R0,??DataTable36_9
   \       0xAE   0x9000             STR      R0,[SP, #+0]
   \       0xB0   0xF640 0x333C      MOVW     R3,#+2876
   \       0xB4   0x463A             MOV      R2,R7
   \       0xB6   0x2103             MOVS     R1,#+3
   \       0xB8   0x4630             MOV      R0,R6
   \       0xBA   0x....'....        BL       mbedtls_debug_print_mpi
   2877          
   2878                  if( ( ret = mbedtls_dhm_calc_secret( &ssl->handshake->dhm_ctx,
   2879                                                ssl->handshake->premaster,
   2880                                                MBEDTLS_PREMASTER_SIZE,
   2881                                               &ssl->handshake->pmslen,
   2882                                                ssl->conf->f_rng, ssl->conf->p_rng ) ) != 0 )
   \       0xBE   0x6830             LDR      R0,[R6, #+0]
   \       0xC0   0x69C0             LDR      R0,[R0, #+28]
   \       0xC2   0x9001             STR      R0,[SP, #+4]
   \       0xC4   0x6830             LDR      R0,[R6, #+0]
   \       0xC6   0x6980             LDR      R0,[R0, #+24]
   \       0xC8   0x9000             STR      R0,[SP, #+0]
   \       0xCA   0x6BF0             LDR      R0,[R6, #+60]
   \       0xCC   0xF500 0x638B      ADD      R3,R0,#+1112
   \       0xD0   0xF44F 0x7209      MOV      R2,#+548
   \       0xD4   0xF200 0x419C      ADDW     R1,R0,#+1180
   \       0xD8   0x1D00             ADDS     R0,R0,#+4
   \       0xDA   0x....'....        BL       mbedtls_dhm_calc_secret
   \       0xDE   0x0005             MOVS     R5,R0
   \       0xE0   0xD00C             BEQ.N    ??ssl_write_client_key_exchange_3
   2883                  {
   2884                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_dhm_calc_secret", ret );
   \       0xE2   0x9501             STR      R5,[SP, #+4]
   \       0xE4   0x....'....        LDR.W    R0,??DataTable36_10
   \       0xE8   0x9000             STR      R0,[SP, #+0]
   \       0xEA   0xF640 0x3344      MOVW     R3,#+2884
   \       0xEE   0x463A             MOV      R2,R7
   \       0xF0   0x2101             MOVS     R1,#+1
   \       0xF2   0x4630             MOV      R0,R6
   \       0xF4   0x....'....        BL       mbedtls_debug_print_ret
   2885                      return( ret );
   \       0xF8   0x4628             MOV      R0,R5
   \       0xFA   0xE1A9             B.N      ??ssl_write_client_key_exchange_2
   2886                  }
   2887          
   2888                  MBEDTLS_SSL_DEBUG_MPI( 3, "DHM: K ", &ssl->handshake->dhm_ctx.K  );
   \                     ??ssl_write_client_key_exchange_3: (+1)
   \       0xFC   0x6BF0             LDR      R0,[R6, #+60]
   \       0xFE   0x3044             ADDS     R0,R0,#+68
   \      0x100   0x9001             STR      R0,[SP, #+4]
   \      0x102   0x....'....        LDR.W    R0,??DataTable36_11
   \      0x106   0x9000             STR      R0,[SP, #+0]
   \      0x108   0xF640 0x3348      MOVW     R3,#+2888
   \      0x10C   0x463A             MOV      R2,R7
   \      0x10E   0x2103             MOVS     R1,#+3
   \      0x110   0x4630             MOV      R0,R6
   \      0x112   0x....'....        BL       mbedtls_debug_print_mpi
   2889              }
   2890              else
   2891          #endif /* MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED */
   2892          #if defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) ||                     \
   2893              defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED) ||                   \
   2894              defined(MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED) ||                      \
   2895              defined(MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED)
   2896              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_RSA ||
   2897                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA ||
   2898                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_RSA ||
   2899                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA )
   2900              {
   2901                  /*
   2902                   * ECDH key exchange -- send client public value
   2903                   */
   2904                  i = 4;
   2905          
   2906                  ret = mbedtls_ecdh_make_public( &ssl->handshake->ecdh_ctx,
   2907                                          &n,
   2908                                          &ssl->out_msg[i], 1000,
   2909                                          ssl->conf->f_rng, ssl->conf->p_rng );
   2910                  if( ret != 0 )
   2911                  {
   2912                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecdh_make_public", ret );
   2913                      return( ret );
   2914                  }
   2915          
   2916                  MBEDTLS_SSL_DEBUG_ECP( 3, "ECDH: Q", &ssl->handshake->ecdh_ctx.Q );
   2917          
   2918                  if( ( ret = mbedtls_ecdh_calc_secret( &ssl->handshake->ecdh_ctx,
   2919                                                &ssl->handshake->pmslen,
   2920                                                 ssl->handshake->premaster,
   2921                                                 MBEDTLS_MPI_MAX_SIZE,
   2922                                                 ssl->conf->f_rng, ssl->conf->p_rng ) ) != 0 )
   2923                  {
   2924                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecdh_calc_secret", ret );
   2925                      return( ret );
   2926                  }
   2927          
   2928                  MBEDTLS_SSL_DEBUG_MPI( 3, "ECDH: z", &ssl->handshake->ecdh_ctx.z );
   2929              }
   2930              else
   2931          #endif /* MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED ||
   2932                    MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED ||
   2933                    MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED ||
   2934                    MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED */
   2935          #if defined(MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED)
   2936              if( mbedtls_ssl_ciphersuite_uses_psk( ciphersuite_info ) )
   2937              {
   2938                  /*
   2939                   * opaque psk_identity<0..2^16-1>;
   2940                   */
   2941                  if( ssl->conf->psk == NULL || ssl->conf->psk_identity == NULL )
   2942                  {
   2943                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "got no private key for PSK" ) );
   2944                      return( MBEDTLS_ERR_SSL_PRIVATE_KEY_REQUIRED );
   2945                  }
   2946          
   2947                  i = 4;
   2948                  n = ssl->conf->psk_identity_len;
   2949          
   2950                  if( i + 2 + n > MBEDTLS_SSL_OUT_CONTENT_LEN )
   2951                  {
   2952                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "psk identity too long or "
   2953                                                  "SSL buffer too short" ) );
   2954                      return( MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL );
   2955                  }
   2956          
   2957                  ssl->out_msg[i++] = (unsigned char)( n >> 8 );
   2958                  ssl->out_msg[i++] = (unsigned char)( n      );
   2959          
   2960                  memcpy( ssl->out_msg + i, ssl->conf->psk_identity, ssl->conf->psk_identity_len );
   2961                  i += ssl->conf->psk_identity_len;
   2962          
   2963          #if defined(MBEDTLS_KEY_EXCHANGE_PSK_ENABLED)
   2964                  if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK )
   2965                  {
   2966                      n = 0;
   2967                  }
   2968                  else
   2969          #endif
   2970          #if defined(MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED)
   2971                  if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK )
   2972                  {
   2973                      if( ( ret = ssl_write_encrypted_pms( ssl, i, &n, 2 ) ) != 0 )
   2974                          return( ret );
   2975                  }
   2976                  else
   2977          #endif
   2978          #if defined(MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED)
   2979                  if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK )
   2980                  {
   2981                      /*
   2982                       * ClientDiffieHellmanPublic public (DHM send G^X mod P)
   2983                       */
   2984                      n = ssl->handshake->dhm_ctx.len;
   2985          
   2986                      if( i + 2 + n > MBEDTLS_SSL_OUT_CONTENT_LEN )
   2987                      {
   2988                          MBEDTLS_SSL_DEBUG_MSG( 1, ( "psk identity or DHM size too long"
   2989                                                      " or SSL buffer too short" ) );
   2990                          return( MBEDTLS_ERR_SSL_BUFFER_TOO_SMALL );
   2991                      }
   2992          
   2993                      ssl->out_msg[i++] = (unsigned char)( n >> 8 );
   2994                      ssl->out_msg[i++] = (unsigned char)( n      );
   2995          
   2996                      ret = mbedtls_dhm_make_public( &ssl->handshake->dhm_ctx,
   2997                              (int) mbedtls_mpi_size( &ssl->handshake->dhm_ctx.P ),
   2998                              &ssl->out_msg[i], n,
   2999                              ssl->conf->f_rng, ssl->conf->p_rng );
   3000                      if( ret != 0 )
   3001                      {
   3002                          MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_dhm_make_public", ret );
   3003                          return( ret );
   3004                      }
   3005                  }
   3006                  else
   3007          #endif /* MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED */
   3008          #if defined(MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED)
   3009                  if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK )
   3010                  {
   3011                      /*
   3012                       * ClientECDiffieHellmanPublic public;
   3013                       */
   3014                      ret = mbedtls_ecdh_make_public( &ssl->handshake->ecdh_ctx, &n,
   3015                              &ssl->out_msg[i], MBEDTLS_SSL_OUT_CONTENT_LEN - i,
   3016                              ssl->conf->f_rng, ssl->conf->p_rng );
   3017                      if( ret != 0 )
   3018                      {
   3019                          MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecdh_make_public", ret );
   3020                          return( ret );
   3021                      }
   3022          
   3023                      MBEDTLS_SSL_DEBUG_ECP( 3, "ECDH: Q", &ssl->handshake->ecdh_ctx.Q );
   3024                  }
   3025                  else
   3026          #endif /* MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED */
   3027                  {
   3028                      MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   3029                      return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   3030                  }
   3031          
   3032                  if( ( ret = mbedtls_ssl_psk_derive_premaster( ssl,
   3033                                  ciphersuite_info->key_exchange ) ) != 0 )
   3034                  {
   3035                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_psk_derive_premaster", ret );
   3036                      return( ret );
   3037                  }
   3038              }
   3039              else
   3040          #endif /* MBEDTLS_KEY_EXCHANGE__SOME__PSK_ENABLED */
   3041          #if defined(MBEDTLS_KEY_EXCHANGE_RSA_ENABLED)
   3042              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA )
   3043              {
   3044                  i = 4;
   3045                  if( ( ret = ssl_write_encrypted_pms( ssl, i, &n, 0 ) ) != 0 )
   3046                      return( ret );
   3047              }
   3048              else
   3049          #endif /* MBEDTLS_KEY_EXCHANGE_RSA_ENABLED */
   3050          #if defined(MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED)
   3051              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE )
   3052              {
   3053                  i = 4;
   3054          
   3055                  ret = mbedtls_ecjpake_write_round_two( &ssl->handshake->ecjpake_ctx,
   3056                          ssl->out_msg + i, MBEDTLS_SSL_OUT_CONTENT_LEN - i, &n,
   3057                          ssl->conf->f_rng, ssl->conf->p_rng );
   3058                  if( ret != 0 )
   3059                  {
   3060                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecjpake_write_round_two", ret );
   3061                      return( ret );
   3062                  }
   3063          
   3064                  ret = mbedtls_ecjpake_derive_secret( &ssl->handshake->ecjpake_ctx,
   3065                          ssl->handshake->premaster, 32, &ssl->handshake->pmslen,
   3066                          ssl->conf->f_rng, ssl->conf->p_rng );
   3067                  if( ret != 0 )
   3068                  {
   3069                      MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ecjpake_derive_secret", ret );
   3070                      return( ret );
   3071                  }
   3072              }
   3073              else
   3074          #endif /* MBEDTLS_KEY_EXCHANGE_RSA_ENABLED */
   3075              {
   3076                  ((void) ciphersuite_info);
   3077                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   3078                  return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   3079              }
   3080          
   3081              ssl->out_msglen  = i + n;
   \                     ??ssl_write_client_key_exchange_4: (+1)
   \      0x116   0x9802             LDR      R0,[SP, #+8]
   \      0x118   0x1904             ADDS     R4,R0,R4
   \      0x11A   0xF8C6 0x40CC      STR      R4,[R6, #+204]
   3082              ssl->out_msgtype = MBEDTLS_SSL_MSG_HANDSHAKE;
   \      0x11E   0x2016             MOVS     R0,#+22
   \      0x120   0xF8C6 0x00C8      STR      R0,[R6, #+200]
   3083              ssl->out_msg[0]  = MBEDTLS_SSL_HS_CLIENT_KEY_EXCHANGE;
   \      0x124   0x2010             MOVS     R0,#+16
   \      0x126   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \      0x12A   0x7008             STRB     R0,[R1, #+0]
   3084          
   3085              ssl->state++;
   \      0x12C   0x6870             LDR      R0,[R6, #+4]
   \      0x12E   0x1C40             ADDS     R0,R0,#+1
   \      0x130   0x6070             STR      R0,[R6, #+4]
   3086          
   3087              if( ( ret = mbedtls_ssl_write_handshake_msg( ssl ) ) != 0 )
   \      0x132   0x4630             MOV      R0,R6
   \      0x134   0x....'....        BL       mbedtls_ssl_write_handshake_msg
   \      0x138   0x0004             MOVS     R4,R0
   \      0x13A   0xF000 0x817E      BEQ.W    ??ssl_write_client_key_exchange_5
   3088              {
   3089                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_write_handshake_msg", ret );
   \      0x13E   0x9401             STR      R4,[SP, #+4]
   \      0x140   0x....'....        LDR.W    R0,??DataTable36_12
   \      0x144   0x9000             STR      R0,[SP, #+0]
   \      0x146   0xF640 0x4311      MOVW     R3,#+3089
   \      0x14A   0x463A             MOV      R2,R7
   \      0x14C   0x2101             MOVS     R1,#+1
   \      0x14E   0x4630             MOV      R0,R6
   \      0x150   0x....'....        BL       mbedtls_debug_print_ret
   3090                  return( ret );
   \      0x154   0x4620             MOV      R0,R4
   \      0x156   0xE17B             B.N      ??ssl_write_client_key_exchange_2
   3091              }
   \                     ??ssl_write_client_key_exchange_0: (+1)
   \      0x158   0x2803             CMP      R0,#+3
   \      0x15A   0xD005             BEQ.N    ??ssl_write_client_key_exchange_6
   \      0x15C   0x2804             CMP      R0,#+4
   \      0x15E   0xD003             BEQ.N    ??ssl_write_client_key_exchange_6
   \      0x160   0x2809             CMP      R0,#+9
   \      0x162   0xD001             BEQ.N    ??ssl_write_client_key_exchange_6
   \      0x164   0x280A             CMP      R0,#+10
   \      0x166   0xD15B             BNE.N    ??ssl_write_client_key_exchange_7
   \                     ??ssl_write_client_key_exchange_6: (+1)
   \      0x168   0x2404             MOVS     R4,#+4
   \      0x16A   0x6830             LDR      R0,[R6, #+0]
   \      0x16C   0x69C0             LDR      R0,[R0, #+28]
   \      0x16E   0x9001             STR      R0,[SP, #+4]
   \      0x170   0x6830             LDR      R0,[R6, #+0]
   \      0x172   0x6980             LDR      R0,[R0, #+24]
   \      0x174   0x9000             STR      R0,[SP, #+0]
   \      0x176   0xF44F 0x737A      MOV      R3,#+1000
   \      0x17A   0xF8D6 0x00C4      LDR      R0,[R6, #+196]
   \      0x17E   0x1D02             ADDS     R2,R0,#+4
   \      0x180   0xA902             ADD      R1,SP,#+8
   \      0x182   0x6BF0             LDR      R0,[R6, #+60]
   \      0x184   0x3080             ADDS     R0,R0,#+128
   \      0x186   0x....'....        BL       mbedtls_ecdh_make_public
   \      0x18A   0x0005             MOVS     R5,R0
   \      0x18C   0xD00C             BEQ.N    ??ssl_write_client_key_exchange_8
   \      0x18E   0x9501             STR      R5,[SP, #+4]
   \      0x190   0x....'....        LDR.W    R0,??DataTable36_13
   \      0x194   0x9000             STR      R0,[SP, #+0]
   \      0x196   0xF44F 0x6336      MOV      R3,#+2912
   \      0x19A   0x463A             MOV      R2,R7
   \      0x19C   0x2101             MOVS     R1,#+1
   \      0x19E   0x4630             MOV      R0,R6
   \      0x1A0   0x....'....        BL       mbedtls_debug_print_ret
   \      0x1A4   0x4628             MOV      R0,R5
   \      0x1A6   0xE153             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_8: (+1)
   \      0x1A8   0x6BF0             LDR      R0,[R6, #+60]
   \      0x1AA   0xF500 0x7084      ADD      R0,R0,#+264
   \      0x1AE   0x9001             STR      R0,[SP, #+4]
   \      0x1B0   0x....'....        LDR.W    R0,??DataTable36_14
   \      0x1B4   0x9000             STR      R0,[SP, #+0]
   \      0x1B6   0xF640 0x3364      MOVW     R3,#+2916
   \      0x1BA   0x463A             MOV      R2,R7
   \      0x1BC   0x2103             MOVS     R1,#+3
   \      0x1BE   0x4630             MOV      R0,R6
   \      0x1C0   0x....'....        BL       mbedtls_debug_print_ecp
   \      0x1C4   0x6830             LDR      R0,[R6, #+0]
   \      0x1C6   0x69C0             LDR      R0,[R0, #+28]
   \      0x1C8   0x9001             STR      R0,[SP, #+4]
   \      0x1CA   0x6830             LDR      R0,[R6, #+0]
   \      0x1CC   0x6980             LDR      R0,[R0, #+24]
   \      0x1CE   0x9000             STR      R0,[SP, #+0]
   \      0x1D0   0xF44F 0x7300      MOV      R3,#+512
   \      0x1D4   0x6BF0             LDR      R0,[R6, #+60]
   \      0x1D6   0xF200 0x429C      ADDW     R2,R0,#+1180
   \      0x1DA   0xF500 0x618B      ADD      R1,R0,#+1112
   \      0x1DE   0x3080             ADDS     R0,R0,#+128
   \      0x1E0   0x....'....        BL       mbedtls_ecdh_calc_secret
   \      0x1E4   0x0005             MOVS     R5,R0
   \      0x1E6   0xD00C             BEQ.N    ??ssl_write_client_key_exchange_9
   \      0x1E8   0x9501             STR      R5,[SP, #+4]
   \      0x1EA   0x....'....        LDR.W    R0,??DataTable36_15
   \      0x1EE   0x9000             STR      R0,[SP, #+0]
   \      0x1F0   0xF640 0x336C      MOVW     R3,#+2924
   \      0x1F4   0x463A             MOV      R2,R7
   \      0x1F6   0x2101             MOVS     R1,#+1
   \      0x1F8   0x4630             MOV      R0,R6
   \      0x1FA   0x....'....        BL       mbedtls_debug_print_ret
   \      0x1FE   0x4628             MOV      R0,R5
   \      0x200   0xE126             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_9: (+1)
   \      0x202   0x6BF0             LDR      R0,[R6, #+60]
   \      0x204   0xF500 0x70A8      ADD      R0,R0,#+336
   \      0x208   0x9001             STR      R0,[SP, #+4]
   \      0x20A   0x....'....        LDR.W    R0,??DataTable36_16
   \      0x20E   0x9000             STR      R0,[SP, #+0]
   \      0x210   0xF44F 0x6337      MOV      R3,#+2928
   \      0x214   0x463A             MOV      R2,R7
   \      0x216   0x2103             MOVS     R1,#+3
   \      0x218   0x4630             MOV      R0,R6
   \      0x21A   0x....'....        BL       mbedtls_debug_print_mpi
   \      0x21E   0xE77A             B.N      ??ssl_write_client_key_exchange_4
   \                     ??ssl_write_client_key_exchange_7: (+1)
   \      0x220   0x4640             MOV      R0,R8
   \      0x222   0x....'....        BL       mbedtls_ssl_ciphersuite_uses_psk
   \      0x226   0x2800             CMP      R0,#+0
   \      0x228   0xF000 0x80EB      BEQ.W    ??ssl_write_client_key_exchange_10
   \      0x22C   0x6830             LDR      R0,[R6, #+0]
   \      0x22E   0xF8D0 0x0094      LDR      R0,[R0, #+148]
   \      0x232   0x2800             CMP      R0,#+0
   \      0x234   0xD004             BEQ.N    ??ssl_write_client_key_exchange_11
   \      0x236   0x6830             LDR      R0,[R6, #+0]
   \      0x238   0xF8D0 0x009C      LDR      R0,[R0, #+156]
   \      0x23C   0x2800             CMP      R0,#+0
   \      0x23E   0xD10C             BNE.N    ??ssl_write_client_key_exchange_12
   \                     ??ssl_write_client_key_exchange_11: (+1)
   \      0x240   0x....'....        LDR.W    R0,??DataTable36_17
   \      0x244   0x9000             STR      R0,[SP, #+0]
   \      0x246   0xF640 0x337F      MOVW     R3,#+2943
   \      0x24A   0x463A             MOV      R2,R7
   \      0x24C   0x2101             MOVS     R1,#+1
   \      0x24E   0x4630             MOV      R0,R6
   \      0x250   0x....'....        BL       mbedtls_debug_print_msg
   \      0x254   0x....'....        LDR.W    R0,??DataTable36_18  ;; 0xffff8a00
   \      0x258   0xE0FA             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_12: (+1)
   \      0x25A   0x6830             LDR      R0,[R6, #+0]
   \      0x25C   0xF8D0 0x00A0      LDR      R0,[R0, #+160]
   \      0x260   0x9002             STR      R0,[SP, #+8]
   \      0x262   0xF642 0x0501      MOVW     R5,#+10241
   \      0x266   0x1D80             ADDS     R0,R0,#+6
   \      0x268   0x42A8             CMP      R0,R5
   \      0x26A   0xD30C             BCC.N    ??ssl_write_client_key_exchange_13
   \      0x26C   0x....'....        LDR.W    R0,??DataTable36_19
   \      0x270   0x9000             STR      R0,[SP, #+0]
   \      0x272   0xF640 0x3389      MOVW     R3,#+2953
   \      0x276   0x463A             MOV      R2,R7
   \      0x278   0x2101             MOVS     R1,#+1
   \      0x27A   0x4630             MOV      R0,R6
   \      0x27C   0x....'....        BL       mbedtls_debug_print_msg
   \      0x280   0x....'....        LDR.W    R0,??DataTable36_20  ;; 0xffff9600
   \      0x284   0xE0E4             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_13: (+1)
   \      0x286   0x9802             LDR      R0,[SP, #+8]
   \      0x288   0x0A00             LSRS     R0,R0,#+8
   \      0x28A   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \      0x28E   0x7108             STRB     R0,[R1, #+4]
   \      0x290   0x9802             LDR      R0,[SP, #+8]
   \      0x292   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \      0x296   0x7148             STRB     R0,[R1, #+5]
   \      0x298   0x6830             LDR      R0,[R6, #+0]
   \      0x29A   0xF8D0 0x20A0      LDR      R2,[R0, #+160]
   \      0x29E   0xF8D0 0x109C      LDR      R1,[R0, #+156]
   \      0x2A2   0xF8D6 0x00C4      LDR      R0,[R6, #+196]
   \      0x2A6   0x1D80             ADDS     R0,R0,#+6
   \      0x2A8   0x....'....        BL       __aeabi_memcpy
   \      0x2AC   0x6830             LDR      R0,[R6, #+0]
   \      0x2AE   0xF8D0 0x40A0      LDR      R4,[R0, #+160]
   \      0x2B2   0x1DA4             ADDS     R4,R4,#+6
   \      0x2B4   0xF898 0x000A      LDRB     R0,[R8, #+10]
   \      0x2B8   0x2805             CMP      R0,#+5
   \      0x2BA   0xD116             BNE.N    ??ssl_write_client_key_exchange_14
   \      0x2BC   0x2000             MOVS     R0,#+0
   \      0x2BE   0x9002             STR      R0,[SP, #+8]
   \                     ??ssl_write_client_key_exchange_15: (+1)
   \      0x2C0   0xF898 0x100A      LDRB     R1,[R8, #+10]
   \      0x2C4   0x4630             MOV      R0,R6
   \      0x2C6   0x....'....        BL       mbedtls_ssl_psk_derive_premaster
   \      0x2CA   0x0005             MOVS     R5,R0
   \      0x2CC   0xF43F 0xAF23      BEQ.W    ??ssl_write_client_key_exchange_4
   \      0x2D0   0x9501             STR      R5,[SP, #+4]
   \      0x2D2   0x....'....        LDR.W    R0,??DataTable36_21
   \      0x2D6   0x9000             STR      R0,[SP, #+0]
   \      0x2D8   0xF640 0x33DB      MOVW     R3,#+3035
   \      0x2DC   0x463A             MOV      R2,R7
   \      0x2DE   0x2101             MOVS     R1,#+1
   \      0x2E0   0x4630             MOV      R0,R6
   \      0x2E2   0x....'....        BL       mbedtls_debug_print_ret
   \      0x2E6   0x4628             MOV      R0,R5
   \      0x2E8   0xE0B2             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_14: (+1)
   \      0x2EA   0x2807             CMP      R0,#+7
   \      0x2EC   0xD108             BNE.N    ??ssl_write_client_key_exchange_16
   \      0x2EE   0x2302             MOVS     R3,#+2
   \      0x2F0   0xAA02             ADD      R2,SP,#+8
   \      0x2F2   0x4621             MOV      R1,R4
   \      0x2F4   0x4630             MOV      R0,R6
   \      0x2F6   0x....'....        BL       ssl_write_encrypted_pms
   \      0x2FA   0x2800             CMP      R0,#+0
   \      0x2FC   0xD0E0             BEQ.N    ??ssl_write_client_key_exchange_15
   \      0x2FE   0xE0A7             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_16: (+1)
   \      0x300   0x2806             CMP      R0,#+6
   \      0x302   0xD141             BNE.N    ??ssl_write_client_key_exchange_17
   \      0x304   0x6BF0             LDR      R0,[R6, #+60]
   \      0x306   0x6840             LDR      R0,[R0, #+4]
   \      0x308   0x9002             STR      R0,[SP, #+8]
   \      0x30A   0x1900             ADDS     R0,R0,R4
   \      0x30C   0x1C80             ADDS     R0,R0,#+2
   \      0x30E   0x42A8             CMP      R0,R5
   \      0x310   0xD30C             BCC.N    ??ssl_write_client_key_exchange_18
   \      0x312   0x....'....        LDR.W    R0,??DataTable36_22
   \      0x316   0x9000             STR      R0,[SP, #+0]
   \      0x318   0xF640 0x33AD      MOVW     R3,#+2989
   \      0x31C   0x463A             MOV      R2,R7
   \      0x31E   0x2101             MOVS     R1,#+1
   \      0x320   0x4630             MOV      R0,R6
   \      0x322   0x....'....        BL       mbedtls_debug_print_msg
   \      0x326   0x....'....        LDR.W    R0,??DataTable36_20  ;; 0xffff9600
   \      0x32A   0xE091             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_18: (+1)
   \      0x32C   0x9802             LDR      R0,[SP, #+8]
   \      0x32E   0x0A00             LSRS     R0,R0,#+8
   \      0x330   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \      0x334   0x5508             STRB     R0,[R1, R4]
   \      0x336   0x1C64             ADDS     R4,R4,#+1
   \      0x338   0x4620             MOV      R0,R4
   \      0x33A   0x9902             LDR      R1,[SP, #+8]
   \      0x33C   0xF8D6 0x20C4      LDR      R2,[R6, #+196]
   \      0x340   0x5411             STRB     R1,[R2, R0]
   \      0x342   0x1C64             ADDS     R4,R4,#+1
   \      0x344   0x6BF0             LDR      R0,[R6, #+60]
   \      0x346   0x3008             ADDS     R0,R0,#+8
   \      0x348   0x....'....        BL       mbedtls_mpi_size
   \      0x34C   0x6831             LDR      R1,[R6, #+0]
   \      0x34E   0x69C9             LDR      R1,[R1, #+28]
   \      0x350   0x9101             STR      R1,[SP, #+4]
   \      0x352   0x6831             LDR      R1,[R6, #+0]
   \      0x354   0x6989             LDR      R1,[R1, #+24]
   \      0x356   0x9100             STR      R1,[SP, #+0]
   \      0x358   0x9B02             LDR      R3,[SP, #+8]
   \      0x35A   0xF8D6 0x10C4      LDR      R1,[R6, #+196]
   \      0x35E   0x190A             ADDS     R2,R1,R4
   \      0x360   0x4601             MOV      R1,R0
   \      0x362   0x6BF0             LDR      R0,[R6, #+60]
   \      0x364   0x1D00             ADDS     R0,R0,#+4
   \      0x366   0x....'....        BL       mbedtls_dhm_make_public
   \      0x36A   0x0005             MOVS     R5,R0
   \      0x36C   0xD0A8             BEQ.N    ??ssl_write_client_key_exchange_15
   \      0x36E   0x9501             STR      R5,[SP, #+4]
   \      0x370   0x....'....        LDR.W    R0,??DataTable36_7
   \      0x374   0x9000             STR      R0,[SP, #+0]
   \      0x376   0xF640 0x33BA      MOVW     R3,#+3002
   \      0x37A   0x463A             MOV      R2,R7
   \      0x37C   0x2101             MOVS     R1,#+1
   \      0x37E   0x4630             MOV      R0,R6
   \      0x380   0x....'....        BL       mbedtls_debug_print_ret
   \      0x384   0x4628             MOV      R0,R5
   \      0x386   0xE063             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_17: (+1)
   \      0x388   0x2808             CMP      R0,#+8
   \      0x38A   0xD12D             BNE.N    ??ssl_write_client_key_exchange_19
   \      0x38C   0x6830             LDR      R0,[R6, #+0]
   \      0x38E   0x69C0             LDR      R0,[R0, #+28]
   \      0x390   0x9001             STR      R0,[SP, #+4]
   \      0x392   0x6830             LDR      R0,[R6, #+0]
   \      0x394   0x6980             LDR      R0,[R0, #+24]
   \      0x396   0x9000             STR      R0,[SP, #+0]
   \      0x398   0xF5C4 0x5320      RSB      R3,R4,#+10240
   \      0x39C   0xF8D6 0x00C4      LDR      R0,[R6, #+196]
   \      0x3A0   0x1902             ADDS     R2,R0,R4
   \      0x3A2   0xA902             ADD      R1,SP,#+8
   \      0x3A4   0x6BF0             LDR      R0,[R6, #+60]
   \      0x3A6   0x3080             ADDS     R0,R0,#+128
   \      0x3A8   0x....'....        BL       mbedtls_ecdh_make_public
   \      0x3AC   0x0005             MOVS     R5,R0
   \      0x3AE   0xD00C             BEQ.N    ??ssl_write_client_key_exchange_20
   \      0x3B0   0x9501             STR      R5,[SP, #+4]
   \      0x3B2   0x....'....        LDR.W    R0,??DataTable36_13
   \      0x3B6   0x9000             STR      R0,[SP, #+0]
   \      0x3B8   0xF640 0x33CB      MOVW     R3,#+3019
   \      0x3BC   0x463A             MOV      R2,R7
   \      0x3BE   0x2101             MOVS     R1,#+1
   \      0x3C0   0x4630             MOV      R0,R6
   \      0x3C2   0x....'....        BL       mbedtls_debug_print_ret
   \      0x3C6   0x4628             MOV      R0,R5
   \      0x3C8   0xE042             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_20: (+1)
   \      0x3CA   0x6BF0             LDR      R0,[R6, #+60]
   \      0x3CC   0xF500 0x7084      ADD      R0,R0,#+264
   \      0x3D0   0x9001             STR      R0,[SP, #+4]
   \      0x3D2   0x....'....        LDR.W    R0,??DataTable36_14
   \      0x3D6   0x9000             STR      R0,[SP, #+0]
   \      0x3D8   0xF640 0x33CF      MOVW     R3,#+3023
   \      0x3DC   0x463A             MOV      R2,R7
   \      0x3DE   0x2103             MOVS     R1,#+3
   \      0x3E0   0x4630             MOV      R0,R6
   \      0x3E2   0x....'....        BL       mbedtls_debug_print_ecp
   \      0x3E6   0xE76B             B.N      ??ssl_write_client_key_exchange_15
   \                     ??ssl_write_client_key_exchange_19: (+1)
   \      0x3E8   0x....'....        LDR.W    R0,??DataTable36_23
   \      0x3EC   0x9000             STR      R0,[SP, #+0]
   \      0x3EE   0xF640 0x33D4      MOVW     R3,#+3028
   \      0x3F2   0x463A             MOV      R2,R7
   \      0x3F4   0x2101             MOVS     R1,#+1
   \      0x3F6   0x4630             MOV      R0,R6
   \      0x3F8   0x....'....        BL       mbedtls_debug_print_msg
   \      0x3FC   0x....'....        LDR.W    R0,??DataTable36_24  ;; 0xffff9400
   \      0x400   0xE026             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_10: (+1)
   \      0x402   0xF898 0x000A      LDRB     R0,[R8, #+10]
   \      0x406   0x2801             CMP      R0,#+1
   \      0x408   0xD10A             BNE.N    ??ssl_write_client_key_exchange_21
   \      0x40A   0x2404             MOVS     R4,#+4
   \      0x40C   0x2300             MOVS     R3,#+0
   \      0x40E   0xAA02             ADD      R2,SP,#+8
   \      0x410   0x4621             MOV      R1,R4
   \      0x412   0x4630             MOV      R0,R6
   \      0x414   0x....'....        BL       ssl_write_encrypted_pms
   \      0x418   0x2800             CMP      R0,#+0
   \      0x41A   0xF43F 0xAE7C      BEQ.W    ??ssl_write_client_key_exchange_4
   \      0x41E   0xE017             B.N      ??ssl_write_client_key_exchange_2
   \                     ??ssl_write_client_key_exchange_21: (+1)
   \      0x420   0x....'....        LDR.W    R0,??DataTable36_23
   \      0x424   0x9000             STR      R0,[SP, #+0]
   \      0x426   0xF640 0x4305      MOVW     R3,#+3077
   \      0x42A   0x463A             MOV      R2,R7
   \      0x42C   0x2101             MOVS     R1,#+1
   \      0x42E   0x4630             MOV      R0,R6
   \      0x430   0x....'....        BL       mbedtls_debug_print_msg
   \      0x434   0x....'....        LDR.W    R0,??DataTable36_24  ;; 0xffff9400
   \      0x438   0xE00A             B.N      ??ssl_write_client_key_exchange_2
   3092          
   3093              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= write client key exchange" ) );
   \                     ??ssl_write_client_key_exchange_5: (+1)
   \      0x43A   0x....'....        LDR.W    R0,??DataTable36_25
   \      0x43E   0x9000             STR      R0,[SP, #+0]
   \      0x440   0xF640 0x4315      MOVW     R3,#+3093
   \      0x444   0x463A             MOV      R2,R7
   \      0x446   0x2102             MOVS     R1,#+2
   \      0x448   0x4630             MOV      R0,R6
   \      0x44A   0x....'....        BL       mbedtls_debug_print_msg
   3094          
   3095              return( 0 );
   \      0x44E   0x2000             MOVS     R0,#+0
   \                     ??ssl_write_client_key_exchange_2: (+1)
   \      0x450   0xB004             ADD      SP,SP,#+16
   \      0x452   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   3096          }
   3097          
   3098          #if !defined(MBEDTLS_KEY_EXCHANGE_RSA_ENABLED)       && \
   3099              !defined(MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED)   && \
   3100              !defined(MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED)  && \
   3101              !defined(MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED) && \
   3102              !defined(MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED)&& \
   3103              !defined(MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED)
   3104          static int ssl_write_certificate_verify( mbedtls_ssl_context *ssl )
   3105          {
   3106              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   3107                  ssl->transform_negotiate->ciphersuite_info;
   3108              int ret;
   3109          
   3110              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> write certificate verify" ) );
   3111          
   3112              if( ( ret = mbedtls_ssl_derive_keys( ssl ) ) != 0 )
   3113              {
   3114                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_derive_keys", ret );
   3115                  return( ret );
   3116              }
   3117          
   3118              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
   3119                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK ||
   3120                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK ||
   3121                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK ||
   3122                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE )
   3123              {
   3124                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip write certificate verify" ) );
   3125                  ssl->state++;
   3126                  return( 0 );
   3127              }
   3128          
   3129              MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   3130              return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   3131          }
   3132          #else

   \                                 In section .text, align 2, keep-with-next
   3133          static int ssl_write_certificate_verify( mbedtls_ssl_context *ssl )
   3134          {
   \                     ssl_write_certificate_verify: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB091             SUB      SP,SP,#+68
   \        0x6   0x4605             MOV      R5,R0
   3135              int ret = MBEDTLS_ERR_SSL_FEATURE_UNAVAILABLE;
   3136              const mbedtls_ssl_ciphersuite_t *ciphersuite_info =
   3137                  ssl->transform_negotiate->ciphersuite_info;
   \        0x8   0x6CE8             LDR      R0,[R5, #+76]
   \        0xA   0xF8D0 0xA000      LDR      R10,[R0, #+0]
   3138              size_t n = 0, offset = 0;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x9004             STR      R0,[SP, #+16]
   \       0x12   0x4607             MOV      R7,R0
   3139              unsigned char hash[48];
   3140              unsigned char *hash_start = hash;
   \       0x14   0xF10D 0x0814      ADD      R8,SP,#+20
   3141              mbedtls_md_type_t md_alg = MBEDTLS_MD_NONE;
   \       0x18   0x4681             MOV      R9,R0
   3142              unsigned int hashlen;
   3143          
   3144              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> write certificate verify" ) );
   \       0x1A   0x....'....        LDR.W    R6,??DataTable36_26
   \       0x1E   0x....'....        LDR.W    R0,??DataTable36_27
   \       0x22   0x9000             STR      R0,[SP, #+0]
   \       0x24   0xF640 0x4348      MOVW     R3,#+3144
   \       0x28   0x4632             MOV      R2,R6
   \       0x2A   0x2102             MOVS     R1,#+2
   \       0x2C   0x4628             MOV      R0,R5
   \       0x2E   0x....'....        BL       mbedtls_debug_print_msg
   3145          
   3146              if( ( ret = mbedtls_ssl_derive_keys( ssl ) ) != 0 )
   \       0x32   0x4628             MOV      R0,R5
   \       0x34   0x....'....        BL       mbedtls_ssl_derive_keys
   \       0x38   0x0004             MOVS     R4,R0
   \       0x3A   0xD00C             BEQ.N    ??ssl_write_certificate_verify_0
   3147              {
   3148                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_derive_keys", ret );
   \       0x3C   0x9401             STR      R4,[SP, #+4]
   \       0x3E   0x....'....        LDR.W    R0,??DataTable36_28
   \       0x42   0x9000             STR      R0,[SP, #+0]
   \       0x44   0xF640 0x434C      MOVW     R3,#+3148
   \       0x48   0x4632             MOV      R2,R6
   \       0x4A   0x2101             MOVS     R1,#+1
   \       0x4C   0x4628             MOV      R0,R5
   \       0x4E   0x....'....        BL       mbedtls_debug_print_ret
   3149                  return( ret );
   \       0x52   0x4620             MOV      R0,R4
   \       0x54   0xE0E1             B.N      ??ssl_write_certificate_verify_1
   3150              }
   3151          
   3152              if( ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_PSK ||
   3153                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_RSA_PSK ||
   3154                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECDHE_PSK ||
   3155                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_DHE_PSK ||
   3156                  ciphersuite_info->key_exchange == MBEDTLS_KEY_EXCHANGE_ECJPAKE )
   \                     ??ssl_write_certificate_verify_0: (+1)
   \       0x56   0xF89A 0x000A      LDRB     R0,[R10, #+10]
   \       0x5A   0x2805             CMP      R0,#+5
   \       0x5C   0xD007             BEQ.N    ??ssl_write_certificate_verify_2
   \       0x5E   0x2807             CMP      R0,#+7
   \       0x60   0xD005             BEQ.N    ??ssl_write_certificate_verify_2
   \       0x62   0x2808             CMP      R0,#+8
   \       0x64   0xD003             BEQ.N    ??ssl_write_certificate_verify_2
   \       0x66   0x2806             CMP      R0,#+6
   \       0x68   0xD001             BEQ.N    ??ssl_write_certificate_verify_2
   \       0x6A   0x280B             CMP      R0,#+11
   \       0x6C   0xD10E             BNE.N    ??ssl_write_certificate_verify_3
   3157              {
   3158                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip write certificate verify" ) );
   \                     ??ssl_write_certificate_verify_2: (+1)
   \       0x6E   0x....'....        LDR.W    R0,??DataTable36_29
   \       0x72   0x9000             STR      R0,[SP, #+0]
   \       0x74   0xF640 0x4356      MOVW     R3,#+3158
   \       0x78   0x4632             MOV      R2,R6
   \       0x7A   0x2102             MOVS     R1,#+2
   \       0x7C   0x4628             MOV      R0,R5
   \       0x7E   0x....'....        BL       mbedtls_debug_print_msg
   3159                  ssl->state++;
   \       0x82   0x6868             LDR      R0,[R5, #+4]
   \       0x84   0x1C40             ADDS     R0,R0,#+1
   \       0x86   0x6068             STR      R0,[R5, #+4]
   3160                  return( 0 );
   \       0x88   0x4638             MOV      R0,R7
   \       0x8A   0xE0C6             B.N      ??ssl_write_certificate_verify_1
   3161              }
   3162          
   3163              if( ssl->client_auth == 0 || mbedtls_ssl_own_cert( ssl ) == NULL )
   \                     ??ssl_write_certificate_verify_3: (+1)
   \       0x8C   0xF8D5 0x00E0      LDR      R0,[R5, #+224]
   \       0x90   0x2800             CMP      R0,#+0
   \       0x92   0xD004             BEQ.N    ??ssl_write_certificate_verify_4
   \       0x94   0x4628             MOV      R0,R5
   \       0x96   0x....'....        BL       mbedtls_ssl_own_cert
   \       0x9A   0x2800             CMP      R0,#+0
   \       0x9C   0xD10E             BNE.N    ??ssl_write_certificate_verify_5
   3164              {
   3165                  MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= skip write certificate verify" ) );
   \                     ??ssl_write_certificate_verify_4: (+1)
   \       0x9E   0x....'....        LDR.W    R0,??DataTable36_29
   \       0xA2   0x9000             STR      R0,[SP, #+0]
   \       0xA4   0xF640 0x435D      MOVW     R3,#+3165
   \       0xA8   0x4632             MOV      R2,R6
   \       0xAA   0x2102             MOVS     R1,#+2
   \       0xAC   0x4628             MOV      R0,R5
   \       0xAE   0x....'....        BL       mbedtls_debug_print_msg
   3166                  ssl->state++;
   \       0xB2   0x6868             LDR      R0,[R5, #+4]
   \       0xB4   0x1C40             ADDS     R0,R0,#+1
   \       0xB6   0x6068             STR      R0,[R5, #+4]
   3167                  return( 0 );
   \       0xB8   0x4638             MOV      R0,R7
   \       0xBA   0xE0AE             B.N      ??ssl_write_certificate_verify_1
   3168              }
   3169          
   3170              if( mbedtls_ssl_own_key( ssl ) == NULL )
   \                     ??ssl_write_certificate_verify_5: (+1)
   \       0xBC   0x4628             MOV      R0,R5
   \       0xBE   0x....'....        BL       mbedtls_ssl_own_key
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xD10C             BNE.N    ??ssl_write_certificate_verify_6
   3171              {
   3172                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "got no private key for certificate" ) );
   \       0xC6   0x....'....        LDR.W    R0,??DataTable36_30
   \       0xCA   0x9000             STR      R0,[SP, #+0]
   \       0xCC   0xF640 0x4364      MOVW     R3,#+3172
   \       0xD0   0x4632             MOV      R2,R6
   \       0xD2   0x2101             MOVS     R1,#+1
   \       0xD4   0x4628             MOV      R0,R5
   \       0xD6   0x....'....        BL       mbedtls_debug_print_msg
   3173                  return( MBEDTLS_ERR_SSL_PRIVATE_KEY_REQUIRED );
   \       0xDA   0x....'....        LDR.W    R0,??DataTable36_18  ;; 0xffff8a00
   \       0xDE   0xE09C             B.N      ??ssl_write_certificate_verify_1
   3174              }
   3175          
   3176              /*
   3177               * Make an RSA signature of the handshake digests
   3178               */
   3179              ssl->handshake->calc_verify( ssl, hash );
   \                     ??ssl_write_certificate_verify_6: (+1)
   \       0xE0   0xA905             ADD      R1,SP,#+20
   \       0xE2   0x4628             MOV      R0,R5
   \       0xE4   0x6BEA             LDR      R2,[R5, #+60]
   \       0xE6   0xF8D2 0x244C      LDR      R2,[R2, #+1100]
   \       0xEA   0x4790             BLX      R2
   3180          
   3181          #if defined(MBEDTLS_SSL_PROTO_SSL3) || defined(MBEDTLS_SSL_PROTO_TLS1) || \
   3182              defined(MBEDTLS_SSL_PROTO_TLS1_1)
   3183              if( ssl->minor_ver != MBEDTLS_SSL_MINOR_VERSION_3 )
   \       0xEC   0x6968             LDR      R0,[R5, #+20]
   \       0xEE   0x2803             CMP      R0,#+3
   \       0xF0   0xD031             BEQ.N    ??ssl_write_certificate_verify_7
   3184              {
   3185                  /*
   3186                   * digitally-signed struct {
   3187                   *     opaque md5_hash[16];
   3188                   *     opaque sha_hash[20];
   3189                   * };
   3190                   *
   3191                   * md5_hash
   3192                   *     MD5(handshake_messages);
   3193                   *
   3194                   * sha_hash
   3195                   *     SHA(handshake_messages);
   3196                   */
   3197                  hashlen = 36;
   \       0xF2   0x2424             MOVS     R4,#+36
   3198                  md_alg = MBEDTLS_MD_NONE;
   3199          
   3200                  /*
   3201                   * For ECDSA, default hash is SHA-1 only
   3202                   */
   3203                  if( mbedtls_pk_can_do( mbedtls_ssl_own_key( ssl ), MBEDTLS_PK_ECDSA ) )
   \       0xF4   0x4628             MOV      R0,R5
   \       0xF6   0x....'....        BL       mbedtls_ssl_own_key
   \       0xFA   0x2104             MOVS     R1,#+4
   \       0xFC   0x....'....        BL       mbedtls_pk_can_do
   \      0x100   0x2800             CMP      R0,#+0
   \      0x102   0xD004             BEQ.N    ??ssl_write_certificate_verify_8
   3204                  {
   3205                      hash_start += 16;
   \      0x104   0xF108 0x0810      ADD      R8,R8,#+16
   3206                      hashlen -= 16;
   \      0x108   0x2414             MOVS     R4,#+20
   3207                      md_alg = MBEDTLS_MD_SHA1;
   \      0x10A   0xF04F 0x0904      MOV      R9,#+4
   3208                  }
   3209              }
   3210              else
   3211          #endif /* MBEDTLS_SSL_PROTO_SSL3 || MBEDTLS_SSL_PROTO_TLS1 || \
   3212                    MBEDTLS_SSL_PROTO_TLS1_1 */
   3213          #if defined(MBEDTLS_SSL_PROTO_TLS1_2)
   3214              if( ssl->minor_ver == MBEDTLS_SSL_MINOR_VERSION_3 )
   3215              {
   3216                  /*
   3217                   * digitally-signed struct {
   3218                   *     opaque handshake_messages[handshake_messages_length];
   3219                   * };
   3220                   *
   3221                   * Taking shortcut here. We assume that the server always allows the
   3222                   * PRF Hash function and has sent it in the allowed signature
   3223                   * algorithms list received in the Certificate Request message.
   3224                   *
   3225                   * Until we encounter a server that does not, we will take this
   3226                   * shortcut.
   3227                   *
   3228                   * Reason: Otherwise we should have running hashes for SHA512 and SHA224
   3229                   *         in order to satisfy 'weird' needs from the server side.
   3230                   */
   3231                  if( ssl->transform_negotiate->ciphersuite_info->mac ==
   3232                      MBEDTLS_MD_SHA384 )
   3233                  {
   3234                      md_alg = MBEDTLS_MD_SHA384;
   3235                      ssl->out_msg[4] = MBEDTLS_SSL_HASH_SHA384;
   3236                  }
   3237                  else
   3238                  {
   3239                      md_alg = MBEDTLS_MD_SHA256;
   3240                      ssl->out_msg[4] = MBEDTLS_SSL_HASH_SHA256;
   3241                  }
   3242                  ssl->out_msg[5] = mbedtls_ssl_sig_from_pk( mbedtls_ssl_own_key( ssl ) );
   3243          
   3244                  /* Info from md_alg will be used instead */
   3245                  hashlen = 0;
   3246                  offset = 2;
   3247              }
   3248              else
   3249          #endif /* MBEDTLS_SSL_PROTO_TLS1_2 */
   3250              {
   3251                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "should never happen" ) );
   3252                  return( MBEDTLS_ERR_SSL_INTERNAL_ERROR );
   3253              }
   3254          
   3255              if( ( ret = mbedtls_pk_sign( mbedtls_ssl_own_key( ssl ), md_alg, hash_start, hashlen,
   3256                                   ssl->out_msg + 6 + offset, &n,
   3257                                   ssl->conf->f_rng, ssl->conf->p_rng ) ) != 0 )
   \                     ??ssl_write_certificate_verify_8: (+1)
   \      0x10E   0x4628             MOV      R0,R5
   \      0x110   0x....'....        BL       mbedtls_ssl_own_key
   \      0x114   0x6829             LDR      R1,[R5, #+0]
   \      0x116   0x69C9             LDR      R1,[R1, #+28]
   \      0x118   0x9103             STR      R1,[SP, #+12]
   \      0x11A   0x6829             LDR      R1,[R5, #+0]
   \      0x11C   0x6989             LDR      R1,[R1, #+24]
   \      0x11E   0x9102             STR      R1,[SP, #+8]
   \      0x120   0xA904             ADD      R1,SP,#+16
   \      0x122   0x9101             STR      R1,[SP, #+4]
   \      0x124   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x128   0x4439             ADD      R1,R1,R7
   \      0x12A   0x1D89             ADDS     R1,R1,#+6
   \      0x12C   0x9100             STR      R1,[SP, #+0]
   \      0x12E   0x4623             MOV      R3,R4
   \      0x130   0x4642             MOV      R2,R8
   \      0x132   0x4649             MOV      R1,R9
   \      0x134   0x....'....        BL       mbedtls_pk_sign
   \      0x138   0x0004             MOVS     R4,R0
   \      0x13A   0xD037             BEQ.N    ??ssl_write_certificate_verify_9
   3258              {
   3259                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_pk_sign", ret );
   \      0x13C   0x9401             STR      R4,[SP, #+4]
   \      0x13E   0x....'....        LDR.W    R0,??DataTable36_31
   \      0x142   0x9000             STR      R0,[SP, #+0]
   \      0x144   0xF640 0x43BB      MOVW     R3,#+3259
   \      0x148   0x4632             MOV      R2,R6
   \      0x14A   0x2101             MOVS     R1,#+1
   \      0x14C   0x4628             MOV      R0,R5
   \      0x14E   0x....'....        BL       mbedtls_debug_print_ret
   3260                  return( ret );
   \      0x152   0x4620             MOV      R0,R4
   \      0x154   0xE061             B.N      ??ssl_write_certificate_verify_1
   3261              }
   \                     ??ssl_write_certificate_verify_7: (+1)
   \      0x156   0xD11C             BNE.N    ??ssl_write_certificate_verify_10
   \      0x158   0x6CE8             LDR      R0,[R5, #+76]
   \      0x15A   0x6800             LDR      R0,[R0, #+0]
   \      0x15C   0x7A40             LDRB     R0,[R0, #+9]
   \      0x15E   0x2807             CMP      R0,#+7
   \      0x160   0xD106             BNE.N    ??ssl_write_certificate_verify_11
   \      0x162   0xF04F 0x0907      MOV      R9,#+7
   \      0x166   0x2005             MOVS     R0,#+5
   \      0x168   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x16C   0x7108             STRB     R0,[R1, #+4]
   \      0x16E   0xE005             B.N      ??ssl_write_certificate_verify_12
   \                     ??ssl_write_certificate_verify_11: (+1)
   \      0x170   0xF04F 0x0906      MOV      R9,#+6
   \      0x174   0x2004             MOVS     R0,#+4
   \      0x176   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x17A   0x7108             STRB     R0,[R1, #+4]
   \                     ??ssl_write_certificate_verify_12: (+1)
   \      0x17C   0x4628             MOV      R0,R5
   \      0x17E   0x....'....        BL       mbedtls_ssl_own_key
   \      0x182   0x....'....        BL       mbedtls_ssl_sig_from_pk
   \      0x186   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x18A   0x7148             STRB     R0,[R1, #+5]
   \      0x18C   0x463C             MOV      R4,R7
   \      0x18E   0x2702             MOVS     R7,#+2
   \      0x190   0xE7BD             B.N      ??ssl_write_certificate_verify_8
   \                     ??ssl_write_certificate_verify_10: (+1)
   \      0x192   0x....'....        LDR.W    R0,??DataTable36_23
   \      0x196   0x9000             STR      R0,[SP, #+0]
   \      0x198   0xF640 0x43B3      MOVW     R3,#+3251
   \      0x19C   0x4632             MOV      R2,R6
   \      0x19E   0x2101             MOVS     R1,#+1
   \      0x1A0   0x4628             MOV      R0,R5
   \      0x1A2   0x....'....        BL       mbedtls_debug_print_msg
   \      0x1A6   0x....'....        LDR.W    R0,??DataTable36_24  ;; 0xffff9400
   \      0x1AA   0xE036             B.N      ??ssl_write_certificate_verify_1
   3262          
   3263              ssl->out_msg[4 + offset] = (unsigned char)( n >> 8 );
   \                     ??ssl_write_certificate_verify_9: (+1)
   \      0x1AC   0x9804             LDR      R0,[SP, #+16]
   \      0x1AE   0x0A00             LSRS     R0,R0,#+8
   \      0x1B0   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x1B4   0x4439             ADD      R1,R1,R7
   \      0x1B6   0x7108             STRB     R0,[R1, #+4]
   3264              ssl->out_msg[5 + offset] = (unsigned char)( n      );
   \      0x1B8   0x9804             LDR      R0,[SP, #+16]
   \      0x1BA   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x1BE   0x4439             ADD      R1,R1,R7
   \      0x1C0   0x7148             STRB     R0,[R1, #+5]
   3265          
   3266              ssl->out_msglen  = 6 + n + offset;
   \      0x1C2   0x9804             LDR      R0,[SP, #+16]
   \      0x1C4   0x183F             ADDS     R7,R7,R0
   \      0x1C6   0x1DBF             ADDS     R7,R7,#+6
   \      0x1C8   0xF8C5 0x70CC      STR      R7,[R5, #+204]
   3267              ssl->out_msgtype = MBEDTLS_SSL_MSG_HANDSHAKE;
   \      0x1CC   0x2016             MOVS     R0,#+22
   \      0x1CE   0xF8C5 0x00C8      STR      R0,[R5, #+200]
   3268              ssl->out_msg[0]  = MBEDTLS_SSL_HS_CERTIFICATE_VERIFY;
   \      0x1D2   0x200F             MOVS     R0,#+15
   \      0x1D4   0xF8D5 0x10C4      LDR      R1,[R5, #+196]
   \      0x1D8   0x7008             STRB     R0,[R1, #+0]
   3269          
   3270              ssl->state++;
   \      0x1DA   0x6868             LDR      R0,[R5, #+4]
   \      0x1DC   0x1C40             ADDS     R0,R0,#+1
   \      0x1DE   0x6068             STR      R0,[R5, #+4]
   3271          
   3272              if( ( ret = mbedtls_ssl_write_handshake_msg( ssl ) ) != 0 )
   \      0x1E0   0x4628             MOV      R0,R5
   \      0x1E2   0x....'....        BL       mbedtls_ssl_write_handshake_msg
   \      0x1E6   0x0004             MOVS     R4,R0
   \      0x1E8   0xD00C             BEQ.N    ??ssl_write_certificate_verify_13
   3273              {
   3274                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_write_handshake_msg", ret );
   \      0x1EA   0x9401             STR      R4,[SP, #+4]
   \      0x1EC   0x....'....        LDR.W    R0,??DataTable36_12
   \      0x1F0   0x9000             STR      R0,[SP, #+0]
   \      0x1F2   0xF640 0x43CA      MOVW     R3,#+3274
   \      0x1F6   0x4632             MOV      R2,R6
   \      0x1F8   0x2101             MOVS     R1,#+1
   \      0x1FA   0x4628             MOV      R0,R5
   \      0x1FC   0x....'....        BL       mbedtls_debug_print_ret
   3275                  return( ret );
   \      0x200   0x4620             MOV      R0,R4
   \      0x202   0xE00A             B.N      ??ssl_write_certificate_verify_1
   3276              }
   3277          
   3278              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= write certificate verify" ) );
   \                     ??ssl_write_certificate_verify_13: (+1)
   \      0x204   0x....'....        LDR.W    R0,??DataTable36_32
   \      0x208   0x9000             STR      R0,[SP, #+0]
   \      0x20A   0xF640 0x43CE      MOVW     R3,#+3278
   \      0x20E   0x4632             MOV      R2,R6
   \      0x210   0x2102             MOVS     R1,#+2
   \      0x212   0x4628             MOV      R0,R5
   \      0x214   0x....'....        BL       mbedtls_debug_print_msg
   3279          
   3280              return( ret );
   \      0x218   0x4620             MOV      R0,R4
   \                     ??ssl_write_certificate_verify_1: (+1)
   \      0x21A   0xB012             ADD      SP,SP,#+72
   \      0x21C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   3281          }
   3282          #endif /* !MBEDTLS_KEY_EXCHANGE_RSA_ENABLED &&
   3283                    !MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED &&
   3284                    !MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED &&
   3285                    !MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED &&
   3286                    !MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED &&
   3287                    !MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED */
   3288          
   3289          #if defined(MBEDTLS_SSL_SESSION_TICKETS)

   \                                 In section .text, align 2, keep-with-next
   3290          static int ssl_parse_new_session_ticket( mbedtls_ssl_context *ssl )
   3291          {
   \                     ssl_parse_new_session_ticket: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x4606             MOV      R6,R0
   3292              int ret;
   3293              uint32_t lifetime;
   3294              size_t ticket_len;
   3295              unsigned char *ticket;
   3296              const unsigned char *msg;
   3297          
   3298              MBEDTLS_SSL_DEBUG_MSG( 2, ( "=> parse new session ticket" ) );
   \        0x6   0x....'....        LDR.W    R7,??DataTable36_26
   \        0xA   0x....'....        LDR.W    R0,??DataTable36_33
   \        0xE   0x9000             STR      R0,[SP, #+0]
   \       0x10   0xF640 0x43E2      MOVW     R3,#+3298
   \       0x14   0x463A             MOV      R2,R7
   \       0x16   0x2102             MOVS     R1,#+2
   \       0x18   0x4630             MOV      R0,R6
   \       0x1A   0x....'....        BL       mbedtls_debug_print_msg
   3299          
   3300              if( ( ret = mbedtls_ssl_read_record( ssl, 1 ) ) != 0 )
   \       0x1E   0x2101             MOVS     R1,#+1
   \       0x20   0x4630             MOV      R0,R6
   \       0x22   0x....'....        BL       mbedtls_ssl_read_record
   \       0x26   0x0004             MOVS     R4,R0
   \       0x28   0xD00C             BEQ.N    ??ssl_parse_new_session_ticket_0
   3301              {
   3302                  MBEDTLS_SSL_DEBUG_RET( 1, "mbedtls_ssl_read_record", ret );
   \       0x2A   0x9401             STR      R4,[SP, #+4]
   \       0x2C   0x....'....        LDR.W    R0,??DataTable36_34
   \       0x30   0x9000             STR      R0,[SP, #+0]
   \       0x32   0xF640 0x43E6      MOVW     R3,#+3302
   \       0x36   0x463A             MOV      R2,R7
   \       0x38   0x2101             MOVS     R1,#+1
   \       0x3A   0x4630             MOV      R0,R6
   \       0x3C   0x....'....        BL       mbedtls_debug_print_ret
   3303                  return( ret );
   \       0x40   0x4620             MOV      R0,R4
   \       0x42   0xE0BF             B.N      ??ssl_parse_new_session_ticket_1
   3304              }
   3305          
   3306              if( ssl->in_msgtype != MBEDTLS_SSL_MSG_HANDSHAKE )
   \                     ??ssl_parse_new_session_ticket_0: (+1)
   \       0x44   0x6FB0             LDR      R0,[R6, #+120]
   \       0x46   0x2816             CMP      R0,#+22
   \       0x48   0xD011             BEQ.N    ??ssl_parse_new_session_ticket_2
   3307              {
   3308                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad new session ticket message" ) );
   \       0x4A   0x....'....        LDR.W    R0,??DataTable36_35
   \       0x4E   0x9000             STR      R0,[SP, #+0]
   \       0x50   0xF640 0x43EC      MOVW     R3,#+3308
   \       0x54   0x463A             MOV      R2,R7
   \       0x56   0x2101             MOVS     R1,#+1
   \       0x58   0x4630             MOV      R0,R6
   \       0x5A   0x....'....        BL       mbedtls_debug_print_msg
   3309                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   3310                                                  MBEDTLS_SSL_ALERT_MSG_UNEXPECTED_MESSAGE );
   \       0x5E   0x220A             MOVS     R2,#+10
   \       0x60   0x2102             MOVS     R1,#+2
   \       0x62   0x4630             MOV      R0,R6
   \       0x64   0x....'....        BL       mbedtls_ssl_send_alert_message
   3311                  return( MBEDTLS_ERR_SSL_UNEXPECTED_MESSAGE );
   \       0x68   0x....'....        LDR.W    R0,??DataTable36_36  ;; 0xffff8900
   \       0x6C   0xE0AA             B.N      ??ssl_parse_new_session_ticket_1
   3312              }
   3313          
   3314              /*
   3315               * struct {
   3316               *     uint32 ticket_lifetime_hint;
   3317               *     opaque ticket<0..2^16-1>;
   3318               * } NewSessionTicket;
   3319               *
   3320               * 0  .  3   ticket_lifetime_hint
   3321               * 4  .  5   ticket_len (n)
   3322               * 6  .  5+n ticket content
   3323               */
   3324              if( ssl->in_msg[0] != MBEDTLS_SSL_HS_NEW_SESSION_TICKET ||
   3325                  ssl->in_hslen < 6 + mbedtls_ssl_hs_hdr_len( ssl ) )
   \                     ??ssl_parse_new_session_ticket_2: (+1)
   \       0x6E   0x6F30             LDR      R0,[R6, #+112]
   \       0x70   0x7800             LDRB     R0,[R0, #+0]
   \       0x72   0x2804             CMP      R0,#+4
   \       0x74   0xD107             BNE.N    ??ssl_parse_new_session_ticket_3
   \       0x76   0x4630             MOV      R0,R6
   \       0x78   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \       0x7C   0xF8D6 0x10A0      LDR      R1,[R6, #+160]
   \       0x80   0x1D80             ADDS     R0,R0,#+6
   \       0x82   0x4281             CMP      R1,R0
   \       0x84   0xD20F             BCS.N    ??ssl_parse_new_session_ticket_4
   3326              {
   3327                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad new session ticket message" ) );
   \                     ??ssl_parse_new_session_ticket_3: (+1)
   \       0x86   0x....             LDR.N    R0,??DataTable36_35
   \       0x88   0x9000             STR      R0,[SP, #+0]
   \       0x8A   0xF640 0x43FF      MOVW     R3,#+3327
   \       0x8E   0x463A             MOV      R2,R7
   \       0x90   0x2101             MOVS     R1,#+1
   \       0x92   0x4630             MOV      R0,R6
   \       0x94   0x....'....        BL       mbedtls_debug_print_msg
   3328                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   3329                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \       0x98   0x2232             MOVS     R2,#+50
   \       0x9A   0x2102             MOVS     R1,#+2
   \       0x9C   0x4630             MOV      R0,R6
   \       0x9E   0x....'....        BL       mbedtls_ssl_send_alert_message
   3330                  return( MBEDTLS_ERR_SSL_BAD_HS_NEW_SESSION_TICKET );
   \       0xA2   0x....             LDR.N    R0,??DataTable36_37  ;; 0xffff9200
   \       0xA4   0xE08E             B.N      ??ssl_parse_new_session_ticket_1
   3331              }
   3332          
   3333              msg = ssl->in_msg + mbedtls_ssl_hs_hdr_len( ssl );
   \                     ??ssl_parse_new_session_ticket_4: (+1)
   \       0xA6   0x4630             MOV      R0,R6
   \       0xA8   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \       0xAC   0x6F31             LDR      R1,[R6, #+112]
   \       0xAE   0xEB01 0x0800      ADD      R8,R1,R0
   3334          
   3335              lifetime = ( ((uint32_t) msg[0]) << 24 ) | ( msg[1] << 16 ) |
   3336                         ( msg[2] << 8 ) | ( msg[3] );
   \       0xB2   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \       0xB6   0xF898 0x9001      LDRB     R9,[R8, #+1]
   \       0xBA   0xEA4F 0x4909      LSL      R9,R9,#+16
   \       0xBE   0xEA49 0x6900      ORR      R9,R9,R0, LSL #+24
   \       0xC2   0xF898 0x0002      LDRB     R0,[R8, #+2]
   \       0xC6   0xEA49 0x2900      ORR      R9,R9,R0, LSL #+8
   \       0xCA   0xF898 0x0003      LDRB     R0,[R8, #+3]
   \       0xCE   0xEA40 0x0909      ORR      R9,R0,R9
   3337          
   3338              ticket_len = ( msg[4] << 8 ) | ( msg[5] );
   \       0xD2   0xF898 0x0004      LDRB     R0,[R8, #+4]
   \       0xD6   0xF898 0x4005      LDRB     R4,[R8, #+5]
   \       0xDA   0xEA44 0x2400      ORR      R4,R4,R0, LSL #+8
   3339          
   3340              if( ticket_len + 6 + mbedtls_ssl_hs_hdr_len( ssl ) != ssl->in_hslen )
   \       0xDE   0x4630             MOV      R0,R6
   \       0xE0   0x....'....        BL       mbedtls_ssl_hs_hdr_len
   \       0xE4   0x1900             ADDS     R0,R0,R4
   \       0xE6   0x1D80             ADDS     R0,R0,#+6
   \       0xE8   0xF8D6 0x10A0      LDR      R1,[R6, #+160]
   \       0xEC   0x4288             CMP      R0,R1
   \       0xEE   0xD00F             BEQ.N    ??ssl_parse_new_session_ticket_5
   3341              {
   3342                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "bad new session ticket message" ) );
   \       0xF0   0x....             LDR.N    R0,??DataTable36_35
   \       0xF2   0x9000             STR      R0,[SP, #+0]
   \       0xF4   0xF640 0x530E      MOVW     R3,#+3342
   \       0xF8   0x463A             MOV      R2,R7
   \       0xFA   0x2101             MOVS     R1,#+1
   \       0xFC   0x4630             MOV      R0,R6
   \       0xFE   0x....'....        BL       mbedtls_debug_print_msg
   3343                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   3344                                                  MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
   \      0x102   0x2232             MOVS     R2,#+50
   \      0x104   0x2102             MOVS     R1,#+2
   \      0x106   0x4630             MOV      R0,R6
   \      0x108   0x....'....        BL       mbedtls_ssl_send_alert_message
   3345                  return( MBEDTLS_ERR_SSL_BAD_HS_NEW_SESSION_TICKET );
   \      0x10C   0x....             LDR.N    R0,??DataTable36_37  ;; 0xffff9200
   \      0x10E   0xE059             B.N      ??ssl_parse_new_session_ticket_1
   3346              }
   3347          
   3348              MBEDTLS_SSL_DEBUG_MSG( 3, ( "ticket length: %d", ticket_len ) );
   \                     ??ssl_parse_new_session_ticket_5: (+1)
   \      0x110   0x9401             STR      R4,[SP, #+4]
   \      0x112   0x....             LDR.N    R0,??DataTable36_38
   \      0x114   0x9000             STR      R0,[SP, #+0]
   \      0x116   0xF640 0x5314      MOVW     R3,#+3348
   \      0x11A   0x463A             MOV      R2,R7
   \      0x11C   0x2103             MOVS     R1,#+3
   \      0x11E   0x4630             MOV      R0,R6
   \      0x120   0x....'....        BL       mbedtls_debug_print_msg
   3349          
   3350              /* We're not waiting for a NewSessionTicket message any more */
   3351              ssl->handshake->new_session_ticket = 0;
   \      0x124   0x2000             MOVS     R0,#+0
   \      0x126   0x6BF1             LDR      R1,[R6, #+60]
   \      0x128   0xF8C1 0x06D0      STR      R0,[R1, #+1744]
   3352              ssl->state = MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC;
   \      0x12C   0x200C             MOVS     R0,#+12
   \      0x12E   0x6070             STR      R0,[R6, #+4]
   3353          
   3354              /*
   3355               * Zero-length ticket means the server changed his mind and doesn't want
   3356               * to send a ticket after all, so just forget it
   3357               */
   3358              if( ticket_len == 0 )
   \      0x130   0x2C00             CMP      R4,#+0
   \      0x132   0xD101             BNE.N    ??ssl_parse_new_session_ticket_6
   3359                  return( 0 );
   \      0x134   0x2000             MOVS     R0,#+0
   \      0x136   0xE045             B.N      ??ssl_parse_new_session_ticket_1
   3360          
   3361              mbedtls_platform_zeroize( ssl->session_negotiate->ticket,
   3362                                        ssl->session_negotiate->ticket_len );
   \                     ??ssl_parse_new_session_ticket_6: (+1)
   \      0x138   0x6BB0             LDR      R0,[R6, #+56]
   \      0x13A   0x6E81             LDR      R1,[R0, #+104]
   \      0x13C   0x6E40             LDR      R0,[R0, #+100]
   \      0x13E   0x....'....        BL       mbedtls_platform_zeroize
   3363              mbedtls_free( ssl->session_negotiate->ticket );
   \      0x142   0x6BB0             LDR      R0,[R6, #+56]
   \      0x144   0x6E40             LDR      R0,[R0, #+100]
   \      0x146   0x....'....        BL       mbedtls_free
   3364              ssl->session_negotiate->ticket = NULL;
   \      0x14A   0x2000             MOVS     R0,#+0
   \      0x14C   0x6BB1             LDR      R1,[R6, #+56]
   \      0x14E   0x6648             STR      R0,[R1, #+100]
   3365              ssl->session_negotiate->ticket_len = 0;
   \      0x150   0x6BB1             LDR      R1,[R6, #+56]
   \      0x152   0x6688             STR      R0,[R1, #+104]
   3366          
   3367              if( ( ticket = mbedtls_calloc( 1, ticket_len ) ) == NULL )
   \      0x154   0x4621             MOV      R1,R4
   \      0x156   0x2001             MOVS     R0,#+1
   \      0x158   0x....'....        BL       mbedtls_calloc
   \      0x15C   0x0005             MOVS     R5,R0
   \      0x15E   0xD10F             BNE.N    ??ssl_parse_new_session_ticket_7
   3368              {
   3369                  MBEDTLS_SSL_DEBUG_MSG( 1, ( "ticket alloc failed" ) );
   \      0x160   0x....             LDR.N    R0,??DataTable36_39
   \      0x162   0x9000             STR      R0,[SP, #+0]
   \      0x164   0xF640 0x5329      MOVW     R3,#+3369
   \      0x168   0x463A             MOV      R2,R7
   \      0x16A   0x2101             MOVS     R1,#+1
   \      0x16C   0x4630             MOV      R0,R6
   \      0x16E   0x....'....        BL       mbedtls_debug_print_msg
   3370                  mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
   3371                                                  MBEDTLS_SSL_ALERT_MSG_INTERNAL_ERROR );
   \      0x172   0x2250             MOVS     R2,#+80
   \      0x174   0x2102             MOVS     R1,#+2
   \      0x176   0x4630             MOV      R0,R6
   \      0x178   0x....'....        BL       mbedtls_ssl_send_alert_message
   3372                  return( MBEDTLS_ERR_SSL_ALLOC_FAILED );
   \      0x17C   0x....             LDR.N    R0,??DataTable36_40  ;; 0xffff8100
   \      0x17E   0xE021             B.N      ??ssl_parse_new_session_ticket_1
   3373              }
   3374          
   3375              memcpy( ticket, msg + 6, ticket_len );
   \                     ??ssl_parse_new_session_ticket_7: (+1)
   \      0x180   0x4622             MOV      R2,R4
   \      0x182   0xF108 0x0106      ADD      R1,R8,#+6
   \      0x186   0x....'....        BL       __aeabi_memcpy
   3376          
   3377              ssl->session_negotiate->ticket = ticket;
   \      0x18A   0x6BB0             LDR      R0,[R6, #+56]
   \      0x18C   0x6645             STR      R5,[R0, #+100]
   3378              ssl->session_negotiate->ticket_len = ticket_len;
   \      0x18E   0x6BB0             LDR      R0,[R6, #+56]
   \      0x190   0x6684             STR      R4,[R0, #+104]
   3379              ssl->session_negotiate->ticket_lifetime = lifetime;
   \      0x192   0x6BB0             LDR      R0,[R6, #+56]
   \      0x194   0xF8C0 0x906C      STR      R9,[R0, #+108]
   3380          
   3381              /*
   3382               * RFC 5077 section 3.4:
   3383               * "If the client receives a session ticket from the server, then it
   3384               * discards any Session ID that was sent in the ServerHello."
   3385               */
   3386              MBEDTLS_SSL_DEBUG_MSG( 3, ( "ticket in use, discarding session id" ) );
   \      0x198   0x....             LDR.N    R0,??DataTable36_41
   \      0x19A   0x9000             STR      R0,[SP, #+0]
   \      0x19C   0xF640 0x533A      MOVW     R3,#+3386
   \      0x1A0   0x463A             MOV      R2,R7
   \      0x1A2   0x2103             MOVS     R1,#+3
   \      0x1A4   0x4630             MOV      R0,R6
   \      0x1A6   0x....'....        BL       mbedtls_debug_print_msg
   3387              ssl->session_negotiate->id_len = 0;
   \      0x1AA   0x2000             MOVS     R0,#+0
   \      0x1AC   0x6BB1             LDR      R1,[R6, #+56]
   \      0x1AE   0x6088             STR      R0,[R1, #+8]
   3388          
   3389              MBEDTLS_SSL_DEBUG_MSG( 2, ( "<= parse new session ticket" ) );
   \      0x1B0   0x....             LDR.N    R0,??DataTable36_42
   \      0x1B2   0x9000             STR      R0,[SP, #+0]
   \      0x1B4   0xF640 0x533D      MOVW     R3,#+3389
   \      0x1B8   0x463A             MOV      R2,R7
   \      0x1BA   0x2102             MOVS     R1,#+2
   \      0x1BC   0x4630             MOV      R0,R6
   \      0x1BE   0x....'....        BL       mbedtls_debug_print_msg
   3390          
   3391              return( 0 );
   \      0x1C2   0x2000             MOVS     R0,#+0
   \                     ??ssl_parse_new_session_ticket_1: (+1)
   \      0x1C4   0xE8BD 0x83FE      POP      {R1-R9,PC}       ;; return
   3392          }
   3393          #endif /* MBEDTLS_SSL_SESSION_TICKETS */
   3394          
   3395          /*
   3396           * SSL handshake -- client side -- single step
   3397           */

   \                                 In section .text, align 4, keep-with-next
   3398          int mbedtls_ssl_handshake_client_step( mbedtls_ssl_context *ssl )
   3399          {
   \                     mbedtls_ssl_handshake_client_step: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4605             MOV      R5,R0
   3400              int ret = 0;
   3401          
   3402              if( ssl->state == MBEDTLS_SSL_HANDSHAKE_OVER || ssl->handshake == NULL )
   \        0x4   0x6868             LDR      R0,[R5, #+4]
   \        0x6   0x2810             CMP      R0,#+16
   \        0x8   0xD002             BEQ.N    ??mbedtls_ssl_handshake_client_step_1
   \        0xA   0x6BE8             LDR      R0,[R5, #+60]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD101             BNE.N    ??mbedtls_ssl_handshake_client_step_2
   3403                  return( MBEDTLS_ERR_SSL_BAD_INPUT_DATA );
   \                     ??mbedtls_ssl_handshake_client_step_1: (+1)
   \       0x10   0x....             LDR.N    R0,??DataTable36_43  ;; 0xffff8f00
   \       0x12   0xBD76             POP      {R1,R2,R4-R6,PC}
   3404          
   3405              MBEDTLS_SSL_DEBUG_MSG( 2, ( "client state: %d", ssl->state ) );
   \                     ??mbedtls_ssl_handshake_client_step_2: (+1)
   \       0x14   0x....             LDR.N    R6,??DataTable36_26
   \       0x16   0x6868             LDR      R0,[R5, #+4]
   \       0x18   0x9001             STR      R0,[SP, #+4]
   \       0x1A   0x....             LDR.N    R0,??DataTable36_44
   \       0x1C   0x9000             STR      R0,[SP, #+0]
   \       0x1E   0xF640 0x534D      MOVW     R3,#+3405
   \       0x22   0x4632             MOV      R2,R6
   \       0x24   0x2102             MOVS     R1,#+2
   \       0x26   0x4628             MOV      R0,R5
   \       0x28   0x....'....        BL       mbedtls_debug_print_msg
   3406          
   3407              if( ( ret = mbedtls_ssl_flush_output( ssl ) ) != 0 )
   \       0x2C   0x4628             MOV      R0,R5
   \       0x2E   0x....'....        BL       mbedtls_ssl_flush_output
   \       0x32   0x0004             MOVS     R4,R0
   \       0x34   0xD12A             BNE.N    ??mbedtls_ssl_handshake_client_step_3
   3408                  return( ret );
   3409          
   3410          #if defined(MBEDTLS_SSL_PROTO_DTLS)
   3411              if( ssl->conf->transport == MBEDTLS_SSL_TRANSPORT_DATAGRAM &&
   3412                  ssl->handshake->retransmit_state == MBEDTLS_SSL_RETRANS_SENDING )
   \       0x36   0x6828             LDR      R0,[R5, #+0]
   \       0x38   0xF8D0 0x00CC      LDR      R0,[R0, #+204]
   \       0x3C   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD009             BEQ.N    ??mbedtls_ssl_handshake_client_step_4
   \       0x44   0x6BE8             LDR      R0,[R5, #+60]
   \       0x46   0xF890 0x01E8      LDRB     R0,[R0, #+488]
   \       0x4A   0x2801             CMP      R0,#+1
   \       0x4C   0xD104             BNE.N    ??mbedtls_ssl_handshake_client_step_4
   3413              {
   3414                  if( ( ret = mbedtls_ssl_flight_transmit( ssl ) ) != 0 )
   \       0x4E   0x4628             MOV      R0,R5
   \       0x50   0x....'....        BL       mbedtls_ssl_flight_transmit
   \       0x54   0x0004             MOVS     R4,R0
   \       0x56   0xD119             BNE.N    ??mbedtls_ssl_handshake_client_step_3
   3415                      return( ret );
   3416              }
   3417          #endif /* MBEDTLS_SSL_PROTO_DTLS */
   3418          
   3419              /* Change state now, so that it is right in mbedtls_ssl_read_record(), used
   3420               * by DTLS for dropping out-of-sequence ChangeCipherSpec records */
   3421          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
   3422              if( ssl->state == MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC &&
   3423                  ssl->handshake->new_session_ticket != 0 )
   \                     ??mbedtls_ssl_handshake_client_step_4: (+1)
   \       0x58   0x6868             LDR      R0,[R5, #+4]
   \       0x5A   0x280C             CMP      R0,#+12
   \       0x5C   0xD106             BNE.N    ??mbedtls_ssl_handshake_client_step_5
   \       0x5E   0x6BE8             LDR      R0,[R5, #+60]
   \       0x60   0xF8D0 0x06D0      LDR      R0,[R0, #+1744]
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD001             BEQ.N    ??mbedtls_ssl_handshake_client_step_5
   3424              {
   3425                  ssl->state = MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET;
   \       0x68   0x2011             MOVS     R0,#+17
   \       0x6A   0x6068             STR      R0,[R5, #+4]
   3426              }
   3427          #endif
   3428          
   3429              switch( ssl->state )
   \                     ??mbedtls_ssl_handshake_client_step_5: (+1)
   \       0x6C   0x6868             LDR      R0,[R5, #+4]
   \       0x6E   0x2811             CMP      R0,#+17
   \       0x70   0xD864             BHI.N    ??mbedtls_ssl_handshake_client_step_6
   \       0x72   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??mbedtls_ssl_handshake_client_step_0:
   \       0x76   0x09 0x0D          DC8      0x9,0xD,0x12,0x17
   \              0x12 0x17    
   \       0x7A   0x1C 0x21          DC8      0x1C,0x21,0x26,0x2B
   \              0x26 0x2B    
   \       0x7E   0x30 0x35          DC8      0x30,0x35,0x3A,0x3F
   \              0x3A 0x3F    
   \       0x82   0x49 0x4E          DC8      0x49,0x4E,0x53,0x5F
   \              0x53 0x5F    
   \       0x86   0x63 0x44          DC8      0x63,0x44
   3430              {
   3431                  case MBEDTLS_SSL_HELLO_REQUEST:
   3432                      ssl->state = MBEDTLS_SSL_CLIENT_HELLO;
   \                     ??mbedtls_ssl_handshake_client_step_7: (+1)
   \       0x88   0x2001             MOVS     R0,#+1
   \       0x8A   0x6068             STR      R0,[R5, #+4]
   3433                      break;
   3434          
   3435                 /*
   3436                  *  ==>   ClientHello
   3437                  */
   3438                 case MBEDTLS_SSL_CLIENT_HELLO:
   3439                     ret = ssl_write_client_hello( ssl );
   3440                     break;
   3441          
   3442                 /*
   3443                  *  <==   ServerHello
   3444                  *        Certificate
   3445                  *      ( ServerKeyExchange  )
   3446                  *      ( CertificateRequest )
   3447                  *        ServerHelloDone
   3448                  */
   3449                 case MBEDTLS_SSL_SERVER_HELLO:
   3450                     ret = ssl_parse_server_hello( ssl );
   3451                     break;
   3452          
   3453                 case MBEDTLS_SSL_SERVER_CERTIFICATE:
   3454                     ret = mbedtls_ssl_parse_certificate( ssl );
   3455                     break;
   3456          
   3457                 case MBEDTLS_SSL_SERVER_KEY_EXCHANGE:
   3458                     ret = ssl_parse_server_key_exchange( ssl );
   3459                     break;
   3460          
   3461                 case MBEDTLS_SSL_CERTIFICATE_REQUEST:
   3462                     ret = ssl_parse_certificate_request( ssl );
   3463                     break;
   3464          
   3465                 case MBEDTLS_SSL_SERVER_HELLO_DONE:
   3466                     ret = ssl_parse_server_hello_done( ssl );
   3467                     break;
   3468          
   3469                 /*
   3470                  *  ==> ( Certificate/Alert  )
   3471                  *        ClientKeyExchange
   3472                  *      ( CertificateVerify  )
   3473                  *        ChangeCipherSpec
   3474                  *        Finished
   3475                  */
   3476                 case MBEDTLS_SSL_CLIENT_CERTIFICATE:
   3477                     ret = mbedtls_ssl_write_certificate( ssl );
   3478                     break;
   3479          
   3480                 case MBEDTLS_SSL_CLIENT_KEY_EXCHANGE:
   3481                     ret = ssl_write_client_key_exchange( ssl );
   3482                     break;
   3483          
   3484                 case MBEDTLS_SSL_CERTIFICATE_VERIFY:
   3485                     ret = ssl_write_certificate_verify( ssl );
   3486                     break;
   3487          
   3488                 case MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC:
   3489                     ret = mbedtls_ssl_write_change_cipher_spec( ssl );
   3490                     break;
   3491          
   3492                 case MBEDTLS_SSL_CLIENT_FINISHED:
   3493                     ret = mbedtls_ssl_write_finished( ssl );
   3494                     break;
   3495          
   3496                 /*
   3497                  *  <==   ( NewSessionTicket )
   3498                  *        ChangeCipherSpec
   3499                  *        Finished
   3500                  */
   3501          #if defined(MBEDTLS_SSL_SESSION_TICKETS)
   3502                 case MBEDTLS_SSL_SERVER_NEW_SESSION_TICKET:
   3503                     ret = ssl_parse_new_session_ticket( ssl );
   3504                     break;
   3505          #endif
   3506          
   3507                 case MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC:
   3508                     ret = mbedtls_ssl_parse_change_cipher_spec( ssl );
   3509                     break;
   3510          
   3511                 case MBEDTLS_SSL_SERVER_FINISHED:
   3512                     ret = mbedtls_ssl_parse_finished( ssl );
   3513                     break;
   3514          
   3515                 case MBEDTLS_SSL_FLUSH_BUFFERS:
   3516                     MBEDTLS_SSL_DEBUG_MSG( 2, ( "handshake: done" ) );
   3517                     ssl->state = MBEDTLS_SSL_HANDSHAKE_WRAPUP;
   3518                     break;
   3519          
   3520                 case MBEDTLS_SSL_HANDSHAKE_WRAPUP:
   3521                     mbedtls_ssl_handshake_wrapup( ssl );
   3522                     break;
   3523          
   3524                 default:
   3525                     MBEDTLS_SSL_DEBUG_MSG( 1, ( "invalid state %d", ssl->state ) );
   3526                     return( MBEDTLS_ERR_SSL_BAD_INPUT_DATA );
   3527             }
   3528          
   3529              return( ret );
   \                     ??mbedtls_ssl_handshake_client_step_3: (+1)
   \       0x8C   0x4620             MOV      R0,R4
   \       0x8E   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
   \                     ??mbedtls_ssl_handshake_client_step_8: (+1)
   \       0x90   0x4628             MOV      R0,R5
   \       0x92   0x....'....        BL       ssl_write_client_hello
   \       0x96   0x4604             MOV      R4,R0
   \       0x98   0xE7F8             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_9: (+1)
   \       0x9A   0x4628             MOV      R0,R5
   \       0x9C   0x....'....        BL       ssl_parse_server_hello
   \       0xA0   0x4604             MOV      R4,R0
   \       0xA2   0xE7F3             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_10: (+1)
   \       0xA4   0x4628             MOV      R0,R5
   \       0xA6   0x....'....        BL       mbedtls_ssl_parse_certificate
   \       0xAA   0x4604             MOV      R4,R0
   \       0xAC   0xE7EE             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_11: (+1)
   \       0xAE   0x4628             MOV      R0,R5
   \       0xB0   0x....'....        BL       ssl_parse_server_key_exchange
   \       0xB4   0x4604             MOV      R4,R0
   \       0xB6   0xE7E9             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_12: (+1)
   \       0xB8   0x4628             MOV      R0,R5
   \       0xBA   0x....'....        BL       ssl_parse_certificate_request
   \       0xBE   0x4604             MOV      R4,R0
   \       0xC0   0xE7E4             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_13: (+1)
   \       0xC2   0x4628             MOV      R0,R5
   \       0xC4   0x....'....        BL       ssl_parse_server_hello_done
   \       0xC8   0x4604             MOV      R4,R0
   \       0xCA   0xE7DF             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_14: (+1)
   \       0xCC   0x4628             MOV      R0,R5
   \       0xCE   0x....'....        BL       mbedtls_ssl_write_certificate
   \       0xD2   0x4604             MOV      R4,R0
   \       0xD4   0xE7DA             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_15: (+1)
   \       0xD6   0x4628             MOV      R0,R5
   \       0xD8   0x....'....        BL       ssl_write_client_key_exchange
   \       0xDC   0x4604             MOV      R4,R0
   \       0xDE   0xE7D5             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_16: (+1)
   \       0xE0   0x4628             MOV      R0,R5
   \       0xE2   0x....'....        BL       ssl_write_certificate_verify
   \       0xE6   0x4604             MOV      R4,R0
   \       0xE8   0xE7D0             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_17: (+1)
   \       0xEA   0x4628             MOV      R0,R5
   \       0xEC   0x....'....        BL       mbedtls_ssl_write_change_cipher_spec
   \       0xF0   0x4604             MOV      R4,R0
   \       0xF2   0xE7CB             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_18: (+1)
   \       0xF4   0x4628             MOV      R0,R5
   \       0xF6   0x....'....        BL       mbedtls_ssl_write_finished
   \       0xFA   0x4604             MOV      R4,R0
   \       0xFC   0xE7C6             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_19: (+1)
   \       0xFE   0x4628             MOV      R0,R5
   \      0x100   0x....'....        BL       ssl_parse_new_session_ticket
   \      0x104   0x4604             MOV      R4,R0
   \      0x106   0xE7C1             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_20: (+1)
   \      0x108   0x4628             MOV      R0,R5
   \      0x10A   0x....'....        BL       mbedtls_ssl_parse_change_cipher_spec
   \      0x10E   0x4604             MOV      R4,R0
   \      0x110   0xE7BC             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_21: (+1)
   \      0x112   0x4628             MOV      R0,R5
   \      0x114   0x....'....        BL       mbedtls_ssl_parse_finished
   \      0x118   0x4604             MOV      R4,R0
   \      0x11A   0xE7B7             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_22: (+1)
   \      0x11C   0x....             LDR.N    R0,??DataTable36_45
   \      0x11E   0x9000             STR      R0,[SP, #+0]
   \      0x120   0xF640 0x53BC      MOVW     R3,#+3516
   \      0x124   0x4632             MOV      R2,R6
   \      0x126   0x2102             MOVS     R1,#+2
   \      0x128   0x4628             MOV      R0,R5
   \      0x12A   0x....'....        BL       mbedtls_debug_print_msg
   \      0x12E   0x200F             MOVS     R0,#+15
   \      0x130   0x6068             STR      R0,[R5, #+4]
   \      0x132   0xE7AB             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_23: (+1)
   \      0x134   0x4628             MOV      R0,R5
   \      0x136   0x....'....        BL       mbedtls_ssl_handshake_wrapup
   \      0x13A   0xE7A7             B.N      ??mbedtls_ssl_handshake_client_step_3
   \                     ??mbedtls_ssl_handshake_client_step_6: (+1)
   \      0x13C   0x9001             STR      R0,[SP, #+4]
   \      0x13E   0x....             LDR.N    R0,??DataTable36_46
   \      0x140   0x9000             STR      R0,[SP, #+0]
   \      0x142   0xF640 0x53C5      MOVW     R3,#+3525
   \      0x146   0x4632             MOV      R2,R6
   \      0x148   0x2101             MOVS     R1,#+1
   \      0x14A   0x4628             MOV      R0,R5
   \      0x14C   0x....'....        BL       mbedtls_debug_print_msg
   \      0x150   0x....             LDR.N    R0,??DataTable36_43  ;; 0xffff8f00
   \      0x152   0xBD76             POP      {R1,R2,R4-R6,PC}
   3530          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_2:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \        0x0   0xFFFF'8C00        DC32     0xffff8c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \        0x0   0xFFFF'8F00        DC32     0xffff8f00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_17:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_18:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_19:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_20:
   \        0x0   0x....'....        DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_21:
   \        0x0   0x....'....        DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_22:
   \        0x0   0x....'....        DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_23:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_24:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_25:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_26:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_27:
   \        0x0   0xFFFF'8680        DC32     0xffff8680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_28:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_29:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_30:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_31:
   \        0x0   0x....'....        DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_32:
   \        0x0   0x....'....        DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_1:
   \        0x0   0x....'....        DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_2:
   \        0x0   0x....'....        DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable22_3:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable23:
   \        0x0   0x....'....        DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \        0x0   0x....'....        DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \        0x0   0x....'....        DC32     ?_48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \        0x0   0x....'....        DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \        0x0   0x....'....        DC32     ?_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \        0x0   0xFFFF'9180        DC32     0xffff9180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_2:
   \        0x0   0x....'....        DC32     ?_51

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_3:
   \        0x0   0x....'....        DC32     ?_52

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_4:
   \        0x0   0x....'....        DC32     ?_53

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_5:
   \        0x0   0xFFFF'8100        DC32     0xffff8100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_6:
   \        0x0   0x....'....        DC32     ?_55

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_7:
   \        0x0   0xFFFF'8680        DC32     0xffff8680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \        0x0   0x....'....        DC32     ?_54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \        0x0   0x....'....        DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \        0x0   0x....'....        DC32     ?_57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \        0x0   0x....'....        DC32     ?_58

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_4:
   \        0x0   0xFFFF'9500        DC32     0xffff9500

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_5:
   \        0x0   0x....'....        DC32     ?_59

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \        0x0   0xFFFF'8900        DC32     0xffff8900

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \        0x0   0x....'....        DC32     ?_60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \        0x0   0x....'....        DC32     ?_61

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \        0x0   0x....'....        DC32     ?_62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \        0x0   0x....'....        DC32     ?_63

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_2:
   \        0x0   0x....'....        DC32     ?_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_3:
   \        0x0   0x....'....        DC32     ?_65

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_4:
   \        0x0   0xFFFF'8F80        DC32     0xffff8f80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_5:
   \        0x0   0x....'....        DC32     ?_66

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_6:
   \        0x0   0xFFFF'8F00        DC32     0xffff8f00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_7:
   \        0x0   0x....'....        DC32     ?_67

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_8:
   \        0x0   0x....'....        DC32     ?_68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_9:
   \        0x0   0x....'....        DC32     ?_69

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_10:
   \        0x0   0x....'....        DC32     ?_70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_11:
   \        0x0   0x....'....        DC32     ?_73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_12:
   \        0x0   0x....'....        DC32     ?_74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_13:
   \        0x0   0x....'....        DC32     ?_75

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_14:
   \        0x0   0x....'....        DC32     ?_76

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_15:
   \        0x0   0x....'....        DC32     ?_77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_16:
   \        0x0   0x....'....        DC32     ?_78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_17:
   \        0x0   0x....'....        DC32     ?_79

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_18:
   \        0x0   0x....'....        DC32     ?_80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \        0x0   0x....'....        DC32     ?_81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \        0x0   0x....'....        DC32     ?_82

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_2:
   \        0x0   0x....'....        DC32     ?_83

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_3:
   \        0x0   0x....'....        DC32     ?_84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_4:
   \        0x0   0x....'....        DC32     ?_85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_5:
   \        0x0   0x....'....        DC32     ?_87

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_6:
   \        0x0   0x....'....        DC32     ?_88

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_7:
   \        0x0   0x....'....        DC32     ?_89

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_8:
   \        0x0   0x....'....        DC32     ?_90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_9:
   \        0x0   0x....'....        DC32     ?_91

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \        0x0   0x....'....        DC32     ?_86

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \        0x0   0x....'....        DC32     ?_92

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_2:
   \        0x0   0x....'....        DC32     ?_93

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_3:
   \        0x0   0x....'....        DC32     ?_95

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_4:
   \        0x0   0xFFFF'9400        DC32     0xffff9400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_5:
   \        0x0   0x....'....        DC32     ?_96

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \        0x0   0xFFFF'8500        DC32     0xffff8500

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \        0x0   0x....'....        DC32     ?_94

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \        0x0   0x61 0x00          DC8      "a",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_3:
   \        0x0   0x6E 0x6F          DC8      0x6E, 0x6F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_4:
   \        0x0   0x....'....        DC32     ?_97

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_5:
   \        0x0   0x....'....        DC32     ?_98

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_6:
   \        0x0   0x....'....        DC32     ?_99

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_7:
   \        0x0   0x....'....        DC32     ?_100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_8:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_9:
   \        0x0   0x....'....        DC32     ?_101

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_10:
   \        0x0   0xFFFF'9600        DC32     0xffff9600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_11:
   \        0x0   0x....'....        DC32     ?_102

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_12:
   \        0x0   0x....'....        DC32     ?_103

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_13:
   \        0x0   0x....'....        DC32     ?_104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_14:
   \        0x0   0xFFFF'9300        DC32     0xffff9300

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_15:
   \        0x0   0x....'....        DC32     ?_105

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_16:
   \        0x0   0x....'....        DC32     ?_106

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_17:
   \        0x0   0x....'....        DC32     ?_107

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_18:
   \        0x0   0x....'....        DC32     ?_108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_19:
   \        0x0   0x....'....        DC32     ?_109

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_20:
   \        0x0   0x....'....        DC32     ?_110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_21:
   \        0x0   0xFFFF'8900        DC32     0xffff8900

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_22:
   \        0x0   0x....'....        DC32     ?_111

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_23:
   \        0x0   0x....'....        DC32     ?_112

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_24:
   \        0x0   0x....'....        DC32     ?_113

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \        0x0   0xFFFF'8600        DC32     0xffff8600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \        0x0   0x....'....        DC32     ?_114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_3:
   \        0x0   0x....'....        DC32     ?_115

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_4:
   \        0x0   0x....'....        DC32     ?_116

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_5:
   \        0x0   0x....'....        DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_6:
   \        0x0   0x....'....        DC32     ?_117

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_7:
   \        0x0   0x....'....        DC32     ?_123

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_8:
   \        0x0   0x....'....        DC32     ?_118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_9:
   \        0x0   0x....'....        DC32     ?_119

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \        0x0   0x....'....        DC32     ?_120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \        0x0   0x....'....        DC32     ?_121

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35:
   \        0x0   0x....'....        DC32     ?_122

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_1:
   \        0x0   0x....'....        DC32     ?_124

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_2:
   \        0x0   0x....'....        DC32     ?_125

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_3:
   \        0x0   0x....'....        DC32     ?_126

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_4:
   \        0x0   0x....'....        DC32     ?_127

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable35_5:
   \        0x0   0x....'....        DC32     ?_129

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36:
   \        0x0   0xFFFF'8580        DC32     0xffff8580

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_1:
   \        0x0   0x....'....        DC32     ?_128

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_2:
   \        0x0   0x....'....        DC32     ?_130

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_3:
   \        0x0   0x....'....        DC32     ?_131

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_4:
   \        0x0   0xFFFF'8480        DC32     0xffff8480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_5:
   \        0x0   0x....'....        DC32     ?_132

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_6:
   \        0x0   0x....'....        DC32     ?_133

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_7:
   \        0x0   0x....'....        DC32     ?_134

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_8:
   \        0x0   0x....'....        DC32     ?_135

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_9:
   \        0x0   0x....'....        DC32     ?_136

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_10:
   \        0x0   0x....'....        DC32     ?_137

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_11:
   \        0x0   0x....'....        DC32     ?_138

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_12:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_13:
   \        0x0   0x....'....        DC32     ?_139

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_14:
   \        0x0   0x....'....        DC32     ?_140

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_15:
   \        0x0   0x....'....        DC32     ?_141

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_16:
   \        0x0   0x....'....        DC32     ?_142

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_17:
   \        0x0   0x....'....        DC32     ?_143

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_18:
   \        0x0   0xFFFF'8A00        DC32     0xffff8a00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_19:
   \        0x0   0x....'....        DC32     ?_144

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_20:
   \        0x0   0xFFFF'9600        DC32     0xffff9600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_21:
   \        0x0   0x....'....        DC32     ?_146

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_22:
   \        0x0   0x....'....        DC32     ?_145

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_23:
   \        0x0   0x....'....        DC32     ?_95

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_24:
   \        0x0   0xFFFF'9400        DC32     0xffff9400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_25:
   \        0x0   0x....'....        DC32     ?_147

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_26:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_27:
   \        0x0   0x....'....        DC32     ?_148

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_28:
   \        0x0   0x....'....        DC32     ?_69

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_29:
   \        0x0   0x....'....        DC32     ?_149

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_30:
   \        0x0   0x....'....        DC32     ?_150

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_31:
   \        0x0   0x....'....        DC32     ?_151

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_32:
   \        0x0   0x....'....        DC32     ?_152

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_33:
   \        0x0   0x....'....        DC32     ?_153

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_34:
   \        0x0   0x....'....        DC32     ?_56

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_35:
   \        0x0   0x....'....        DC32     ?_154

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_36:
   \        0x0   0xFFFF'8900        DC32     0xffff8900

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_37:
   \        0x0   0xFFFF'9200        DC32     0xffff9200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_38:
   \        0x0   0x....'....        DC32     ?_155

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_39:
   \        0x0   0x....'....        DC32     ?_156

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_40:
   \        0x0   0xFFFF'8100        DC32     0xffff8100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_41:
   \        0x0   0x....'....        DC32     ?_157

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_42:
   \        0x0   0x....'....        DC32     ?_158

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_43:
   \        0x0   0xFFFF'8F00        DC32     0xffff8f00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_44:
   \        0x0   0x....'....        DC32     ?_159

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_45:
   \        0x0   0x....'....        DC32     ?_160

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable36_46:
   \        0x0   0x....'....        DC32     ?_161

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x43 0x3A          DC8 43H, 3AH, 5CH, 44H, 65H, 76H, 65H, 6CH
   \              0x5C 0x44    
   \              0x65 0x76    
   \              0x65 0x6C    
   \        0x8   0x6F 0x70          DC8 6FH, 70H, 6DH, 65H, 6EH, 74H, 5CH, 73H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x5C 0x73    
   \       0x10   0x6D 0x61          DC8 6DH, 61H, 72H, 74H, 5FH, 77H, 61H, 73H
   \              0x72 0x74    
   \              0x5F 0x77    
   \              0x61 0x73    
   \       0x18   0x68 0x69          DC8 68H, 69H, 6EH, 67H, 5FH, 6DH, 61H, 63H
   \              0x6E 0x67    
   \              0x5F 0x6D    
   \              0x61 0x63    
   \       0x20   0x68 0x69          DC8 68H, 69H, 6EH, 65H, 5FH, 33H, 30H, 38H
   \              0x6E 0x65    
   \              0x5F 0x33    
   \              0x30 0x38    
   \       0x28   0x30 0x5C          DC8 30H, 5CH, 6DH, 62H, 65H, 64H, 74H, 6CH
   \              0x6D 0x62    
   \              0x65 0x64    
   \              0x74 0x6C    
   \       0x30   0x73 0x5C          DC8 73H, 5CH, 6CH, 69H, 62H, 72H, 61H, 72H
   \              0x6C 0x69    
   \              0x62 0x72    
   \              0x61 0x72    
   \       0x38   0x79 0x5C          DC8 79H, 5CH, 73H, 73H, 6CH, 5FH, 63H, 6CH
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x63 0x6C    
   \       0x40   0x69 0x2E          DC8 69H, 2EH, 63H, 0
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x63 0x6C          DC8 "client hello, adding server name extension: %s"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x6E 0x61    
   \              0x6D 0x65    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \       0x2F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x62 0x75          DC8 "buffer too small"
   \              0x66 0x66    
   \              0x65 0x72    
   \              0x20 0x74    
   \              0x6F 0x6F    
   \              0x20 0x73    
   \              0x6D 0x61    
   \              0x6C 0x6C    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x63 0x6C          DC8 "client hello, adding renegotiation extension"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x72    
   \              0x65 0x6E    
   \              0x65 0x67    
   \              0x6F 0x74    
   \              0x69 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x2D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 61H, 64H
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \       0x10   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 73H, 69H, 67H
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x69 0x67    
   \       0x18   0x6E 0x61          DC8 6EH, 61H, 74H, 75H, 72H, 65H, 5FH, 61H
   \              0x74 0x75    
   \              0x72 0x65    
   \              0x5F 0x61    
   \       0x20   0x6C 0x67          DC8 6CH, 67H, 6FH, 72H, 69H, 74H, 68H, 6DH
   \              0x6F 0x72    
   \              0x69 0x74    
   \              0x68 0x6D    
   \       0x28   0x73 0x20          DC8 73H, 20H, 65H, 78H, 74H, 65H, 6EH, 73H
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \       0x30   0x69 0x6F          DC8 69H, 6FH, 6EH, 0
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 61H, 64H
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \       0x10   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 73H, 75H, 70H
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x75 0x70    
   \       0x18   0x70 0x6F          DC8 70H, 6FH, 72H, 74H, 65H, 64H, 5FH, 65H
   \              0x72 0x74    
   \              0x65 0x64    
   \              0x5F 0x65    
   \       0x20   0x6C 0x6C          DC8 6CH, 6CH, 69H, 70H, 74H, 69H, 63H, 5FH
   \              0x69 0x70    
   \              0x74 0x69    
   \              0x63 0x5F    
   \       0x28   0x63 0x75          DC8 63H, 75H, 72H, 76H, 65H, 73H, 20H, 65H
   \              0x72 0x76    
   \              0x65 0x73    
   \              0x20 0x65    
   \       0x30   0x78 0x74          DC8 78H, 74H, 65H, 6EH, 73H, 69H, 6FH, 6EH
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \       0x38   0x00               DC8 0
   \       0x39   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x69 0x6E          DC8 "invalid curve in ssl configuration"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x63 0x75    
   \              0x72 0x76    
   \              0x65 0x20    
   \              0x69 0x6E    
   \              0x20 0x73    
   \              0x73 0x6C    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 61H, 64H
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \       0x10   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 73H, 75H, 70H
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x75 0x70    
   \       0x18   0x70 0x6F          DC8 70H, 6FH, 72H, 74H, 65H, 64H, 5FH, 70H
   \              0x72 0x74    
   \              0x65 0x64    
   \              0x5F 0x70    
   \       0x20   0x6F 0x69          DC8 6FH, 69H, 6EH, 74H, 5FH, 66H, 6FH, 72H
   \              0x6E 0x74    
   \              0x5F 0x66    
   \              0x6F 0x72    
   \       0x28   0x6D 0x61          DC8 6DH, 61H, 74H, 73H, 20H, 65H, 78H, 74H
   \              0x74 0x73    
   \              0x20 0x65    
   \              0x78 0x74    
   \       0x30   0x65 0x6E          DC8 65H, 6EH, 73H, 69H, 6FH, 6EH, 0
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x37   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 61H, 64H
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \       0x10   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 6DH, 61H, 78H
   \              0x6E 0x67    
   \              0x20 0x6D    
   \              0x61 0x78    
   \       0x18   0x5F 0x66          DC8 5FH, 66H, 72H, 61H, 67H, 6DH, 65H, 6EH
   \              0x72 0x61    
   \              0x67 0x6D    
   \              0x65 0x6E    
   \       0x20   0x74 0x5F          DC8 74H, 5FH, 6CH, 65H, 6EH, 67H, 74H, 68H
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \       0x28   0x20 0x65          DC8 20H, 65H, 78H, 74H, 65H, 6EH, 73H, 69H
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \       0x30   0x6F 0x6E          DC8 6FH, 6EH, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x63 0x6C          DC8 "client hello, adding truncated_hmac extension"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x74    
   \              0x72 0x75    
   \              0x6E 0x63    
   \              0x61 0x74    
   \              0x65 0x64    
   \              0x5F 0x68    
   \              0x6D 0x61    
   \              0x63 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x63 0x6C          DC8 "client hello, adding encrypt_then_mac extension"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x65    
   \              0x6E 0x63    
   \              0x72 0x79    
   \              0x70 0x74    
   \              0x5F 0x74    
   \              0x68 0x65    
   \              0x6E 0x5F    
   \              0x6D 0x61    
   \              0x63 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 61H, 64H
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \       0x10   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 65H, 78H, 74H
   \              0x6E 0x67    
   \              0x20 0x65    
   \              0x78 0x74    
   \       0x18   0x65 0x6E          DC8 65H, 6EH, 64H, 65H, 64H, 5FH, 6DH, 61H
   \              0x64 0x65    
   \              0x64 0x5F    
   \              0x6D 0x61    
   \       0x20   0x73 0x74          DC8 73H, 74H, 65H, 72H, 5FH, 73H, 65H, 63H
   \              0x65 0x72    
   \              0x5F 0x73    
   \              0x65 0x63    
   \       0x28   0x72 0x65          DC8 72H, 65H, 74H, 20H, 65H, 78H, 74H, 65H
   \              0x74 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \       0x30   0x6E 0x73          DC8 6EH, 73H, 69H, 6FH, 6EH, 0
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x36   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x63 0x6C          DC8 "client hello, adding session ticket extension"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x69 0x63    
   \              0x6B 0x65    
   \              0x74 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x73 0x65          DC8 "sending session ticket of length %d"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x74 0x69    
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x63 0x6C          DC8 "client hello, adding alpn extension"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x61    
   \              0x6C 0x70    
   \              0x6E 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x3D 0x3E          DC8 "=> write client hello"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x6C 0x69    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x6E 0x6F          DC8 "no RNG provided"
   \              0x20 0x52    
   \              0x4E 0x47    
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x76 0x69    
   \              0x64 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x63 0x6F          DC8 63H, 6FH, 6EH, 66H, 69H, 67H, 75H, 72H
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \        0x8   0x65 0x64          DC8 65H, 64H, 20H, 6DH, 61H, 78H, 20H, 6DH
   \              0x20 0x6D    
   \              0x61 0x78    
   \              0x20 0x6D    
   \       0x10   0x61 0x6A          DC8 61H, 6AH, 6FH, 72H, 20H, 76H, 65H, 72H
   \              0x6F 0x72    
   \              0x20 0x76    
   \              0x65 0x72    
   \       0x18   0x73 0x69          DC8 73H, 69H, 6FH, 6EH, 20H, 69H, 73H, 20H
   \              0x6F 0x6E    
   \              0x20 0x69    
   \              0x73 0x20    
   \       0x20   0x69 0x6E          DC8 69H, 6EH, 76H, 61H, 6CH, 69H, 64H, 2CH
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x2C    
   \       0x28   0x20 0x63          DC8 20H, 63H, 6FH, 6EH, 73H, 69H, 64H, 65H
   \              0x6F 0x6E    
   \              0x73 0x69    
   \              0x64 0x65    
   \       0x30   0x72 0x20          DC8 72H, 20H, 75H, 73H, 69H, 6EH, 67H, 20H
   \              0x75 0x73    
   \              0x69 0x6E    
   \              0x67 0x20    
   \       0x38   0x6D 0x62          DC8 6DH, 62H, 65H, 64H, 74H, 6CH, 73H, 5FH
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \       0x40   0x73 0x73          DC8 73H, 73H, 6CH, 5FH, 63H, 6FH, 6EH, 66H
   \              0x6C 0x5F    
   \              0x63 0x6F    
   \              0x6E 0x66    
   \       0x48   0x69 0x67          DC8 69H, 67H, 5FH, 64H, 65H, 66H, 61H, 75H
   \              0x5F 0x64    
   \              0x65 0x66    
   \              0x61 0x75    
   \       0x50   0x6C 0x74          DC8 6CH, 74H, 73H, 28H, 29H, 0
   \              0x73 0x28    
   \              0x29 0x00    
   \       0x56   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x63 0x6C          DC8 "client hello, max version: [%d:%d]"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x6D 0x61    
   \              0x78 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x5B    
   \              0x25 0x64    
   \              0x3A 0x25    
   \              0x64 0x5D    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x73 0x73          DC8 "ssl_generate_random"
   \              0x6C 0x5F    
   \              0x67 0x65    
   \              0x6E 0x65    
   \              0x72 0x61    
   \              0x74 0x65    
   \              0x5F 0x72    
   \              0x61 0x6E    
   \              0x64 0x6F    
   \              0x6D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x63 0x6C          DC8 "client hello, random bytes"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x72 0x61    
   \              0x6E 0x64    
   \              0x6F 0x6D    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x63 0x6C          DC8 "client hello, session id len.: %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x63 0x6C          DC8 "client hello, session id"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x6E 0x6F          DC8 "no verify cookie to send"
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x20    
   \              0x63 0x6F    
   \              0x6F 0x6B    
   \              0x69 0x65    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x73 0x65    
   \              0x6E 0x64    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x63 0x6C          DC8 "client hello, cookie"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6F 0x6B    
   \              0x69 0x65    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x63 0x6C          DC8 "client hello, add ciphersuite: %04x"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x61 0x64    
   \              0x64 0x20    
   \              0x63 0x69    
   \              0x70 0x68    
   \              0x65 0x72    
   \              0x73 0x75    
   \              0x69 0x74    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x30 0x34    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x63 0x6C          DC8 63H, 6CH, 69H, 65H, 6EH, 74H, 20H, 68H
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \        0x8   0x65 0x6C          DC8 65H, 6CH, 6CH, 6FH, 2CH, 20H, 67H, 6FH
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x67 0x6F    
   \       0x10   0x74 0x20          DC8 74H, 20H, 25H, 64H, 20H, 63H, 69H, 70H
   \              0x25 0x64    
   \              0x20 0x63    
   \              0x69 0x70    
   \       0x18   0x68 0x65          DC8 68H, 65H, 72H, 73H, 75H, 69H, 74H, 65H
   \              0x72 0x73    
   \              0x75 0x69    
   \              0x74 0x65    
   \       0x20   0x73 0x20          DC8 73H, 20H, 28H, 65H, 78H, 63H, 6CH, 75H
   \              0x28 0x65    
   \              0x78 0x63    
   \              0x6C 0x75    
   \       0x28   0x64 0x69          DC8 64H, 69H, 6EH, 67H, 20H, 53H, 43H, 53H
   \              0x6E 0x67    
   \              0x20 0x53    
   \              0x43 0x53    
   \       0x30   0x56 0x73          DC8 56H, 73H, 29H, 0
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x61 0x64          DC8 "adding EMPTY_RENEGOTIATION_INFO_SCSV"
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x45    
   \              0x4D 0x50    
   \              0x54 0x59    
   \              0x5F 0x52    
   \              0x45 0x4E    
   \              0x45 0x47    
   \              0x4F 0x54    
   \              0x49 0x41    
   \              0x54 0x49    
   \              0x4F 0x4E    
   \              0x5F 0x49    
   \              0x4E 0x46    
   \              0x4F 0x5F    
   \              0x53 0x43    
   \              0x53 0x56    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x61 0x64          DC8 "adding FALLBACK_SCSV"
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x46    
   \              0x41 0x4C    
   \              0x4C 0x42    
   \              0x41 0x43    
   \              0x4B 0x5F    
   \              0x53 0x43    
   \              0x53 0x56    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x63 0x6C          DC8 "client hello, compress len.: %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x63 0x6C          DC8 "client hello, compress alg.: %d %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x61    
   \              0x6C 0x67    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x63 0x6C          DC8 "client hello, compress alg.: %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x61    
   \              0x6C 0x67    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x63 0x6C          DC8 "client hello, total extension length: %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x74 0x6F    
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x29   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ssl_write_handshake_msg"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x5F    
   \              0x68 0x61    
   \              0x6E 0x64    
   \              0x73 0x68    
   \              0x61 0x6B    
   \              0x65 0x5F    
   \              0x6D 0x73    
   \              0x67 0x00    

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ssl_flight_transmit"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x66 0x6C    
   \              0x69 0x67    
   \              0x68 0x74    
   \              0x5F 0x74    
   \              0x72 0x61    
   \              0x6E 0x73    
   \              0x6D 0x69    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x3C 0x3D          DC8 "<= write client hello"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x6C 0x69    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x6E 0x6F          DC8 "non-matching renegotiation info"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x72    
   \              0x65 0x6E    
   \              0x65 0x67    
   \              0x6F 0x74    
   \              0x69 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x6E 0x6F          DC8 "non-zero length renegotiation info"
   \              0x6E 0x2D    
   \              0x7A 0x65    
   \              0x72 0x6F    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x72 0x65    
   \              0x6E 0x65    
   \              0x67 0x6F    
   \              0x74 0x69    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x6E 0x6F          DC8 "non-matching max fragment length extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x6D    
   \              0x61 0x78    
   \              0x20 0x66    
   \              0x72 0x61    
   \              0x67 0x6D    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x2B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x6E 0x6F          DC8 "non-matching truncated HMAC extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x74    
   \              0x72 0x75    
   \              0x6E 0x63    
   \              0x61 0x74    
   \              0x65 0x64    
   \              0x20 0x48    
   \              0x4D 0x41    
   \              0x43 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x26   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x6E 0x6F          DC8 "non-matching encrypt-then-MAC extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x65    
   \              0x6E 0x63    
   \              0x72 0x79    
   \              0x70 0x74    
   \              0x2D 0x74    
   \              0x68 0x65    
   \              0x6E 0x2D    
   \              0x4D 0x41    
   \              0x43 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x6E 0x6F          DC8 "non-matching extended master secret extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x64 0x65    
   \              0x64 0x20    
   \              0x6D 0x61    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x73    
   \              0x65 0x63    
   \              0x72 0x65    
   \              0x74 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x6E 0x6F          DC8 "non-matching session ticket extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x69 0x63    
   \              0x6B 0x65    
   \              0x74 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x26   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x62 0x61          DC8 "bad server hello message"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x6D    
   \              0x65 0x73    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x70 0x6F          DC8 "point format selected: %d"
   \              0x69 0x6E    
   \              0x74 0x20    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x61 0x74    
   \              0x20 0x73    
   \              0x65 0x6C    
   \              0x65 0x63    
   \              0x74 0x65    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x6E 0x6F          DC8 "no point format in common"
   \              0x20 0x70    
   \              0x6F 0x69    
   \              0x6E 0x74    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x6D 0x61    
   \              0x74 0x20    
   \              0x69 0x6E    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x6F    
   \              0x6E 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x6E 0x6F          DC8 "non-matching ALPN extension"
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x69    
   \              0x6E 0x67    
   \              0x20 0x41    
   \              0x4C 0x50    
   \              0x4E 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x41 0x4C          DC8 "ALPN extension: no matching protocol"
   \              0x50 0x4E    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x6E 0x6F    
   \              0x20 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x70 0x72    
   \              0x6F 0x74    
   \              0x6F 0x63    
   \              0x6F 0x6C    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x3D 0x3E          DC8 "=> parse hello verify request"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x73 0x65          DC8 "server version"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x62 0x61          DC8 "bad server version"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x63 0x6F          DC8 "cookie"
   \              0x6F 0x6B    
   \              0x69 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x63 0x6F          DC8 63H, 6FH, 6FH, 6BH, 69H, 65H, 20H, 6CH
   \              0x6F 0x6B    
   \              0x69 0x65    
   \              0x20 0x6C    
   \        0x8   0x65 0x6E          DC8 65H, 6EH, 67H, 74H, 68H, 20H, 64H, 6FH
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x64 0x6F    
   \       0x10   0x65 0x73          DC8 65H, 73H, 20H, 6EH, 6FH, 74H, 20H, 6DH
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x6D    
   \       0x18   0x61 0x74          DC8 61H, 74H, 63H, 68H, 20H, 69H, 6EH, 63H
   \              0x63 0x68    
   \              0x20 0x69    
   \              0x6E 0x63    
   \       0x20   0x6F 0x6D          DC8 6FH, 6DH, 69H, 6EH, 67H, 20H, 6DH, 65H
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x65    
   \       0x28   0x73 0x73          DC8 73H, 73H, 61H, 67H, 65H, 20H, 73H, 69H
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x73 0x69    
   \       0x30   0x7A 0x65          DC8 7AH, 65H, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x61 0x6C          DC8 "alloc failed (%d bytes)"
   \              0x6C 0x6F    
   \              0x63 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x20 0x28    
   \              0x25 0x64    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x3C 0x3D          DC8 "<= parse hello verify request"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x3D 0x3E          DC8 "=> parse server hello"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ssl_read_record"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x5F 0x72    
   \              0x65 0x63    
   \              0x6F 0x72    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x72 0x65          DC8 72H, 65H, 6EH, 65H, 67H, 6FH, 74H, 69H
   \              0x6E 0x65    
   \              0x67 0x6F    
   \              0x74 0x69    
   \        0x8   0x61 0x74          DC8 61H, 74H, 69H, 6FH, 6EH, 20H, 72H, 65H
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x72 0x65    
   \       0x10   0x71 0x75          DC8 71H, 75H, 65H, 73H, 74H, 65H, 64H, 2CH
   \              0x65 0x73    
   \              0x74 0x65    
   \              0x64 0x2C    
   \       0x18   0x20 0x62          DC8 20H, 62H, 75H, 74H, 20H, 6EH, 6FH, 74H
   \              0x75 0x74    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \       0x20   0x20 0x68          DC8 20H, 68H, 6FH, 6EH, 6FH, 72H, 65H, 64H
   \              0x6F 0x6E    
   \              0x6F 0x72    
   \              0x65 0x64    
   \       0x28   0x20 0x62          DC8 20H, 62H, 79H, 20H, 73H, 65H, 72H, 76H
   \              0x79 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \       0x30   0x65 0x72          DC8 65H, 72H, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x6E 0x6F          DC8 "non-handshake message during renego"
   \              0x6E 0x2D    
   \              0x68 0x61    
   \              0x6E 0x64    
   \              0x73 0x68    
   \              0x61 0x6B    
   \              0x65 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x64 0x75    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x72    
   \              0x65 0x6E    
   \              0x65 0x67    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x72 0x65          DC8 "received hello verify request"
   \              0x63 0x65    
   \              0x69 0x76    
   \              0x65 0x64    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x3C 0x3D          DC8 "<= parse server hello"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x73 0x65          DC8 "server hello, version"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x73 0x65          DC8 73H, 65H, 72H, 76H, 65H, 72H, 20H, 76H
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x76    
   \        0x8   0x65 0x72          DC8 65H, 72H, 73H, 69H, 6FH, 6EH, 20H, 6FH
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6F    
   \       0x10   0x75 0x74          DC8 75H, 74H, 20H, 6FH, 66H, 20H, 62H, 6FH
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x62 0x6F    
   \       0x18   0x75 0x6E          DC8 75H, 6EH, 64H, 73H, 20H, 2DH, 20H, 20H
   \              0x64 0x73    
   \              0x20 0x2D    
   \              0x20 0x20    
   \       0x20   0x6D 0x69          DC8 6DH, 69H, 6EH, 3AH, 20H, 5BH, 25H, 64H
   \              0x6E 0x3A    
   \              0x20 0x5B    
   \              0x25 0x64    
   \       0x28   0x3A 0x25          DC8 3AH, 25H, 64H, 5DH, 2CH, 20H, 73H, 65H
   \              0x64 0x5D    
   \              0x2C 0x20    
   \              0x73 0x65    
   \       0x30   0x72 0x76          DC8 72H, 76H, 65H, 72H, 3AH, 20H, 5BH, 25H
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x5B 0x25    
   \       0x38   0x64 0x3A          DC8 64H, 3AH, 25H, 64H, 5DH, 2CH, 20H, 6DH
   \              0x25 0x64    
   \              0x5D 0x2C    
   \              0x20 0x6D    
   \       0x40   0x61 0x78          DC8 61H, 78H, 3AH, 20H, 5BH, 25H, 64H, 3AH
   \              0x3A 0x20    
   \              0x5B 0x25    
   \              0x64 0x3A    
   \       0x48   0x25 0x64          DC8 25H, 64H, 5DH, 0
   \              0x5D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x73 0x65          DC8 "server hello, current time: %lu"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x75    
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x3A 0x20    
   \              0x25 0x6C    
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x73 0x65          DC8 "server hello, random bytes"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x72 0x61    
   \              0x6E 0x64    
   \              0x6F 0x6D    
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x73 0x65          DC8 "server hello, bad compression: %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x62 0x61    
   \              0x64 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x63 0x69          DC8 "ciphersuite info for %04x not found"
   \              0x70 0x68    
   \              0x65 0x72    
   \              0x73 0x75    
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x30 0x34    
   \              0x78 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x73 0x65          DC8 "server hello, session id len.: %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x73 0x65          DC8 "server hello, session id"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ssl_derive_keys"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x64 0x65    
   \              0x72 0x69    
   \              0x76 0x65    
   \              0x5F 0x6B    
   \              0x65 0x79    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x25 0x73          DC8 "%s session has been resumed"
   \              0x20 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x68    
   \              0x61 0x73    
   \              0x20 0x62    
   \              0x65 0x65    
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 2
   \        0x0   0x61 0x00          DC8 "a"

   \                                 In section .rodata, align 4
   \        0x0   0x6E 0x6F          DC8 "no"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x73 0x65          DC8 "server hello, chosen ciphersuite: %04x"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x68    
   \              0x6F 0x73    
   \              0x65 0x6E    
   \              0x20 0x63    
   \              0x69 0x70    
   \              0x68 0x65    
   \              0x72 0x73    
   \              0x75 0x69    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x25 0x30    
   \              0x34 0x78    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x73 0x65          DC8 "server hello, compress alg.: %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x6F    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x61    
   \              0x6C 0x67    
   \              0x2E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_75:
   \        0x0   0x73 0x65          DC8 "server hello, chosen ciphersuite: %s"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x63 0x68    
   \              0x6F 0x73    
   \              0x65 0x6E    
   \              0x20 0x63    
   \              0x69 0x70    
   \              0x68 0x65    
   \              0x72 0x73    
   \              0x75 0x69    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0x73 0x65          DC8 "server hello, total extension length: %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x2C 0x20    
   \              0x74 0x6F    
   \              0x74 0x61    
   \              0x6C 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x29   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x66 0x6F          DC8 "found renegotiation extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x72 0x65    
   \              0x6E 0x65    
   \              0x67 0x6F    
   \              0x74 0x69    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x66 0x6F          DC8 "found max_fragment_length extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x6D 0x61    
   \              0x78 0x5F    
   \              0x66 0x72    
   \              0x61 0x67    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x5F 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x66 0x6F          DC8 "found truncated_hmac extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x74 0x72    
   \              0x75 0x6E    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x64 0x5F    
   \              0x68 0x6D    
   \              0x61 0x63    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x66 0x6F          DC8 "found encrypt_then_mac extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x65 0x6E    
   \              0x63 0x72    
   \              0x79 0x70    
   \              0x74 0x5F    
   \              0x74 0x68    
   \              0x65 0x6E    
   \              0x5F 0x6D    
   \              0x61 0x63    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x66 0x6F          DC8 "found extended_master_secret extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x5F 0x6D    
   \              0x61 0x73    
   \              0x74 0x65    
   \              0x72 0x5F    
   \              0x73 0x65    
   \              0x63 0x72    
   \              0x65 0x74    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x66 0x6F          DC8 "found session_ticket extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x74 0x69    
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x66 0x6F          DC8 "found supported_point_formats extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x5F    
   \              0x70 0x6F    
   \              0x69 0x6E    
   \              0x74 0x5F    
   \              0x66 0x6F    
   \              0x72 0x6D    
   \              0x61 0x74    
   \              0x73 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x66 0x6F          DC8 "found alpn extension"
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x61 0x6C    
   \              0x70 0x6E    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_85:
   \        0x0   0x75 0x6E          DC8 "unknown extension found: %d (ignoring)"
   \              0x6B 0x6E    
   \              0x6F 0x77    
   \              0x6E 0x20    
   \              0x65 0x78    
   \              0x74 0x65    
   \              0x6E 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x28 0x69    
   \              0x67 0x6E    
   \              0x6F 0x72    
   \              0x69 0x6E    
   \              0x67 0x29    
   \              0x00         
   \       0x27   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_86:
   \        0x0   0x6C 0x65          DC8 "legacy renegotiation, breaking off handshake"
   \              0x67 0x61    
   \              0x63 0x79    
   \              0x20 0x72    
   \              0x65 0x6E    
   \              0x65 0x67    
   \              0x6F 0x74    
   \              0x69 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x2C 0x20    
   \              0x62 0x72    
   \              0x65 0x61    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \              0x20 0x6F    
   \              0x66 0x66    
   \              0x20 0x68    
   \              0x61 0x6E    
   \              0x64 0x73    
   \              0x68 0x61    
   \              0x6B 0x65    
   \              0x00         
   \       0x2D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_87:
   \        0x0   0x72 0x65          DC8 "renegotiation_info extension missing (secure)"
   \              0x6E 0x65    
   \              0x67 0x6F    
   \              0x74 0x69    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6D    
   \              0x69 0x73    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x28    
   \              0x73 0x65    
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x29 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_88:
   \        0x0   0x6C 0x65          DC8 "legacy renegotiation not allowed"
   \              0x67 0x61    
   \              0x63 0x79    
   \              0x20 0x72    
   \              0x65 0x6E    
   \              0x65 0x67    
   \              0x6F 0x74    
   \              0x69 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x61    
   \              0x6C 0x6C    
   \              0x6F 0x77    
   \              0x65 0x64    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_89:
   \        0x0   0x72 0x65          DC8 "renegotiation_info extension present (legacy)"
   \              0x6E 0x65    
   \              0x67 0x6F    
   \              0x74 0x69    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x5F    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x65 0x6E    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x73 0x65    
   \              0x6E 0x74    
   \              0x20 0x28    
   \              0x6C 0x65    
   \              0x67 0x61    
   \              0x63 0x79    
   \              0x29 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_90:
   \        0x0   0x6D 0x62          DC8 "mbedtls_dhm_read_params"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x64 0x68    
   \              0x6D 0x5F    
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x5F 0x70    
   \              0x61 0x72    
   \              0x61 0x6D    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_91:
   \        0x0   0x44 0x48          DC8 "DHM prime too short: %d < %d"
   \              0x4D 0x20    
   \              0x70 0x72    
   \              0x69 0x6D    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x6F 0x20    
   \              0x73 0x68    
   \              0x6F 0x72    
   \              0x74 0x3A    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x3C 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_92:
   \        0x0   0x44 0x48          DC8 "DHM: P "
   \              0x4D 0x3A    
   \              0x20 0x50    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_93:
   \        0x0   0x44 0x48          DC8 "DHM: G "
   \              0x4D 0x3A    
   \              0x20 0x47    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_94:
   \        0x0   0x44 0x48          DC8 "DHM: GY"
   \              0x4D 0x3A    
   \              0x20 0x47    
   \              0x59 0x00    

   \                                 In section .rodata, align 4
   \                     ?_95:
   \        0x0   0x73 0x68          DC8 "should never happen"
   \              0x6F 0x75    
   \              0x6C 0x64    
   \              0x20 0x6E    
   \              0x65 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x61 0x70    
   \              0x70 0x65    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_96:
   \        0x0   0x45 0x43          DC8 "ECDH curve: %s"
   \              0x44 0x48    
   \              0x20 0x63    
   \              0x75 0x72    
   \              0x76 0x65    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_97:
   \        0x0   0x45 0x43          DC8 "ECDH: Qp"
   \              0x44 0x48    
   \              0x3A 0x20    
   \              0x51 0x70    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_98:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ecdh_read_params"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x65 0x63    
   \              0x64 0x68    
   \              0x5F 0x72    
   \              0x65 0x61    
   \              0x64 0x5F    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x73    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_99:
   \        0x0   0x62 0x61          DC8 "bad server key exchange message (ECDHE curve)"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x28 0x45    
   \              0x43 0x44    
   \              0x48 0x45    
   \              0x20 0x63    
   \              0x75 0x72    
   \              0x76 0x65    
   \              0x29 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_100:
   \        0x0   0x62 0x61          DC8 62H, 61H, 64H, 20H, 73H, 65H, 72H, 76H
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \        0x8   0x65 0x72          DC8 65H, 72H, 20H, 6BH, 65H, 79H, 20H, 65H
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \       0x10   0x78 0x63          DC8 78H, 63H, 68H, 61H, 6EH, 67H, 65H, 20H
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \       0x18   0x6D 0x65          DC8 6DH, 65H, 73H, 73H, 61H, 67H, 65H, 20H
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x20    
   \       0x20   0x28 0x70          DC8 28H, 70H, 73H, 6BH, 5FH, 69H, 64H, 65H
   \              0x73 0x6B    
   \              0x5F 0x69    
   \              0x64 0x65    
   \       0x28   0x6E 0x74          DC8 6EH, 74H, 69H, 74H, 79H, 5FH, 68H, 69H
   \              0x69 0x74    
   \              0x79 0x5F    
   \              0x68 0x69    
   \       0x30   0x6E 0x74          DC8 6EH, 74H, 20H, 6CH, 65H, 6EH, 67H, 74H
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \       0x38   0x68 0x29          DC8 68H, 29H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_101:
   \        0x0   0x62 0x75          DC8 "buffer too small for encrypted pms"
   \              0x66 0x66    
   \              0x65 0x72    
   \              0x20 0x74    
   \              0x6F 0x6F    
   \              0x20 0x73    
   \              0x6D 0x61    
   \              0x6C 0x6C    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x65    
   \              0x6E 0x63    
   \              0x72 0x79    
   \              0x70 0x74    
   \              0x65 0x64    
   \              0x20 0x70    
   \              0x6D 0x73    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_102:
   \        0x0   0x66 0x5F          DC8 "f_rng"
   \              0x72 0x6E    
   \              0x67 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_103:
   \        0x0   0x63 0x65          DC8 "certificate required"
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_104:
   \        0x0   0x63 0x65          DC8 "certificate key type mismatch"
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x20 0x6D    
   \              0x69 0x73    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_105:
   \        0x0   0x6D 0x62          DC8 "mbedtls_rsa_pkcs1_encrypt"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x72 0x73    
   \              0x61 0x5F    
   \              0x70 0x6B    
   \              0x63 0x73    
   \              0x31 0x5F    
   \              0x65 0x6E    
   \              0x63 0x72    
   \              0x79 0x70    
   \              0x74 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_106:
   \        0x0   0x53 0x65          DC8 "Server used unsupported HashAlgorithm %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x75 0x6E    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x48 0x61    
   \              0x73 0x68    
   \              0x41 0x6C    
   \              0x67 0x6F    
   \              0x72 0x69    
   \              0x74 0x68    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x29   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_107:
   \        0x0   0x73 0x65          DC8 "server used unsupported SignatureAlgorithm %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x75 0x6E    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x53 0x69    
   \              0x67 0x6E    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x41    
   \              0x6C 0x67    
   \              0x6F 0x72    
   \              0x69 0x74    
   \              0x68 0x6D    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_108:
   \        0x0   0x73 0x65          DC8 "server used HashAlgorithm %d that was not offered"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x48 0x61    
   \              0x73 0x68    
   \              0x41 0x6C    
   \              0x67 0x6F    
   \              0x72 0x69    
   \              0x74 0x68    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x20 0x74    
   \              0x68 0x61    
   \              0x74 0x20    
   \              0x77 0x61    
   \              0x73 0x20    
   \              0x6E 0x6F    
   \              0x74 0x20    
   \              0x6F 0x66    
   \              0x66 0x65    
   \              0x72 0x65    
   \              0x64 0x00    
   \       0x32   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_109:
   \        0x0   0x53 0x65          DC8 "Server used SignatureAlgorithm %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x53 0x69    
   \              0x67 0x6E    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x41    
   \              0x6C 0x67    
   \              0x6F 0x72    
   \              0x69 0x74    
   \              0x68 0x6D    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_110:
   \        0x0   0x53 0x65          DC8 "Server used HashAlgorithm %d"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x48 0x61    
   \              0x73 0x68    
   \              0x41 0x6C    
   \              0x67 0x6F    
   \              0x72 0x69    
   \              0x74 0x68    
   \              0x6D 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_111:
   \        0x0   0x73 0x65          DC8 "server key not ECDH capable"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x45    
   \              0x43 0x44    
   \              0x48 0x20    
   \              0x63 0x61    
   \              0x70 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_112:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ecdh_get_params"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x65 0x63    
   \              0x64 0x68    
   \              0x5F 0x67    
   \              0x65 0x74    
   \              0x5F 0x70    
   \              0x61 0x72    
   \              0x61 0x6D    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_113:
   \        0x0   0x62 0x61          DC8 "bad server certificate (ECDH curve)"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x28    
   \              0x45 0x43    
   \              0x44 0x48    
   \              0x20 0x63    
   \              0x75 0x72    
   \              0x76 0x65    
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     ?_114:
   \        0x0   0x3D 0x3E          DC8 "=> parse server key exchange"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x65 0x78    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_115:
   \        0x0   0x3C 0x3D          DC8 "<= skip parse server key exchange"
   \              0x20 0x73    
   \              0x6B 0x69    
   \              0x70 0x20    
   \              0x70 0x61    
   \              0x72 0x73    
   \              0x65 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_116:
   \        0x0   0x73 0x73          DC8 "ssl_get_ecdh_params_from_cert"
   \              0x6C 0x5F    
   \              0x67 0x65    
   \              0x74 0x5F    
   \              0x65 0x63    
   \              0x64 0x68    
   \              0x5F 0x70    
   \              0x61 0x72    
   \              0x61 0x6D    
   \              0x73 0x5F    
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x5F 0x63    
   \              0x65 0x72    
   \              0x74 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_117:
   \        0x0   0x62 0x61          DC8 "bad server key exchange message"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_118:
   \        0x0   0x73 0x65          DC8 "server key exchange message must not be skipped"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x6E    
   \              0x6F 0x74    
   \              0x20 0x62    
   \              0x65 0x20    
   \              0x73 0x6B    
   \              0x69 0x70    
   \              0x70 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_119:
   \        0x0   0x73 0x65          DC8 "server key exchange"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_120:
   \        0x0   0x73 0x69          DC8 "signature"
   \              0x67 0x6E    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_121:
   \        0x0   0x70 0x61          DC8 "parameters hash"
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x20 0x68    
   \              0x61 0x73    
   \              0x68 0x00    

   \                                 In section .rodata, align 4
   \                     ?_122:
   \        0x0   0x6D 0x62          DC8 "mbedtls_pk_verify"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x70 0x6B    
   \              0x5F 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_123:
   \        0x0   0x3C 0x3D          DC8 "<= parse server key exchange"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x65 0x78    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_124:
   \        0x0   0x3D 0x3E          DC8 "=> parse certificate request"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_125:
   \        0x0   0x3C 0x3D          DC8 "<= skip parse certificate request"
   \              0x20 0x73    
   \              0x6B 0x69    
   \              0x70 0x20    
   \              0x70 0x61    
   \              0x72 0x73    
   \              0x65 0x20    
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_126:
   \        0x0   0x62 0x61          DC8 "bad certificate request message"
   \              0x64 0x20    
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_127:
   \        0x0   0x67 0x6F          DC8 "got %s certificate request"
   \              0x74 0x20    
   \              0x25 0x73    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_128:
   \        0x0   0x53 0x75          DC8 "Supported Signature Algorithm found: %d,%d"
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x65    
   \              0x64 0x20    
   \              0x53 0x69    
   \              0x67 0x6E    
   \              0x61 0x74    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x41 0x6C    
   \              0x67 0x6F    
   \              0x72 0x69    
   \              0x74 0x68    
   \              0x6D 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x25 0x64    
   \              0x00         
   \       0x2B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_129:
   \        0x0   0x3C 0x3D          DC8 "<= parse certificate request"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_130:
   \        0x0   0x3D 0x3E          DC8 "=> parse server hello done"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x20    
   \              0x64 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_131:
   \        0x0   0x62 0x61          DC8 "bad server hello done message"
   \              0x64 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x68    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x64    
   \              0x6F 0x6E    
   \              0x65 0x20    
   \              0x6D 0x65    
   \              0x73 0x73    
   \              0x61 0x67    
   \              0x65 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_132:
   \        0x0   0x3C 0x3D          DC8 "<= parse server hello done"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x68 0x65    
   \              0x6C 0x6C    
   \              0x6F 0x20    
   \              0x64 0x6F    
   \              0x6E 0x65    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_133:
   \        0x0   0x3D 0x3E          DC8 "=> write client key exchange"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x6C 0x69    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x65 0x78    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_134:
   \        0x0   0x6D 0x62          DC8 "mbedtls_dhm_make_public"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x64 0x68    
   \              0x6D 0x5F    
   \              0x6D 0x61    
   \              0x6B 0x65    
   \              0x5F 0x70    
   \              0x75 0x62    
   \              0x6C 0x69    
   \              0x63 0x00    

   \                                 In section .rodata, align 4
   \                     ?_135:
   \        0x0   0x44 0x48          DC8 "DHM: X "
   \              0x4D 0x3A    
   \              0x20 0x58    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_136:
   \        0x0   0x44 0x48          DC8 "DHM: GX"
   \              0x4D 0x3A    
   \              0x20 0x47    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_137:
   \        0x0   0x6D 0x62          DC8 "mbedtls_dhm_calc_secret"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x64 0x68    
   \              0x6D 0x5F    
   \              0x63 0x61    
   \              0x6C 0x63    
   \              0x5F 0x73    
   \              0x65 0x63    
   \              0x72 0x65    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_138:
   \        0x0   0x44 0x48          DC8 "DHM: K "
   \              0x4D 0x3A    
   \              0x20 0x4B    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_139:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ecdh_make_public"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x65 0x63    
   \              0x64 0x68    
   \              0x5F 0x6D    
   \              0x61 0x6B    
   \              0x65 0x5F    
   \              0x70 0x75    
   \              0x62 0x6C    
   \              0x69 0x63    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_140:
   \        0x0   0x45 0x43          DC8 "ECDH: Q"
   \              0x44 0x48    
   \              0x3A 0x20    
   \              0x51 0x00    

   \                                 In section .rodata, align 4
   \                     ?_141:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ecdh_calc_secret"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x65 0x63    
   \              0x64 0x68    
   \              0x5F 0x63    
   \              0x61 0x6C    
   \              0x63 0x5F    
   \              0x73 0x65    
   \              0x63 0x72    
   \              0x65 0x74    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_142:
   \        0x0   0x45 0x43          DC8 "ECDH: z"
   \              0x44 0x48    
   \              0x3A 0x20    
   \              0x7A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_143:
   \        0x0   0x67 0x6F          DC8 "got no private key for PSK"
   \              0x74 0x20    
   \              0x6E 0x6F    
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x76 0x61    
   \              0x74 0x65    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x50    
   \              0x53 0x4B    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_144:
   \        0x0   0x70 0x73          DC8 "psk identity too long or SSL buffer too short"
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x74 0x79    
   \              0x20 0x74    
   \              0x6F 0x6F    
   \              0x20 0x6C    
   \              0x6F 0x6E    
   \              0x67 0x20    
   \              0x6F 0x72    
   \              0x20 0x53    
   \              0x53 0x4C    
   \              0x20 0x62    
   \              0x75 0x66    
   \              0x66 0x65    
   \              0x72 0x20    
   \              0x74 0x6F    
   \              0x6F 0x20    
   \              0x73 0x68    
   \              0x6F 0x72    
   \              0x74 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_145:
   \        0x0   0x70 0x73          DC8 70H, 73H, 6BH, 20H, 69H, 64H, 65H, 6EH
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x65 0x6E    
   \        0x8   0x74 0x69          DC8 74H, 69H, 74H, 79H, 20H, 6FH, 72H, 20H
   \              0x74 0x79    
   \              0x20 0x6F    
   \              0x72 0x20    
   \       0x10   0x44 0x48          DC8 44H, 48H, 4DH, 20H, 73H, 69H, 7AH, 65H
   \              0x4D 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \       0x18   0x20 0x74          DC8 20H, 74H, 6FH, 6FH, 20H, 6CH, 6FH, 6EH
   \              0x6F 0x6F    
   \              0x20 0x6C    
   \              0x6F 0x6E    
   \       0x20   0x67 0x20          DC8 67H, 20H, 6FH, 72H, 20H, 53H, 53H, 4CH
   \              0x6F 0x72    
   \              0x20 0x53    
   \              0x53 0x4C    
   \       0x28   0x20 0x62          DC8 20H, 62H, 75H, 66H, 66H, 65H, 72H, 20H
   \              0x75 0x66    
   \              0x66 0x65    
   \              0x72 0x20    
   \       0x30   0x74 0x6F          DC8 74H, 6FH, 6FH, 20H, 73H, 68H, 6FH, 72H
   \              0x6F 0x20    
   \              0x73 0x68    
   \              0x6F 0x72    
   \       0x38   0x74 0x00          DC8 74H, 0
   \       0x3A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_146:
   \        0x0   0x6D 0x62          DC8 "mbedtls_ssl_psk_derive_premaster"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x73 0x73    
   \              0x6C 0x5F    
   \              0x70 0x73    
   \              0x6B 0x5F    
   \              0x64 0x65    
   \              0x72 0x69    
   \              0x76 0x65    
   \              0x5F 0x70    
   \              0x72 0x65    
   \              0x6D 0x61    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_147:
   \        0x0   0x3C 0x3D          DC8 "<= write client key exchange"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x6C 0x69    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x65 0x78    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_148:
   \        0x0   0x3D 0x3E          DC8 "=> write certificate verify"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_149:
   \        0x0   0x3C 0x3D          DC8 "<= skip write certificate verify"
   \              0x20 0x73    
   \              0x6B 0x69    
   \              0x70 0x20    
   \              0x77 0x72    
   \              0x69 0x74    
   \              0x65 0x20    
   \              0x63 0x65    
   \              0x72 0x74    
   \              0x69 0x66    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x76 0x65    
   \              0x72 0x69    
   \              0x66 0x79    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_150:
   \        0x0   0x67 0x6F          DC8 "got no private key for certificate"
   \              0x74 0x20    
   \              0x6E 0x6F    
   \              0x20 0x70    
   \              0x72 0x69    
   \              0x76 0x61    
   \              0x74 0x65    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_151:
   \        0x0   0x6D 0x62          DC8 "mbedtls_pk_sign"
   \              0x65 0x64    
   \              0x74 0x6C    
   \              0x73 0x5F    
   \              0x70 0x6B    
   \              0x5F 0x73    
   \              0x69 0x67    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_152:
   \        0x0   0x3C 0x3D          DC8 "<= write certificate verify"
   \              0x20 0x77    
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x20 0x63    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x66 0x69    
   \              0x63 0x61    
   \              0x74 0x65    
   \              0x20 0x76    
   \              0x65 0x72    
   \              0x69 0x66    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_153:
   \        0x0   0x3D 0x3E          DC8 "=> parse new session ticket"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x6E    
   \              0x65 0x77    
   \              0x20 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x69 0x63    
   \              0x6B 0x65    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_154:
   \        0x0   0x62 0x61          DC8 "bad new session ticket message"
   \              0x64 0x20    
   \              0x6E 0x65    
   \              0x77 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x74 0x69    
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x6D    
   \              0x65 0x73    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_155:
   \        0x0   0x74 0x69          DC8 "ticket length: %d"
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x6C    
   \              0x65 0x6E    
   \              0x67 0x74    
   \              0x68 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_156:
   \        0x0   0x74 0x69          DC8 "ticket alloc failed"
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x61    
   \              0x6C 0x6C    
   \              0x6F 0x63    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_157:
   \        0x0   0x74 0x69          DC8 "ticket in use, discarding session id"
   \              0x63 0x6B    
   \              0x65 0x74    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x75 0x73    
   \              0x65 0x2C    
   \              0x20 0x64    
   \              0x69 0x73    
   \              0x63 0x61    
   \              0x72 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x73 0x65    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_158:
   \        0x0   0x3C 0x3D          DC8 "<= parse new session ticket"
   \              0x20 0x70    
   \              0x61 0x72    
   \              0x73 0x65    
   \              0x20 0x6E    
   \              0x65 0x77    
   \              0x20 0x73    
   \              0x65 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x69 0x63    
   \              0x6B 0x65    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_159:
   \        0x0   0x63 0x6C          DC8 "client state: %d"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x65    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_160:
   \        0x0   0x68 0x61          DC8 "handshake: done"
   \              0x6E 0x64    
   \              0x73 0x68    
   \              0x61 0x6B    
   \              0x65 0x3A    
   \              0x20 0x64    
   \              0x6F 0x6E    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_161:
   \        0x0   0x69 0x6E          DC8 "invalid state %d"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   3531          #endif /* MBEDTLS_SSL_CLI_C */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   mbedtls_pk_ec
       0   mbedtls_ssl_ciphersuite_cert_req_allowed
       0   mbedtls_ssl_ciphersuite_uses_server_signature
      24   mbedtls_ssl_handshake_client_step
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_ssl_flight_transmit
        24   -> mbedtls_ssl_flush_output
        24   -> mbedtls_ssl_handshake_wrapup
        24   -> mbedtls_ssl_parse_certificate
        24   -> mbedtls_ssl_parse_change_cipher_spec
        24   -> mbedtls_ssl_parse_finished
        24   -> mbedtls_ssl_write_certificate
        24   -> mbedtls_ssl_write_change_cipher_spec
        24   -> mbedtls_ssl_write_finished
        24   -> ssl_parse_certificate_request
        24   -> ssl_parse_new_session_ticket
        24   -> ssl_parse_server_hello
        24   -> ssl_parse_server_hello_done
        24   -> ssl_parse_server_key_exchange
        24   -> ssl_write_certificate_verify
        24   -> ssl_write_client_hello
        24   -> ssl_write_client_key_exchange
       0   mbedtls_ssl_hs_hdr_len
       0   mbedtls_ssl_own_cert
       0   mbedtls_ssl_own_key
      16   mbedtls_ssl_safer_memcmp
      24   ssl_check_server_ecdh_params
        24   -> mbedtls_debug_print_ecp
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_ecp_curve_info_from_grp_id
        24   -> mbedtls_ssl_check_curve
      16   ssl_generate_random
        16   -- Indirect call
      24   ssl_get_ecdh_params_from_cert
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_debug_print_ret
        24   -> mbedtls_ecdh_get_params
        24   -> mbedtls_pk_can_do
        24   -> mbedtls_pk_ec
        24   -> ssl_check_server_ecdh_params
      24   ssl_parse_alpn_ext
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_ssl_send_alert_message
        24   -> memcmp
        24   -> strlen
      48   ssl_parse_certificate_request
        48   -> mbedtls_debug_print_msg
        48   -> mbedtls_debug_print_ret
        48   -> mbedtls_ssl_ciphersuite_cert_req_allowed
        48   -> mbedtls_ssl_hs_hdr_len
        48   -> mbedtls_ssl_read_record
        48   -> mbedtls_ssl_send_alert_message
      16   ssl_parse_encrypt_then_mac_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
      16   ssl_parse_extended_ms_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
      40   ssl_parse_hello_verify_request
        40   -> __aeabi_memcpy
        40   -> mbedtls_calloc
        40   -> mbedtls_debug_print_buf
        40   -> mbedtls_debug_print_msg
        40   -> mbedtls_free
        40   -> mbedtls_ssl_hs_hdr_len
        40   -> mbedtls_ssl_read_version
        40   -> mbedtls_ssl_recv_flight_completed
        40   -> mbedtls_ssl_reset_checksum
        40   -> mbedtls_ssl_send_alert_message
      16   ssl_parse_max_fragment_length_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
      40   ssl_parse_new_session_ticket
        40   -> __aeabi_memcpy
        40   -> mbedtls_calloc
        40   -> mbedtls_debug_print_msg
        40   -> mbedtls_debug_print_ret
        40   -> mbedtls_free
        40   -> mbedtls_platform_zeroize
        40   -> mbedtls_ssl_hs_hdr_len
        40   -> mbedtls_ssl_read_record
        40   -> mbedtls_ssl_send_alert_message
      16   ssl_parse_renegotiation_info
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_safer_memcmp
        16   -> mbedtls_ssl_send_alert_message
      32   ssl_parse_server_dh_params
        32   -> mbedtls_debug_print_mpi
        32   -> mbedtls_debug_print_msg
        32   -> mbedtls_debug_print_ret
        32   -> mbedtls_dhm_read_params
      24   ssl_parse_server_ecdh_params
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_debug_print_ret
        24   -> mbedtls_ecdh_read_params
        24   -> ssl_check_server_ecdh_params
      64   ssl_parse_server_hello
        64   -> __aeabi_memcpy
        64   -> mbedtls_debug_print_buf
        64   -> mbedtls_debug_print_msg
        64   -> mbedtls_debug_print_ret
        64   -> mbedtls_free
        64   -> mbedtls_ssl_ciphersuite_from_id
        64   -> mbedtls_ssl_derive_keys
        64   -> mbedtls_ssl_hs_hdr_len
        64   -> mbedtls_ssl_optimize_checksum
        64   -> mbedtls_ssl_read_record
        64   -> mbedtls_ssl_read_version
        64   -> mbedtls_ssl_send_alert_message
        64   -> memcmp
        64   -> ssl_parse_alpn_ext
        64   -> ssl_parse_encrypt_then_mac_ext
        64   -> ssl_parse_extended_ms_ext
         0   -> ssl_parse_hello_verify_request
        64   -> ssl_parse_max_fragment_length_ext
        64   -> ssl_parse_renegotiation_info
        64   -> ssl_parse_session_ticket_ext
        64   -> ssl_parse_supported_point_formats_ext
        64   -> ssl_parse_truncated_hmac_ext
        64   -> ssl_validate_ciphersuite
      24   ssl_parse_server_hello_done
        24   -> mbedtls_debug_print_msg
        24   -> mbedtls_debug_print_ret
        24   -> mbedtls_ssl_hs_hdr_len
        24   -> mbedtls_ssl_read_record
        24   -> mbedtls_ssl_recv_flight_completed
        24   -> mbedtls_ssl_send_alert_message
     120   ssl_parse_server_key_exchange
       120   -> mbedtls_debug_print_buf
       120   -> mbedtls_debug_print_msg
       120   -> mbedtls_debug_print_ret
       120   -> mbedtls_pk_can_do
       120   -> mbedtls_pk_verify
       120   -> mbedtls_ssl_ciphersuite_uses_server_signature
       120   -> mbedtls_ssl_get_ciphersuite_sig_pk_alg
       120   -> mbedtls_ssl_get_key_exchange_md_ssl_tls
       120   -> mbedtls_ssl_get_key_exchange_md_tls1_2
       120   -> mbedtls_ssl_hs_hdr_len
       120   -> mbedtls_ssl_read_record
       120   -> mbedtls_ssl_send_alert_message
       120   -> ssl_get_ecdh_params_from_cert
       120   -> ssl_parse_server_dh_params
       120   -> ssl_parse_server_ecdh_params
       120   -> ssl_parse_server_psk_hint
       120   -> ssl_parse_signature_algorithm
      16   ssl_parse_server_psk_hint
        16   -> mbedtls_debug_print_msg
      16   ssl_parse_session_ticket_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
      32   ssl_parse_signature_algorithm
        32   -> mbedtls_debug_print_msg
        32   -> mbedtls_ssl_check_sig_hash
        32   -> mbedtls_ssl_md_alg_from_hash
        32   -> mbedtls_ssl_pk_alg_from_sig
      16   ssl_parse_supported_point_formats_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
      16   ssl_parse_truncated_hmac_ext
        16   -> mbedtls_debug_print_msg
        16   -> mbedtls_ssl_send_alert_message
       4   ssl_validate_ciphersuite
      40   ssl_write_alpn_ext
        40   -> __aeabi_memcpy
        40   -> mbedtls_debug_print_msg
        40   -> strlen
     104   ssl_write_certificate_verify
       104   -- Indirect call
       104   -> mbedtls_debug_print_msg
       104   -> mbedtls_debug_print_ret
       104   -> mbedtls_pk_can_do
       104   -> mbedtls_pk_sign
       104   -> mbedtls_ssl_derive_keys
       104   -> mbedtls_ssl_own_cert
       104   -> mbedtls_ssl_own_key
       104   -> mbedtls_ssl_sig_from_pk
       104   -> mbedtls_ssl_write_handshake_msg
      56   ssl_write_client_hello
        56   -- Indirect call
        56   -> __aeabi_memcpy
        56   -> mbedtls_debug_print_buf
        56   -> mbedtls_debug_print_msg
        56   -> mbedtls_debug_print_ret
        56   -> mbedtls_ssl_ciphersuite_from_id
        56   -> mbedtls_ssl_ciphersuite_uses_ec
        56   -> mbedtls_ssl_flight_transmit
        56   -> mbedtls_ssl_send_flight_completed
        56   -> mbedtls_ssl_write_handshake_msg
        56   -> mbedtls_ssl_write_version
        56   -> ssl_generate_random
        56   -> ssl_validate_ciphersuite
        56   -> ssl_write_alpn_ext
        56   -> ssl_write_encrypt_then_mac_ext
        56   -> ssl_write_extended_ms_ext
        56   -> ssl_write_hostname_ext
        56   -> ssl_write_max_fragment_length_ext
        56   -> ssl_write_renegotiation_ext
        56   -> ssl_write_session_ticket_ext
        56   -> ssl_write_signature_algorithms_ext
        56   -> ssl_write_supported_elliptic_curves_ext
        56   -> ssl_write_supported_point_formats_ext
        56   -> ssl_write_truncated_hmac_ext
      40   ssl_write_client_key_exchange
        40   -> __aeabi_memcpy
        40   -> mbedtls_debug_print_ecp
        40   -> mbedtls_debug_print_mpi
        40   -> mbedtls_debug_print_msg
        40   -> mbedtls_debug_print_ret
        40   -> mbedtls_dhm_calc_secret
        40   -> mbedtls_dhm_make_public
        40   -> mbedtls_ecdh_calc_secret
        40   -> mbedtls_ecdh_make_public
        40   -> mbedtls_mpi_size
        40   -> mbedtls_ssl_ciphersuite_uses_psk
        40   -> mbedtls_ssl_psk_derive_premaster
        40   -> mbedtls_ssl_write_handshake_msg
        40   -> ssl_write_encrypted_pms
      32   ssl_write_encrypt_then_mac_ext
        32   -> mbedtls_debug_print_msg
      48   ssl_write_encrypted_pms
        48   -- Indirect call
        48   -> mbedtls_debug_print_msg
        48   -> mbedtls_debug_print_ret
        48   -> mbedtls_pk_can_do
        48   -> mbedtls_pk_encrypt
        48   -> mbedtls_ssl_write_version
      32   ssl_write_extended_ms_ext
        32   -> mbedtls_debug_print_msg
      40   ssl_write_hostname_ext
        40   -> __aeabi_memcpy
        40   -> mbedtls_debug_print_msg
        40   -> strlen
      32   ssl_write_max_fragment_length_ext
        32   -> mbedtls_debug_print_msg
      32   ssl_write_renegotiation_ext
        32   -> __aeabi_memcpy
        32   -> mbedtls_debug_print_msg
      40   ssl_write_session_ticket_ext
        40   -> __aeabi_memcpy
        40   -> mbedtls_debug_print_msg
      40   ssl_write_signature_algorithms_ext
        40   -> mbedtls_debug_print_msg
        40   -> mbedtls_ssl_hash_from_md_alg
      40   ssl_write_supported_elliptic_curves_ext
        40   -> mbedtls_debug_print_msg
        40   -> mbedtls_ecp_curve_info_from_grp_id
      32   ssl_write_supported_point_formats_ext
        32   -> mbedtls_debug_print_msg
      32   ssl_write_truncated_hmac_ext
        32   -> mbedtls_debug_print_msg


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable13
       4  ??DataTable14
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable19
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_2
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_26
       4  ??DataTable21_27
       4  ??DataTable21_28
       4  ??DataTable21_29
       4  ??DataTable21_3
       4  ??DataTable21_30
       4  ??DataTable21_31
       4  ??DataTable21_32
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
       4  ??DataTable22
       4  ??DataTable22_1
       4  ??DataTable22_2
       4  ??DataTable22_3
       4  ??DataTable23
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_2
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable26_2
       4  ??DataTable26_3
       4  ??DataTable26_4
       4  ??DataTable26_5
       4  ??DataTable26_6
       4  ??DataTable26_7
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable27_4
       4  ??DataTable27_5
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_2
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable29_10
       4  ??DataTable29_11
       4  ??DataTable29_12
       4  ??DataTable29_13
       4  ??DataTable29_14
       4  ??DataTable29_15
       4  ??DataTable29_16
       4  ??DataTable29_17
       4  ??DataTable29_18
       4  ??DataTable29_2
       4  ??DataTable29_3
       4  ??DataTable29_4
       4  ??DataTable29_5
       4  ??DataTable29_6
       4  ??DataTable29_7
       4  ??DataTable29_8
       4  ??DataTable29_9
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable30_2
       4  ??DataTable30_3
       4  ??DataTable30_4
       4  ??DataTable30_5
       4  ??DataTable30_6
       4  ??DataTable30_7
       4  ??DataTable30_8
       4  ??DataTable30_9
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable31_2
       4  ??DataTable31_3
       4  ??DataTable31_4
       4  ??DataTable31_5
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_10
       4  ??DataTable32_11
       4  ??DataTable32_12
       4  ??DataTable32_13
       4  ??DataTable32_14
       4  ??DataTable32_15
       4  ??DataTable32_16
       4  ??DataTable32_17
       4  ??DataTable32_18
       4  ??DataTable32_19
       4  ??DataTable32_2
       4  ??DataTable32_20
       4  ??DataTable32_21
       4  ??DataTable32_22
       4  ??DataTable32_23
       4  ??DataTable32_24
       4  ??DataTable32_3
       4  ??DataTable32_4
       4  ??DataTable32_5
       4  ??DataTable32_6
       4  ??DataTable32_7
       4  ??DataTable32_8
       4  ??DataTable32_9
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable33_2
       4  ??DataTable33_3
       4  ??DataTable33_4
       4  ??DataTable33_5
       4  ??DataTable33_6
       4  ??DataTable33_7
       4  ??DataTable33_8
       4  ??DataTable33_9
       4  ??DataTable34
       4  ??DataTable34_1
       4  ??DataTable35
       4  ??DataTable35_1
       4  ??DataTable35_2
       4  ??DataTable35_3
       4  ??DataTable35_4
       4  ??DataTable35_5
       4  ??DataTable36
       4  ??DataTable36_1
       4  ??DataTable36_10
       4  ??DataTable36_11
       4  ??DataTable36_12
       4  ??DataTable36_13
       4  ??DataTable36_14
       4  ??DataTable36_15
       4  ??DataTable36_16
       4  ??DataTable36_17
       4  ??DataTable36_18
       4  ??DataTable36_19
       4  ??DataTable36_2
       4  ??DataTable36_20
       4  ??DataTable36_21
       4  ??DataTable36_22
       4  ??DataTable36_23
       4  ??DataTable36_24
       4  ??DataTable36_25
       4  ??DataTable36_26
       4  ??DataTable36_27
       4  ??DataTable36_28
       4  ??DataTable36_29
       4  ??DataTable36_3
       4  ??DataTable36_30
       4  ??DataTable36_31
       4  ??DataTable36_32
       4  ??DataTable36_33
       4  ??DataTable36_34
       4  ??DataTable36_35
       4  ??DataTable36_36
       4  ??DataTable36_37
       4  ??DataTable36_38
       4  ??DataTable36_39
       4  ??DataTable36_4
       4  ??DataTable36_40
       4  ??DataTable36_41
       4  ??DataTable36_42
       4  ??DataTable36_43
       4  ??DataTable36_44
       4  ??DataTable36_45
       4  ??DataTable36_46
       4  ??DataTable36_5
       4  ??DataTable36_6
       4  ??DataTable36_7
       4  ??DataTable36_8
       4  ??DataTable36_9
      68  ?_0
      48  ?_1
      48  ?_10
      60  ?_100
      36  ?_101
       8  ?_102
      24  ?_103
      32  ?_104
      28  ?_105
      44  ?_106
      48  ?_107
      52  ?_108
      36  ?_109
      56  ?_11
      32  ?_110
      28  ?_111
      24  ?_112
      36  ?_113
      32  ?_114
      36  ?_115
      32  ?_116
      32  ?_117
      48  ?_118
      20  ?_119
      48  ?_12
      12  ?_120
      16  ?_121
      20  ?_122
      32  ?_123
      32  ?_124
      36  ?_125
      32  ?_126
      28  ?_127
      44  ?_128
      32  ?_129
      36  ?_13
      28  ?_130
      32  ?_131
      28  ?_132
      32  ?_133
      24  ?_134
       8  ?_135
       8  ?_136
      24  ?_137
       8  ?_138
      28  ?_139
      36  ?_14
       8  ?_140
      28  ?_141
       8  ?_142
      28  ?_143
      48  ?_144
      60  ?_145
      36  ?_146
      32  ?_147
      28  ?_148
      36  ?_149
      24  ?_15
      36  ?_150
      16  ?_151
      28  ?_152
      28  ?_153
      32  ?_154
      20  ?_155
      20  ?_156
      40  ?_157
      28  ?_158
      20  ?_159
      16  ?_16
      16  ?_160
      20  ?_161
      88  ?_17
      36  ?_18
      20  ?_19
      20  ?_2
      28  ?_20
      36  ?_21
      28  ?_22
      28  ?_23
      24  ?_24
      36  ?_25
      52  ?_26
      40  ?_27
      24  ?_28
      32  ?_29
      48  ?_3
      36  ?_30
      32  ?_31
      44  ?_32
      32  ?_33
      28  ?_34
      24  ?_35
      32  ?_36
      36  ?_37
      44  ?_38
      40  ?_39
      52  ?_4
      40  ?_40
      48  ?_41
      40  ?_42
      28  ?_43
      28  ?_44
      28  ?_45
      28  ?_46
      40  ?_47
      32  ?_48
      16  ?_49
      60  ?_5
      20  ?_50
       8  ?_51
      52  ?_52
      24  ?_53
      32  ?_54
      24  ?_55
      24  ?_56
      52  ?_57
      36  ?_58
      32  ?_59
      36  ?_6
      24  ?_60
      24  ?_61
      76  ?_62
      32  ?_63
      28  ?_64
      36  ?_65
      36  ?_66
      36  ?_67
      28  ?_68
      24  ?_69
      56  ?_7
      28  ?_70
       2  ?_71
       4  ?_72
      40  ?_73
      32  ?_74
      40  ?_75
      44  ?_76
      32  ?_77
      36  ?_78
      32  ?_79
      52  ?_8
      36  ?_80
      40  ?_81
      32  ?_82
      40  ?_83
      24  ?_84
      40  ?_85
      48  ?_86
      48  ?_87
      36  ?_88
      48  ?_89
      48  ?_9
      24  ?_90
      32  ?_91
       8  ?_92
       8  ?_93
       8  ?_94
      20  ?_95
      16  ?_96
      12  ?_97
      28  ?_98
      48  ?_99
       4  mbedtls_pk_ec
      22  mbedtls_ssl_ciphersuite_cert_req_allowed
      16  mbedtls_ssl_ciphersuite_uses_server_signature
     340  mbedtls_ssl_handshake_client_step
      22  mbedtls_ssl_hs_hdr_len
      34  mbedtls_ssl_own_cert
      34  mbedtls_ssl_own_key
      40  mbedtls_ssl_safer_memcmp
     124  ssl_check_server_ecdh_params
      78  ssl_generate_random
     186  ssl_get_ecdh_params_from_cert
     176  ssl_parse_alpn_ext
     618  ssl_parse_certificate_request
      76  ssl_parse_encrypt_then_mac_ext
      78  ssl_parse_extended_ms_ext
     354  ssl_parse_hello_verify_request
      80  ssl_parse_max_fragment_length_ext
     456  ssl_parse_new_session_ticket
     166  ssl_parse_renegotiation_info
     182  ssl_parse_server_dh_params
      82  ssl_parse_server_ecdh_params
    2256  ssl_parse_server_hello
     204  ssl_parse_server_hello_done
    1206  ssl_parse_server_key_exchange
      98  ssl_parse_server_psk_hint
      70  ssl_parse_session_ticket_ext
     246  ssl_parse_signature_algorithm
     150  ssl_parse_supported_point_formats_ext
      70  ssl_parse_truncated_hmac_ext
      48  ssl_validate_ciphersuite
     212  ssl_write_alpn_ext
     544  ssl_write_certificate_verify
    1276  ssl_write_client_hello
    1110  ssl_write_client_key_exchange
     126  ssl_write_encrypt_then_mac_ext
     360  ssl_write_encrypted_pms
     126  ssl_write_extended_ms_ext
     174  ssl_write_hostname_ext
     132  ssl_write_max_fragment_length_ext
     140  ssl_write_renegotiation_ext
     186  ssl_write_session_ticket_ext
     224  ssl_write_signature_algorithms_ext
     224  ssl_write_supported_elliptic_curves_ext
     112  ssl_write_supported_point_formats_ext
     116  ssl_write_truncated_hmac_ext

 
  5 242 bytes in section .rodata
 13 362 bytes in section .text
 
 13 362 bytes of CODE  memory
  5 242 bytes of CONST memory

Errors: none
Warnings: none
