###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:12
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_log_report.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWC11F.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_log_report.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\dm_log_report.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\dm_log_report.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\dm_log_report.c
      1          /*
      2           * Copyright (C) 2015-2018 Alibaba Group Holding Limited
      3           */
      4          
      5          #include "iotx_dm_internal.h"
      6          
      7          #ifdef LOG_REPORT_TO_CLOUD
      8          
      9          #include "dev_model_api.h"
     10          

   \                                 In section .rodata, align 4
     11          const char THING_LOG_POST_PARAMS_HEAD[] =
   \                     THING_LOG_POST_PARAMS_HEAD:
   \        0x0   0x22 0x25          DC8 "\"%.*s %s %ld "
   \              0x2E 0x2A    
   \              0x73 0x20    
   \              0x25 0x73    
   \              0x20 0x25    
   \              0x6C 0x64    
   \              0x20 0x00    
   \        0xE   0x00 0x00          DC8 0, 0
     12                      "\"%.*s %s %ld ";

   \                                 In section .rodata, align 4
     13          const char THING_LOG_POST_PARAMS_BODY[] =
   \                     THING_LOG_POST_PARAMS_BODY:
   \        0x0   0x25 0x73          DC8 "%s %ld "
   \              0x20 0x25    
   \              0x6C 0x64    
   \              0x20 0x00    
     14                      "%s %ld ";

   \                                 In section .rodata, align 4
     15          const char THING_LOG_POST_PARAMS_END[] =
   \                     THING_LOG_POST_PARAMS_END:
   \        0x0   0x25 0x73          DC8 "%s %ld\","
   \              0x20 0x25    
   \              0x6C 0x64    
   \              0x22 0x2C    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     16                      "%s %ld\",";
     17          

   \                                 In section .bss, align 4
     18          char *g_log_poll = NULL;
   \                     g_log_poll:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
     19          static char *current_log_pos = NULL;
   \                     current_log_pos:
   \        0x0                      DS8 4
     20          

   \                                 In section .text, align 2, keep-with-next
     21          int remove_log_poll()
     22          {
   \                     remove_log_poll: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     23              if (NULL != g_log_poll) {
   \        0x2   0x....'....        LDR.W    R4,??DataTable12_2
   \        0x6   0x6820             LDR      R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD006             BEQ.N    ??remove_log_poll_0
     24                  HAL_Free(g_log_poll);
   \        0xC   0x....'....        BL       HAL_Free
     25                  g_log_poll = NULL;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x6020             STR      R0,[R4, #+0]
     26                  current_log_pos = NULL;
   \       0x14   0x....'....        LDR.W    R1,??DataTable12_3
   \       0x18   0x6008             STR      R0,[R1, #+0]
     27              }
     28              return 0;
   \                     ??remove_log_poll_0: (+1)
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
     29          }
     30          
     31          

   \                                 In section .text, align 2, keep-with-next
     32          unsigned int push_log(const char *input_log, int input_log_size)
     33          {
   \                     push_log: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x460C             MOV      R4,R1
     34              if (NULL == current_log_pos || NULL == input_log || input_log_size <= 0) {
   \        0x4   0x....'....        LDR.W    R5,??DataTable12_3
   \        0x8   0x6829             LDR      R1,[R5, #+0]
   \        0xA   0x2900             CMP      R1,#+0
   \        0xC   0xD003             BEQ.N    ??push_log_0
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD001             BEQ.N    ??push_log_0
   \       0x12   0x2C01             CMP      R4,#+1
   \       0x14   0xDA02             BGE.N    ??push_log_1
     35                  dm_log_debug("invalid params");
     36                  return (unsigned int)-1;
   \                     ??push_log_0: (+1)
   \       0x16   0xF04F 0x30FF      MOV      R0,#-1
   \       0x1A   0xBD32             POP      {R1,R4,R5,PC}
     37              }
     38              memcpy(current_log_pos, input_log, input_log_size);
   \                     ??push_log_1: (+1)
   \       0x1C   0x4622             MOV      R2,R4
   \       0x1E   0x4601             MOV      R1,R0
   \       0x20   0x6828             LDR      R0,[R5, #+0]
   \       0x22   0x....'....        BL       __aeabi_memcpy
     39              current_log_pos += input_log_size;
   \       0x26   0x6828             LDR      R0,[R5, #+0]
   \       0x28   0x4420             ADD      R0,R0,R4
   \       0x2A   0x6028             STR      R0,[R5, #+0]
     40              return (current_log_pos - g_log_poll);
   \       0x2C   0x....'....        LDR.W    R1,??DataTable12_2
   \       0x30   0x6809             LDR      R1,[R1, #+0]
   \       0x32   0x1A40             SUBS     R0,R0,R1
   \       0x34   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     41          }
     42          

   \                                 In section .text, align 2, keep-with-next
     43          unsigned int add_tail()
     44          {
   \                     add_tail: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     45              const char *tail = "]}";
   \        0x2   0x....             ADR.N    R4,??DataTable10  ;; 0x5D, 0x7D, 0x00, 0x00
     46              current_log_pos -= 1;
   \        0x4   0x....'....        LDR.W    R0,??DataTable12_3
   \        0x8   0x6801             LDR      R1,[R0, #+0]
   \        0xA   0x1E49             SUBS     R1,R1,#+1
   \        0xC   0x6001             STR      R1,[R0, #+0]
     47              return push_log(tail, strlen(tail));
   \        0xE   0x4620             MOV      R0,R4
   \       0x10   0x....'....        BL       strlen
   \       0x14   0x4601             MOV      R1,R0
   \       0x16   0x4620             MOV      R0,R4
   \       0x18   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1C   0x....             B.N      push_log
     48          }
     49          

   \                                 In section .text, align 2, keep-with-next
     50          void add_log_header()
     51          {
   \                     add_log_header: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     52              const char *subprefix = "{\"template\": \"traceContext logContent\",\"contents\":[";
   \        0x2   0x....             LDR.N    R4,??DataTable12_4
     53              int sublen = strlen(subprefix);
   \        0x4   0x4620             MOV      R0,R4
   \        0x6   0x....'....        BL       strlen
     54              push_log(subprefix, sublen);
   \        0xA   0x4601             MOV      R1,R0
   \        0xC   0x4620             MOV      R0,R4
   \        0xE   0xE8BD 0x4010      POP      {R4,LR}
   \       0x12   0x....             B.N      push_log
     55          }
     56          

   \                                 In section .text, align 2, keep-with-next
     57          int reset_log_poll()
     58          {
   \                     reset_log_poll: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     59              if (NULL == g_log_poll) {
   \        0x2   0x....             LDR.N    R4,??DataTable12_2
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD102             BNE.N    ??reset_log_poll_0
     60                  dm_log_err("log buffer is NULL");
     61                  return -1;
   \        0xA   0xF04F 0x30FF      MOV      R0,#-1
   \        0xE   0xBD10             POP      {R4,PC}
     62              }
     63              memset(g_log_poll, 0, LOG_POLL_SIZE);
   \                     ??reset_log_poll_0: (+1)
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0xF240 0x3152      MOVW     R1,#+850
   \       0x16   0x....'....        BL       __aeabi_memset
     64              current_log_pos = g_log_poll;
   \       0x1A   0x6820             LDR      R0,[R4, #+0]
   \       0x1C   0x....             LDR.N    R1,??DataTable12_3
   \       0x1E   0x6008             STR      R0,[R1, #+0]
     65              add_log_header();
   \       0x20   0x....'....        BL       add_log_header
     66              return 0;
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0xBD10             POP      {R4,PC}          ;; return
     67          }
     68          

   \                                 In section .text, align 2, keep-with-next
     69          int create_log_poll()
     70          {
   \                     create_log_poll: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     71              int ret;
     72              remove_log_poll();
   \        0x2   0x....'....        BL       remove_log_poll
     73              g_log_poll = HAL_Malloc(LOG_POLL_SIZE);
   \        0x6   0xF240 0x3052      MOVW     R0,#+850
   \        0xA   0x....'....        BL       HAL_Malloc
   \        0xE   0x....             LDR.N    R1,??DataTable12_2
   \       0x10   0x6008             STR      R0,[R1, #+0]
     74              ret = reset_log_poll();
     75              return ret;
   \       0x12   0xE8BD 0x4001      POP      {R0,LR}
   \       0x16   0x....             B.N      reset_log_poll
     76          }
     77          

   \                                 In section .bss, align 4
     78          static int switch_status = 0; /* 0 for switch off; 1 for switch on */
   \                     switch_status:
   \        0x0                      DS8 4

   \                                 In section .data, align 4
     79          static unsigned int sample_interval = 5;
   \                     sample_interval:
   \        0x0   0x0000'0005        DC32 5

   \                                 In section .data, align 4
     80          static unsigned int sample_count  = 1000;
   \                     sample_count:
   \        0x0   0x0000'03E8        DC32 1000
     81          
     82          #define MSG_ID_LEN (64)

   \                                 In section .bss, align 4
     83          char msg_array[MSG_ID_LEN] = {0};
   \                     msg_array:
   \        0x0                      DS8 64

   \                                 In section .text, align 2, keep-with-next
     84          int check_target_msg(const char *input, int len)
     85          {
   \                     check_target_msg: (+1)
   \        0x0   0x460A             MOV      R2,R1
     86              /* do not upload log when swith is off */
     87              if (0 == switch_status) {
   \        0x2   0x....             LDR.N    R1,??DataTable12_5
   \        0x4   0x6809             LDR      R1,[R1, #+0]
   \        0x6   0x2900             CMP      R1,#+0
   \        0x8   0xD003             BEQ.N    ??check_target_msg_0
     88                  return -1;
     89              }
     90              if (NULL == input || len <= 0) {
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD001             BEQ.N    ??check_target_msg_0
   \        0xE   0x2A01             CMP      R2,#+1
   \       0x10   0xDA02             BGE.N    ??check_target_msg_1
     91                  dm_log_err("invalid params");
     92                  return -1;
   \                     ??check_target_msg_0: (+1)
   \       0x12   0xF04F 0x30FF      MOV      R0,#-1
   \       0x16   0x4770             BX       LR
     93              }
     94              return strncmp(input, msg_array, len);
   \                     ??check_target_msg_1: (+1)
   \       0x18   0x....             LDR.N    R1,??DataTable12_6
   \       0x1A   0x....'....        B.W      strncmp
     95          }
     96          

   \                                 In section .bss, align 4
     97          static unsigned int msg_num = 0;
   \                     msg_num:
   \        0x0                      DS8 4
     98          /* return 0 for success; -1 for failure */

   \                                 In section .text, align 2, keep-with-next
     99          int set_target_msg(const char *input, int len)
    100          {
   \                     set_target_msg: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460A             MOV      R2,R1
    101              if (0 == switch_status) {
   \        0x4   0x....             LDR.N    R1,??DataTable12_5
   \        0x6   0x6809             LDR      R1,[R1, #+0]
   \        0x8   0x2900             CMP      R1,#+0
   \        0xA   0xD01A             BEQ.N    ??set_target_msg_0
    102                  return -1;
    103              }
    104              if ((msg_num % sample_interval == 0) && (msg_num < sample_count)) {
   \        0xC   0x....             LDR.N    R3,??DataTable12_7
   \        0xE   0x....             LDR.N    R4,??DataTable12_8
   \       0x10   0x6821             LDR      R1,[R4, #+0]
   \       0x12   0x460D             MOV      R5,R1
   \       0x14   0x681E             LDR      R6,[R3, #+0]
   \       0x16   0xFBB5 0xF5F6      UDIV     R5,R5,R6
   \       0x1A   0x4633             MOV      R3,R6
   \       0x1C   0xFB03 0x1115      MLS      R1,R3,R5,R1
   \       0x20   0x2900             CMP      R1,#+0
   \       0x22   0xD10E             BNE.N    ??set_target_msg_0
   \       0x24   0x6821             LDR      R1,[R4, #+0]
   \       0x26   0x....             LDR.N    R3,??DataTable12_9
   \       0x28   0x681B             LDR      R3,[R3, #+0]
   \       0x2A   0x4299             CMP      R1,R3
   \       0x2C   0xD209             BCS.N    ??set_target_msg_0
    105                  if (NULL == input || len <= 0) {
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD007             BEQ.N    ??set_target_msg_0
   \       0x32   0x2A01             CMP      R2,#+1
   \       0x34   0xDB05             BLT.N    ??set_target_msg_0
    106                      dm_log_err("invalid params");
    107                      return -1;
    108                  }
    109                  strncpy(msg_array, input, len);
   \       0x36   0x4601             MOV      R1,R0
   \       0x38   0x....             LDR.N    R0,??DataTable12_6
   \       0x3A   0x....'....        BL       strncpy
    110                  return 0;
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0xBD70             POP      {R4-R6,PC}
    111              }
    112              return -1;
   \                     ??set_target_msg_0: (+1)
   \       0x42   0xF04F 0x30FF      MOV      R0,#-1
   \       0x46   0xBD70             POP      {R4-R6,PC}       ;; return
    113          }
    114          

   \                                 In section .text, align 2, keep-with-next
    115          void parse_msg_id(_IN_ char *payload, _IN_ int payload_len, _OU_ dm_msg_request_payload_t *request)
    116          {
   \                     parse_msg_id: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB08A             SUB      SP,SP,#+40
   \        0x4   0x4614             MOV      R4,R2
    117              lite_cjson_t lite;
    118          
    119              if (payload == NULL || payload_len <= 0 || request == NULL) {
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD00E             BEQ.N    ??parse_msg_id_0
   \        0xA   0x2901             CMP      R1,#+1
   \        0xC   0xDB0C             BLT.N    ??parse_msg_id_0
   \        0xE   0x2C00             CMP      R4,#+0
   \       0x10   0xD00A             BEQ.N    ??parse_msg_id_0
    120                  return;
    121              }
    122          
    123              dm_utils_json_parse(payload, payload_len, cJSON_Object, &lite);
   \       0x12   0xAB02             ADD      R3,SP,#+8
   \       0x14   0x2240             MOVS     R2,#+64
   \       0x16   0x....'....        BL       dm_utils_json_parse
    124              dm_utils_json_object_item(&lite, DM_MSG_KEY_ID, strlen(DM_MSG_KEY_ID), cJSON_String, &request->id);
   \       0x1A   0x9400             STR      R4,[SP, #+0]
   \       0x1C   0x2310             MOVS     R3,#+16
   \       0x1E   0x2202             MOVS     R2,#+2
   \       0x20   0x....             ADR.N    R1,??DataTable12  ;; 0x69, 0x64, 0x00, 0x00
   \       0x22   0xA802             ADD      R0,SP,#+8
   \       0x24   0x....'....        BL       dm_utils_json_object_item
    125          }
   \                     ??parse_msg_id_0: (+1)
   \       0x28   0xB00A             ADD      SP,SP,#+40
   \       0x2A   0xBD10             POP      {R4,PC}          ;; return
    126          

   \                                 In section .text, align 2, keep-with-next
    127          int stop_sample()
    128          {
   \                     stop_sample: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    129              if (current_log_pos > g_log_poll) {
   \        0x2   0x....             LDR.N    R0,??DataTable12_2
   \        0x4   0x6800             LDR      R0,[R0, #+0]
   \        0x6   0x....             LDR.N    R1,??DataTable12_3
   \        0x8   0x6809             LDR      R1,[R1, #+0]
   \        0xA   0x4288             CMP      R0,R1
   \        0xC   0xD205             BCS.N    ??stop_sample_0
    130                  dm_mgr_upstream_thing_log_post(0, NULL, 0, 1);
   \        0xE   0x2301             MOVS     R3,#+1
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0x4611             MOV      R1,R2
   \       0x14   0x4608             MOV      R0,R1
   \       0x16   0x....'....        BL       dm_mgr_upstream_thing_log_post
    131              }
    132              switch_status = 0;
   \                     ??stop_sample_0: (+1)
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x....             LDR.N    R1,??DataTable12_5
   \       0x1E   0x6008             STR      R0,[R1, #+0]
    133              dm_log_info("stop sample");
    134              return remove_log_poll();
   \       0x20   0xE8BD 0x4001      POP      {R0,LR}
   \       0x24   0x....             B.N      remove_log_poll
    135          }
    136          

   \                                 In section .text, align 2, keep-with-next
    137          void parse_switch_info(_IN_ char *payload, _IN_ int payload_len)
    138          {
   \                     parse_switch_info: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB0A0             SUB      SP,SP,#+128
    139              lite_cjson_t lite, lite_sample_count, lite_sample_interval, lite_sample_target;
    140              const char *c1 = "Count";
   \        0x4   0x....             LDR.N    R5,??DataTable12_10
    141              const char *c2 = "Interval";
   \        0x6   0x....             LDR.N    R6,??DataTable12_11
    142              const char *c3 = "ProfileTarget";
   \        0x8   0x....             LDR.N    R7,??DataTable12_12
    143              char *sample_target;
    144              int sample_target_len;
    145              const char *target = "propSet";
   \        0xA   0x....             LDR.N    R4,??DataTable12_13
    146              int ret = -1;
    147          
    148              if (payload == NULL || payload_len <= 0) {
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD044             BEQ.N    ??parse_switch_info_0
   \       0x10   0x2901             CMP      R1,#+1
   \       0x12   0xDB42             BLT.N    ??parse_switch_info_0
    149                  return;
    150              }
    151              dm_utils_json_parse(payload, payload_len, cJSON_Object, &lite);
   \       0x14   0xAB08             ADD      R3,SP,#+32
   \       0x16   0x2240             MOVS     R2,#+64
   \       0x18   0x....'....        BL       dm_utils_json_parse
    152              ret = lite_cjson_object_item(&lite, c1, strlen(c1), &lite_sample_count);
    153              if (ret < SUCCESS_RETURN) {
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x....'....        BL       strlen
   \       0x22   0x4602             MOV      R2,R0
   \       0x24   0xAB18             ADD      R3,SP,#+96
   \       0x26   0x4629             MOV      R1,R5
   \       0x28   0xA808             ADD      R0,SP,#+32
   \       0x2A   0x....'....        BL       lite_cjson_object_item
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD433             BMI.N    ??parse_switch_info_0
    154                  return;
    155              }
    156          
    157              ret = lite_cjson_object_item(&lite, c2, strlen(c2), &lite_sample_interval);
    158              if (ret < SUCCESS_RETURN) {
   \       0x32   0x4630             MOV      R0,R6
   \       0x34   0x....'....        BL       strlen
   \       0x38   0xAB10             ADD      R3,SP,#+64
   \       0x3A   0x4602             MOV      R2,R0
   \       0x3C   0x4631             MOV      R1,R6
   \       0x3E   0xA808             ADD      R0,SP,#+32
   \       0x40   0x....'....        BL       lite_cjson_object_item
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD428             BMI.N    ??parse_switch_info_0
    159                  return;
    160              }
    161          
    162              ret = lite_cjson_object_item(&lite, c3, strlen(c3), &lite_sample_target);
    163              if (ret < SUCCESS_RETURN) {
   \       0x48   0x4638             MOV      R0,R7
   \       0x4A   0x....'....        BL       strlen
   \       0x4E   0x466B             MOV      R3,SP
   \       0x50   0x4602             MOV      R2,R0
   \       0x52   0x4639             MOV      R1,R7
   \       0x54   0xA808             ADD      R0,SP,#+32
   \       0x56   0x....'....        BL       lite_cjson_object_item
   \       0x5A   0x2800             CMP      R0,#+0
   \       0x5C   0xD41D             BMI.N    ??parse_switch_info_0
    164                  return;
    165              }
    166          
    167              sample_count = lite_sample_count.value_int;
   \       0x5E   0x....             LDR.N    R5,??DataTable12_9
   \       0x60   0x981E             LDR      R0,[SP, #+120]
   \       0x62   0x6028             STR      R0,[R5, #+0]
    168              sample_interval = lite_sample_interval.value_int;
   \       0x64   0x....             LDR.N    R6,??DataTable12_7
   \       0x66   0x9816             LDR      R0,[SP, #+88]
   \       0x68   0x6030             STR      R0,[R6, #+0]
    169              sample_target = lite_sample_target.value;
    170              sample_target_len  = lite_sample_target.value_length;
    171              dm_log_info("switch count is %d, interval is %d, target is %.*s\n", sample_count, sample_interval,
    172                          sample_target_len, sample_target);
    173              /* if the target is not property set, return */
    174              if (0 != strncmp(sample_target, target, sample_target_len)) {
   \       0x6A   0x9A02             LDR      R2,[SP, #+8]
   \       0x6C   0x4621             MOV      R1,R4
   \       0x6E   0x9801             LDR      R0,[SP, #+4]
   \       0x70   0x....'....        BL       strncmp
   \       0x74   0x2800             CMP      R0,#+0
   \       0x76   0xD110             BNE.N    ??parse_switch_info_0
    175                  dm_log_info("target is not propSet, return\n");
    176                  return;
    177              }
    178              if (sample_interval <= 0) {
   \       0x78   0x6830             LDR      R0,[R6, #+0]
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD00D             BEQ.N    ??parse_switch_info_0
    179                  dm_log_err("invalid sample interval\n");
    180                  return;
    181              }
    182              msg_num = 0;
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x....             LDR.N    R1,??DataTable12_8
   \       0x82   0x6008             STR      R0,[R1, #+0]
    183              /* when it switch off, force upload the remaining log */
    184              if (0 == sample_count) {
   \       0x84   0x6828             LDR      R0,[R5, #+0]
   \       0x86   0x2800             CMP      R0,#+0
   \       0x88   0xD102             BNE.N    ??parse_switch_info_1
    185                  ret = stop_sample();
   \       0x8A   0x....'....        BL       stop_sample
   \       0x8E   0xE004             B.N      ??parse_switch_info_0
    186              } else {
    187                  switch_status = 1;
   \                     ??parse_switch_info_1: (+1)
   \       0x90   0x2001             MOVS     R0,#+1
   \       0x92   0x....             LDR.N    R1,??DataTable12_5
   \       0x94   0x6008             STR      R0,[R1, #+0]
    188                  ret = create_log_poll();
   \       0x96   0x....'....        BL       create_log_poll
    189              }
    190          
    191              dm_log_info("log switch run status is %d\n", ret);
    192          }
   \                     ??parse_switch_info_0: (+1)
   \       0x9A   0xB021             ADD      SP,SP,#+132
   \       0x9C   0xBDF0             POP      {R4-R7,PC}       ;; return
    193          

   \                                 In section .bss, align 1
    194          REPORT_STATE g_report_status = READY;
   \                     g_report_status:
   \        0x0                      DS8 1
    195          

   \                                 In section .text, align 2, keep-with-next
    196          void send_permance_info(char *input, int input_len, char *comments, int report_format)
    197          {
   \                     send_permance_info: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB0A9             SUB      SP,SP,#+164
   \        0x6   0x4680             MOV      R8,R0
   \        0x8   0x460F             MOV      R7,R1
   \        0xA   0x4614             MOV      R4,R2
   \        0xC   0x461D             MOV      R5,R3
    198          #define LOCAL_POST_LEN (150)
    199              char data[LOCAL_POST_LEN] = {0};
   \        0xE   0xA803             ADD      R0,SP,#+12
   \       0x10   0x2198             MOVS     R1,#+152
   \       0x12   0x....'....        BL       __aeabi_memclr4
    200              const char *format = NULL;
    201              if (0 == switch_status) {
   \       0x16   0x....             LDR.N    R0,??DataTable12_5
   \       0x18   0x6800             LDR      R0,[R0, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD023             BEQ.N    ??send_permance_info_0
    202                  return;
   \       0x1E   0x4626             MOV      R6,R4
    203              }
    204          
    205              switch (report_format) {
   \       0x20   0x2D00             CMP      R5,#+0
   \       0x22   0xD003             BEQ.N    ??send_permance_info_1
   \       0x24   0x2D02             CMP      R5,#+2
   \       0x26   0xD02B             BEQ.N    ??send_permance_info_2
   \       0x28   0xD320             BCC.N    ??send_permance_info_3
   \       0x2A   0xE01C             B.N      ??send_permance_info_0
   \                     ??send_permance_info_1: (+1)
   \       0x2C   0x4644             MOV      R4,R8
    206                  case 0:
    207                      if (NULL == input || input_len <= 0) {
   \       0x2E   0x2C00             CMP      R4,#+0
   \       0x30   0xD019             BEQ.N    ??send_permance_info_0
   \       0x32   0x2F01             CMP      R7,#+1
   \       0x34   0xDB17             BLT.N    ??send_permance_info_0
    208                          dm_log_err("invalid params");
    209                          return;
    210                      }
    211                      format = THING_LOG_POST_PARAMS_HEAD;
    212                      HAL_Snprintf(data, sizeof(data), format, input_len, input,
    213                                   comments, (long)HAL_UptimeMs());
   \       0x36   0x....'....        BL       HAL_UptimeMs
   \       0x3A   0x9002             STR      R0,[SP, #+8]
   \       0x3C   0x9601             STR      R6,[SP, #+4]
   \       0x3E   0x9400             STR      R4,[SP, #+0]
   \       0x40   0x463B             MOV      R3,R7
   \       0x42   0x....             LDR.N    R2,??DataTable12_14
   \       0x44   0x2196             MOVS     R1,#+150
   \       0x46   0xA803             ADD      R0,SP,#+12
   \       0x48   0x....'....        BL       HAL_Snprintf
    214                      break;
    215                  case 1:
    216                      format = THING_LOG_POST_PARAMS_BODY;
    217                      HAL_Snprintf(data, sizeof(data), format,
    218                                   comments, (long)HAL_UptimeMs());
    219                      break;
    220                  case 2:
    221                      format = THING_LOG_POST_PARAMS_END;
    222                      HAL_Snprintf(data, sizeof(data), format,
    223                                   comments, (long)HAL_UptimeMs());
    224                      g_report_status = DONE;
    225                      break;
    226                  default:
    227                      return;
    228              }
    229              iotx_dm_log_post(0,  data, strlen((const char *)data));
   \                     ??send_permance_info_4: (+1)
   \       0x4C   0xA803             ADD      R0,SP,#+12
   \       0x4E   0x....'....        BL       strlen
   \       0x52   0x4602             MOV      R2,R0
   \       0x54   0xA903             ADD      R1,SP,#+12
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0x....'....        BL       iotx_dm_log_post
    230              if (2 == report_format) {
   \       0x5C   0x2D02             CMP      R5,#+2
   \       0x5E   0xD102             BNE.N    ??send_permance_info_0
    231                  g_report_status = READY;
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x....             LDR.N    R1,??DataTable12_15
   \       0x64   0x7008             STRB     R0,[R1, #+0]
    232              }
    233          }
   \                     ??send_permance_info_0: (+1)
   \       0x66   0xB02A             ADD      SP,SP,#+168
   \       0x68   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   \                     ??send_permance_info_3: (+1)
   \       0x6C   0x....'....        BL       HAL_UptimeMs
   \       0x70   0x9000             STR      R0,[SP, #+0]
   \       0x72   0x4633             MOV      R3,R6
   \       0x74   0x....             LDR.N    R2,??DataTable12_16
   \       0x76   0x2196             MOVS     R1,#+150
   \       0x78   0xA803             ADD      R0,SP,#+12
   \       0x7A   0x....'....        BL       HAL_Snprintf
   \       0x7E   0xE7E5             B.N      ??send_permance_info_4
   \                     ??send_permance_info_2: (+1)
   \       0x80   0x....'....        BL       HAL_UptimeMs
   \       0x84   0x9000             STR      R0,[SP, #+0]
   \       0x86   0x4633             MOV      R3,R6
   \       0x88   0x....             LDR.N    R2,??DataTable12_17
   \       0x8A   0x2196             MOVS     R1,#+150
   \       0x8C   0xA803             ADD      R0,SP,#+12
   \       0x8E   0x....'....        BL       HAL_Snprintf
   \       0x92   0x2002             MOVS     R0,#+2
   \       0x94   0x....             LDR.N    R1,??DataTable12_15
   \       0x96   0x7008             STRB     R0,[R1, #+0]
   \       0x98   0xE7D8             B.N      ??send_permance_info_4
    234          

   \                                 In section .text, align 2, keep-with-next
    235          void get_msgid(char *payload, int is_cloud)
    236          {
   \                     get_msgid: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB0A0             SUB      SP,SP,#+128
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460C             MOV      R4,R1
    237              const char *interest = "\"method\":\"thing.service.property.set";
   \        0x8   0x....             LDR.N    R1,??DataTable12_18
    238              char *found;
    239              dm_msg_request_payload_t request;
    240              if (0 == switch_status || NULL == payload) {
   \        0xA   0x....             LDR.N    R0,??DataTable12_5
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD03D             BEQ.N    ??get_msgid_0
   \       0x12   0x2D00             CMP      R5,#+0
   \       0x14   0xD03B             BEQ.N    ??get_msgid_0
    241                  return;
    242              }
    243          
    244              found = strstr(payload, interest);
    245              if (NULL == found) {
   \       0x16   0x4628             MOV      R0,R5
   \       0x18   0x....'....        BL       strstr
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD036             BEQ.N    ??get_msgid_0
    246                  return;
    247              }
    248              found = strstr(payload, "{");
   \       0x20   0x....             ADR.N    R1,??DataTable12_1  ;; "{"
   \       0x22   0x4628             MOV      R0,R5
   \       0x24   0x....'....        BL       strstr
   \       0x28   0x0005             MOVS     R5,R0
    249              if (NULL == found) {
   \       0x2A   0xD030             BEQ.N    ??get_msgid_0
    250                  return;
    251              }
    252              msg_num++;
   \       0x2C   0x....             LDR.N    R6,??DataTable12_8
   \       0x2E   0x6830             LDR      R0,[R6, #+0]
   \       0x30   0x1C40             ADDS     R0,R0,#+1
   \       0x32   0x6030             STR      R0,[R6, #+0]
    253              parse_msg_id(found, strlen(found), &request);
   \       0x34   0x4628             MOV      R0,R5
   \       0x36   0x....'....        BL       strlen
   \       0x3A   0x466A             MOV      R2,SP
   \       0x3C   0x4601             MOV      R1,R0
   \       0x3E   0x4628             MOV      R0,R5
   \       0x40   0x....'....        BL       parse_msg_id
    254              if (RUNNING == g_report_status) {
   \       0x44   0x....             LDR.N    R5,??DataTable12_15
   \       0x46   0x7828             LDRB     R0,[R5, #+0]
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD020             BEQ.N    ??get_msgid_0
    255                  dm_log_info("current working on a sample, return");
    256                  return;
    257              }
    258          
    259              if (sample_count <= msg_num) {
   \       0x4C   0x6830             LDR      R0,[R6, #+0]
   \       0x4E   0x....             LDR.N    R1,??DataTable12_9
   \       0x50   0x6809             LDR      R1,[R1, #+0]
   \       0x52   0x4288             CMP      R0,R1
   \       0x54   0xD302             BCC.N    ??get_msgid_1
    260                  stop_sample();
   \       0x56   0x....'....        BL       stop_sample
    261                  return;
   \       0x5A   0xE018             B.N      ??get_msgid_0
    262              }
    263          
    264              /* if it does not meet the sample conditions, do NOT take sample */
    265              if (SUCCESS_RETURN != set_target_msg(request.id.value, request.id.value_length)) {
   \                     ??get_msgid_1: (+1)
   \       0x5C   0x9902             LDR      R1,[SP, #+8]
   \       0x5E   0x9801             LDR      R0,[SP, #+4]
   \       0x60   0x....'....        BL       set_target_msg
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD112             BNE.N    ??get_msgid_0
    266                  return;
    267              }
    268          
    269              g_report_status = RUNNING;
   \       0x68   0x2001             MOVS     R0,#+1
   \       0x6A   0x7028             STRB     R0,[R5, #+0]
    270          
    271              if (1 == is_cloud) {
   \       0x6C   0x2C01             CMP      R4,#+1
   \       0x6E   0xD106             BNE.N    ??get_msgid_2
    272                  send_permance_info(request.id.value, request.id.value_length, "1_cloud", 0);
   \       0x70   0x2300             MOVS     R3,#+0
   \       0x72   0x....             LDR.N    R2,??DataTable12_19
   \       0x74   0x9902             LDR      R1,[SP, #+8]
   \       0x76   0x9801             LDR      R0,[SP, #+4]
   \       0x78   0x....'....        BL       send_permance_info
   \       0x7C   0xE007             B.N      ??get_msgid_0
    273              } else if (0 == is_cloud) {
   \                     ??get_msgid_2: (+1)
   \       0x7E   0x2C00             CMP      R4,#+0
   \       0x80   0xD105             BNE.N    ??get_msgid_0
    274                  send_permance_info(request.id.value, request.id.value_length, "1_alcs", 0);
   \       0x82   0x2300             MOVS     R3,#+0
   \       0x84   0x....             LDR.N    R2,??DataTable12_20
   \       0x86   0x9902             LDR      R1,[SP, #+8]
   \       0x88   0x9801             LDR      R0,[SP, #+4]
   \       0x8A   0x....'....        BL       send_permance_info
    275              }
    276          }
   \                     ??get_msgid_0: (+1)
   \       0x8E   0xB020             ADD      SP,SP,#+128
   \       0x90   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0x5D 0x7D          DC8      0x5D, 0x7D, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \        0x0   0x69 0x64          DC8      0x69, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \        0x0   0x7B 0x00          DC8      "{",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \        0x0   0x....'....        DC32     g_log_poll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \        0x0   0x....'....        DC32     current_log_pos

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \        0x0   0x....'....        DC32     switch_status

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \        0x0   0x....'....        DC32     msg_array

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \        0x0   0x....'....        DC32     sample_interval

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \        0x0   0x....'....        DC32     msg_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \        0x0   0x....'....        DC32     sample_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \        0x0   0x....'....        DC32     THING_LOG_POST_PARAMS_HEAD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \        0x0   0x....'....        DC32     g_report_status

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \        0x0   0x....'....        DC32     THING_LOG_POST_PARAMS_BODY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \        0x0   0x....'....        DC32     THING_LOG_POST_PARAMS_END

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .rodata, align 4
   \        0x0   0x5D 0x7D          DC8 "]}"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x7B 0x22          DC8 7BH, 22H, 74H, 65H, 6DH, 70H, 6CH, 61H
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x6C 0x61    
   \        0x8   0x74 0x65          DC8 74H, 65H, 22H, 3AH, 20H, 22H, 74H, 72H
   \              0x22 0x3A    
   \              0x20 0x22    
   \              0x74 0x72    
   \       0x10   0x61 0x63          DC8 61H, 63H, 65H, 43H, 6FH, 6EH, 74H, 65H
   \              0x65 0x43    
   \              0x6F 0x6E    
   \              0x74 0x65    
   \       0x18   0x78 0x74          DC8 78H, 74H, 20H, 6CH, 6FH, 67H, 43H, 6FH
   \              0x20 0x6C    
   \              0x6F 0x67    
   \              0x43 0x6F    
   \       0x20   0x6E 0x74          DC8 6EH, 74H, 65H, 6EH, 74H, 22H, 2CH, 22H
   \              0x65 0x6E    
   \              0x74 0x22    
   \              0x2C 0x22    
   \       0x28   0x63 0x6F          DC8 63H, 6FH, 6EH, 74H, 65H, 6EH, 74H, 73H
   \              0x6E 0x74    
   \              0x65 0x6E    
   \              0x74 0x73    
   \       0x30   0x22 0x3A          DC8 22H, 3AH, 5BH, 0
   \              0x5B 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x69 0x64          DC8 "id"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x43 0x6F          DC8 "Count"
   \              0x75 0x6E    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x49 0x6E          DC8 "Interval"
   \              0x74 0x65    
   \              0x72 0x76    
   \              0x61 0x6C    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x50 0x72          DC8 "ProfileTarget"
   \              0x6F 0x66    
   \              0x69 0x6C    
   \              0x65 0x54    
   \              0x61 0x72    
   \              0x67 0x65    
   \              0x74 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x70 0x72          DC8 "propSet"
   \              0x6F 0x70    
   \              0x53 0x65    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x45   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x5C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x73   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x8A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x22 0x6D          DC8 "\"method\":\"thing.service.property.set"
   \              0x65 0x74    
   \              0x68 0x6F    
   \              0x64 0x22    
   \              0x3A 0x22    
   \              0x74 0x68    
   \              0x69 0x6E    
   \              0x67 0x2E    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x69 0x63    
   \              0x65 0x2E    
   \              0x70 0x72    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x74 0x79    
   \              0x2E 0x73    
   \              0x65 0x74    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \        0x0   0x7B 0x00          DC8 "{"

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x31 0x5F          DC8 "1_cloud"
   \              0x63 0x6C    
   \              0x6F 0x75    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x31 0x5F          DC8 "1_alcs"
   \              0x61 0x6C    
   \              0x63 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0
    277          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   add_log_header
         0   -> push_log
         8   -> strlen
       8   add_tail
         0   -> push_log
         8   -> strlen
       0   check_target_msg
         0   -> strncmp
       8   create_log_poll
         8   -> HAL_Malloc
         8   -> remove_log_poll
         0   -> reset_log_poll
     144   get_msgid
       144   -> parse_msg_id
       144   -> send_permance_info
       144   -> set_target_msg
       144   -> stop_sample
       144   -> strlen
       144   -> strstr
      48   parse_msg_id
        48   -> dm_utils_json_object_item
        48   -> dm_utils_json_parse
     152   parse_switch_info
       152   -> create_log_poll
       152   -> dm_utils_json_parse
       152   -> lite_cjson_object_item
       152   -> stop_sample
       152   -> strlen
       152   -> strncmp
      16   push_log
        16   -> __aeabi_memcpy
       8   remove_log_poll
         8   -> HAL_Free
       8   reset_log_poll
         8   -> __aeabi_memset
         8   -> add_log_header
     192   send_permance_info
       192   -> HAL_Snprintf
       192   -> HAL_UptimeMs
       192   -> __aeabi_memclr4
       192   -> iotx_dm_log_post
       192   -> strlen
      16   set_target_msg
        16   -> strncpy
       8   stop_sample
         8   -> dm_mgr_upstream_thing_log_post
         0   -> remove_log_poll


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ?_0
      52  ?_1
       8  ?_10
       8  ?_11
       4  ?_2
       8  ?_3
      12  ?_4
      16  ?_5
       8  ?_6
     152  ?_7
      40  ?_8
       2  ?_9
       8  THING_LOG_POST_PARAMS_BODY
      12  THING_LOG_POST_PARAMS_END
      16  THING_LOG_POST_PARAMS_HEAD
      20  add_log_header
      30  add_tail
      30  check_target_msg
      24  create_log_poll
       4  current_log_pos
       4  g_log_poll
       1  g_report_status
     146  get_msgid
      64  msg_array
       4  msg_num
      44  parse_msg_id
     158  parse_switch_info
      54  push_log
      30  remove_log_poll
      40  reset_log_poll
       4  sample_count
       4  sample_interval
     154  send_permance_info
      72  set_target_msg
      38  stop_sample
       4  switch_status

 
  81 bytes in section .bss
   8 bytes in section .data
 350 bytes in section .rodata
 928 bytes in section .text
 
 928 bytes of CODE  memory
 350 bytes of CONST memory
  89 bytes of DATA  memory

Errors: none
Warnings: none
