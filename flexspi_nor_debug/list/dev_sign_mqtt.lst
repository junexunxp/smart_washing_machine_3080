###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:11
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\dev_sign_mqtt.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EWBB1C.tmp
#        (C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\dev_sign_mqtt.c
#        -D DEBUG -D USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D
#        XIP_BOOT_HEADER_ENABLE=1 -D CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS
#        -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\dev_sign_mqtt.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\dev_sign_mqtt.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\dev_sign_mqtt.c
      1          #include <stdio.h>
      2          #include <string.h>
      3          #include "infra_defs.h"
      4          #include "infra_config.h"
      5          #include "infra_sha256.h"
      6          
      7          #include "dev_sign_api.h"
      8          #include "dev_sign_wrapper.h"
      9          
     10          
     11          #define SIGN_MQTT_PORT (1883)
     12          
     13          /* all secure mode define */
     14          #define MODE_TLS_GUIDER             "-1"
     15          #define MODE_TLS_DIRECT             "2"
     16          #define MODE_TCP_DIRECT_PLAIN       "3"
     17          
     18          #ifdef MQTT_PRE_AUTH
     19              #define SECURE_MODE             MODE_TLS_GUIDER
     20          #else
     21              #ifdef SUPPORT_TLS
     22                  #define SECURE_MODE         MODE_TLS_DIRECT
     23              #else
     24                  #define SECURE_MODE         MODE_TCP_DIRECT_PLAIN
     25              #endif
     26          #endif
     27          
     28          /* use fixed timestamp */
     29          #define TIMESTAMP_VALUE             "2524608000000"
     30          
     31          /* clientid key value pair define */

   \                                 In section .data, align 4
     32          const char *clientid_kv[][2] = {
   \                     clientid_kv:
   \        0x0   0x....'....        DC32 ?_0, ?_1, ?_2, ?_3, ?_4, ?_5, ?_6, ?_7, ?_8, ?_9, ?_10, ?_11, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 ?_11
     33              {
     34                  "timestamp", TIMESTAMP_VALUE
     35              },
     36              {
     37                  "_v", "sdk-c-"IOTX_SDK_VERSION
     38              },
     39              {
     40                  "securemode", SECURE_MODE
     41              },
     42              {
     43                  "signmethod", "hmacsha256"
     44              },
     45              {
     46                  "lan", "C"
     47              },
     48          #if defined(DEVICE_MODEL_ENABLED) && !defined(DEVICE_MODEL_CLASSIC)
     49              {
     50                  "v", IOTX_ALINK_VERSION
     51              },
     52          #else
     53              {
     54                  "gw", "0"
     55              },
     56              {
     57                  "ext", "0"
     58              },
     59          #endif
     60          };
     61          

   \                                 In section .text, align 2, keep-with-next
     62          static void _hex2str(uint8_t *input, uint16_t input_len, char *output)
     63          {
   \                     _hex2str: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
     64              char *zEncode = "0123456789ABCDEF";
   \        0x2   0x....'....        LDR.W    R3,??DataTable3_2
     65              int i = 0, j = 0;
   \        0x6   0x2400             MOVS     R4,#+0
   \        0x8   0x4625             MOV      R5,R4
     66          
     67              for (i = 0; i < input_len; i++) {
   \        0xA   0xE00B             B.N      ??_hex2str_0
     68                  output[j++] = zEncode[(input[i] >> 4) & 0xf];
   \                     ??_hex2str_1: (+1)
   \        0xC   0x5D06             LDRB     R6,[R0, R4]
   \        0xE   0x1136             ASRS     R6,R6,#+4
   \       0x10   0x5D9E             LDRB     R6,[R3, R6]
   \       0x12   0x5556             STRB     R6,[R2, R5]
   \       0x14   0x1C6D             ADDS     R5,R5,#+1
     69                  output[j++] = zEncode[(input[i]) & 0xf];
   \       0x16   0x5D06             LDRB     R6,[R0, R4]
   \       0x18   0xF006 0x060F      AND      R6,R6,#0xF
   \       0x1C   0x5D9E             LDRB     R6,[R3, R6]
   \       0x1E   0x5556             STRB     R6,[R2, R5]
   \       0x20   0x1C6D             ADDS     R5,R5,#+1
     70              }
   \       0x22   0x1C64             ADDS     R4,R4,#+1
   \                     ??_hex2str_0: (+1)
   \       0x24   0x460E             MOV      R6,R1
   \       0x26   0x42B4             CMP      R4,R6
   \       0x28   0xDBF0             BLT.N    ??_hex2str_1
     71          }
   \       0x2A   0xBC70             POP      {R4-R6}
   \       0x2C   0x4770             BX       LR               ;; return
     72          

   \                                 In section .text, align 2, keep-with-next
     73          int _sign_get_clientid(char *clientid_string, const char *device_id)
     74          {
   \                     _sign_get_clientid: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
     75              uint8_t i;
     76          
     77              if (clientid_string == NULL || device_id == NULL) {
   \        0x8   0x2C00             CMP      R4,#+0
   \        0xA   0xD060             BEQ.N    ??_sign_get_clientid_0
   \        0xC   0x2D00             CMP      R5,#+0
   \        0xE   0xD05E             BEQ.N    ??_sign_get_clientid_0
     78                  return FAIL_RETURN;
     79              }
     80          
     81              memset(clientid_string, 0, DEV_SIGN_CLIENT_ID_MAXLEN);
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0x21C8             MOVS     R1,#+200
   \       0x14   0x....'....        BL       __aeabi_memset
     82              memcpy(clientid_string, device_id, strlen(device_id));
   \       0x18   0x4628             MOV      R0,R5
   \       0x1A   0x....'....        BL       strlen
   \       0x1E   0x4602             MOV      R2,R0
   \       0x20   0x4629             MOV      R1,R5
   \       0x22   0x4620             MOV      R0,R4
   \       0x24   0x....'....        BL       __aeabi_memcpy
     83              memcpy(clientid_string + strlen(clientid_string), "|", 1);
   \       0x28   0x4620             MOV      R0,R4
   \       0x2A   0x....'....        BL       strlen
   \       0x2E   0x4420             ADD      R0,R4,R0
   \       0x30   0x....             ADR.N    R5,??DataTable2  ;; "|"
   \       0x32   0x2201             MOVS     R2,#+1
   \       0x34   0x4629             MOV      R1,R5
   \       0x36   0x....'....        BL       __aeabi_memcpy
     84          
     85              for (i = 0; i < (sizeof(clientid_kv) / (sizeof(clientid_kv[0]))); i++) {
   \       0x3A   0x2600             MOVS     R6,#+0
   \       0x3C   0x....'....        LDR.W    R7,??DataTable3_3
   \       0x40   0xE02F             B.N      ??_sign_get_clientid_1
     86                  if ((strlen(clientid_string) + strlen(clientid_kv[i][0]) + strlen(clientid_kv[i][1]) + 2) >=
     87                      DEV_SIGN_CLIENT_ID_MAXLEN) {
     88                      return FAIL_RETURN;
     89                  }
     90          
     91                  memcpy(clientid_string + strlen(clientid_string), clientid_kv[i][0], strlen(clientid_kv[i][0]));
   \                     ??_sign_get_clientid_2: (+1)
   \       0x42   0xF857 0x0036      LDR      R0,[R7, R6, LSL #+3]
   \       0x46   0x....'....        BL       strlen
   \       0x4A   0x4680             MOV      R8,R0
   \       0x4C   0x4620             MOV      R0,R4
   \       0x4E   0x....'....        BL       strlen
   \       0x52   0x4420             ADD      R0,R4,R0
   \       0x54   0x4642             MOV      R2,R8
   \       0x56   0xF857 0x1036      LDR      R1,[R7, R6, LSL #+3]
   \       0x5A   0x....'....        BL       __aeabi_memcpy
     92                  memcpy(clientid_string + strlen(clientid_string), "=", 1);
   \       0x5E   0x4620             MOV      R0,R4
   \       0x60   0x....'....        BL       strlen
   \       0x64   0x4420             ADD      R0,R4,R0
   \       0x66   0x2201             MOVS     R2,#+1
   \       0x68   0x....             ADR.N    R1,??DataTable2_1  ;; "="
   \       0x6A   0x....'....        BL       __aeabi_memcpy
     93                  memcpy(clientid_string + strlen(clientid_string), clientid_kv[i][1], strlen(clientid_kv[i][1]));
   \       0x6E   0xEB07 0x00C6      ADD      R0,R7,R6, LSL #+3
   \       0x72   0x6840             LDR      R0,[R0, #+4]
   \       0x74   0x....'....        BL       strlen
   \       0x78   0x4680             MOV      R8,R0
   \       0x7A   0x4620             MOV      R0,R4
   \       0x7C   0x....'....        BL       strlen
   \       0x80   0x4420             ADD      R0,R4,R0
   \       0x82   0x4642             MOV      R2,R8
   \       0x84   0xEB07 0x01C6      ADD      R1,R7,R6, LSL #+3
   \       0x88   0x6849             LDR      R1,[R1, #+4]
   \       0x8A   0x....'....        BL       __aeabi_memcpy
     94                  memcpy(clientid_string + strlen(clientid_string), ",", 1);
   \       0x8E   0x4620             MOV      R0,R4
   \       0x90   0x....'....        BL       strlen
   \       0x94   0x4420             ADD      R0,R4,R0
   \       0x96   0x2201             MOVS     R2,#+1
   \       0x98   0x....             ADR.N    R1,??DataTable2_2  ;; ","
   \       0x9A   0x....'....        BL       __aeabi_memcpy
   \       0x9E   0x1C76             ADDS     R6,R6,#+1
   \       0xA0   0xB2F6             UXTB     R6,R6
   \                     ??_sign_get_clientid_1: (+1)
   \       0xA2   0x2E07             CMP      R6,#+7
   \       0xA4   0x4620             MOV      R0,R4
   \       0xA6   0xD215             BCS.N    ??_sign_get_clientid_3
   \       0xA8   0x....'....        BL       strlen
   \       0xAC   0x4680             MOV      R8,R0
   \       0xAE   0xF857 0x0036      LDR      R0,[R7, R6, LSL #+3]
   \       0xB2   0x....'....        BL       strlen
   \       0xB6   0x4480             ADD      R8,R0,R8
   \       0xB8   0xEB07 0x00C6      ADD      R0,R7,R6, LSL #+3
   \       0xBC   0x6840             LDR      R0,[R0, #+4]
   \       0xBE   0x....'....        BL       strlen
   \       0xC2   0x4480             ADD      R8,R0,R8
   \       0xC4   0xF108 0x0802      ADD      R8,R8,#+2
   \       0xC8   0xF1B8 0x0FC8      CMP      R8,#+200
   \       0xCC   0xD3B9             BCC.N    ??_sign_get_clientid_2
   \                     ??_sign_get_clientid_0: (+1)
   \       0xCE   0xF04F 0x30FF      MOV      R0,#-1
   \       0xD2   0xE008             B.N      ??_sign_get_clientid_4
     95              }
     96          
     97              memcpy(clientid_string + strlen(clientid_string) - 1, "|", 1);
   \                     ??_sign_get_clientid_3: (+1)
   \       0xD4   0x....'....        BL       strlen
   \       0xD8   0x4420             ADD      R0,R4,R0
   \       0xDA   0x1E40             SUBS     R0,R0,#+1
   \       0xDC   0x2201             MOVS     R2,#+1
   \       0xDE   0x4629             MOV      R1,R5
   \       0xE0   0x....'....        BL       __aeabi_memcpy
     98          
     99              return SUCCESS_RETURN;
   \       0xE4   0x2000             MOVS     R0,#+0
   \                     ??_sign_get_clientid_4: (+1)
   \       0xE6   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    100          }
    101          

   \                                 In section .text, align 2, keep-with-next
    102          int _iotx_generate_sign_string(const char *device_id, const char *device_name, const char *product_key, const char *device_secret, char *sign_string)
    103          {
   \                     _iotx_generate_sign_string: (+1)
   \        0x0   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \        0x4   0xB0BB             SUB      SP,SP,#+236
   \        0x6   0x4605             MOV      R5,R0
   \        0x8   0x460E             MOV      R6,R1
   \        0xA   0x4617             MOV      R7,R2
   \        0xC   0x461C             MOV      R4,R3
    104              char signsource[DEV_SIGN_SOURCE_MAXLEN] = {0};
   \        0xE   0xA809             ADD      R0,SP,#+36
   \       0x10   0x21C8             MOVS     R1,#+200
   \       0x12   0x....'....        BL       __aeabi_memclr4
    105              uint16_t signsource_len = 0;
    106              const char sign_fmt[] = "clientId%sdeviceName%sproductKey%stimestamp%s";
    107              uint8_t sign_hex[32] = {0};
   \       0x16   0xA801             ADD      R0,SP,#+4
   \       0x18   0x2120             MOVS     R1,#+32
   \       0x1A   0x....'....        BL       __aeabi_memclr4
    108          
    109              signsource_len = sizeof(sign_fmt) + strlen(device_id) + strlen(device_name) + strlen(product_key) + strlen(TIMESTAMP_VALUE);
   \       0x1E   0x4628             MOV      R0,R5
   \       0x20   0x....'....        BL       strlen
   \       0x24   0x4680             MOV      R8,R0
   \       0x26   0x4630             MOV      R0,R6
   \       0x28   0x....'....        BL       strlen
   \       0x2C   0x4480             ADD      R8,R0,R8
   \       0x2E   0x4638             MOV      R0,R7
   \       0x30   0x....'....        BL       strlen
   \       0x34   0x4480             ADD      R8,R0,R8
   \       0x36   0xF108 0x083B      ADD      R8,R8,#+59
    110              if (signsource_len >= DEV_SIGN_SOURCE_MAXLEN) {
   \       0x3A   0xFA1F 0xF888      UXTH     R8,R8
   \       0x3E   0xF1B8 0x0FC8      CMP      R8,#+200
   \       0x42   0xDB01             BLT.N    ??_iotx_generate_sign_string_0
    111                  return ERROR_DEV_SIGN_SOURCE_TOO_SHORT;
   \       0x44   0x....             LDR.N    R0,??DataTable3_4  ;; 0xfffffbb0
   \       0x46   0xE06B             B.N      ??_iotx_generate_sign_string_1
    112              }
   \                     ??_iotx_generate_sign_string_0: (+1)
   \       0x48   0xF8DD 0x8108      LDR      R8,[SP, #+264]
    113          
    114              memset(signsource, 0, DEV_SIGN_SOURCE_MAXLEN);
   \       0x4C   0x2200             MOVS     R2,#+0
   \       0x4E   0x21C8             MOVS     R1,#+200
   \       0x50   0xA809             ADD      R0,SP,#+36
   \       0x52   0x....'....        BL       __aeabi_memset4
    115              memcpy(signsource, "clientId", strlen("clientId"));
   \       0x56   0x2208             MOVS     R2,#+8
   \       0x58   0x....             LDR.N    R1,??DataTable3_5
   \       0x5A   0xA809             ADD      R0,SP,#+36
   \       0x5C   0x....'....        BL       __aeabi_memcpy4
    116              memcpy(signsource + strlen(signsource), device_id, strlen(device_id));
   \       0x60   0x4628             MOV      R0,R5
   \       0x62   0x....'....        BL       strlen
   \       0x66   0x4681             MOV      R9,R0
   \       0x68   0xA809             ADD      R0,SP,#+36
   \       0x6A   0x....'....        BL       strlen
   \       0x6E   0xA909             ADD      R1,SP,#+36
   \       0x70   0x4408             ADD      R0,R1,R0
   \       0x72   0x464A             MOV      R2,R9
   \       0x74   0x4629             MOV      R1,R5
   \       0x76   0x....'....        BL       __aeabi_memcpy
    117              memcpy(signsource + strlen(signsource), "deviceName", strlen("deviceName"));
   \       0x7A   0xA809             ADD      R0,SP,#+36
   \       0x7C   0x....'....        BL       strlen
   \       0x80   0xA909             ADD      R1,SP,#+36
   \       0x82   0x4408             ADD      R0,R1,R0
   \       0x84   0x220A             MOVS     R2,#+10
   \       0x86   0x....             LDR.N    R1,??DataTable3_6
   \       0x88   0x....'....        BL       __aeabi_memcpy
    118              memcpy(signsource + strlen(signsource), device_name, strlen(device_name));
   \       0x8C   0x4630             MOV      R0,R6
   \       0x8E   0x....'....        BL       strlen
   \       0x92   0x4605             MOV      R5,R0
   \       0x94   0xA809             ADD      R0,SP,#+36
   \       0x96   0x....'....        BL       strlen
   \       0x9A   0xA909             ADD      R1,SP,#+36
   \       0x9C   0x4408             ADD      R0,R1,R0
   \       0x9E   0x462A             MOV      R2,R5
   \       0xA0   0x4631             MOV      R1,R6
   \       0xA2   0x....'....        BL       __aeabi_memcpy
    119              memcpy(signsource + strlen(signsource), "productKey", strlen("productKey"));
   \       0xA6   0xA809             ADD      R0,SP,#+36
   \       0xA8   0x....'....        BL       strlen
   \       0xAC   0xA909             ADD      R1,SP,#+36
   \       0xAE   0x4408             ADD      R0,R1,R0
   \       0xB0   0x220A             MOVS     R2,#+10
   \       0xB2   0x....             LDR.N    R1,??DataTable3_7
   \       0xB4   0x....'....        BL       __aeabi_memcpy
    120              memcpy(signsource + strlen(signsource), product_key, strlen(product_key));
   \       0xB8   0x4638             MOV      R0,R7
   \       0xBA   0x....'....        BL       strlen
   \       0xBE   0x4605             MOV      R5,R0
   \       0xC0   0xA809             ADD      R0,SP,#+36
   \       0xC2   0x....'....        BL       strlen
   \       0xC6   0xA909             ADD      R1,SP,#+36
   \       0xC8   0x4408             ADD      R0,R1,R0
   \       0xCA   0x462A             MOV      R2,R5
   \       0xCC   0x4639             MOV      R1,R7
   \       0xCE   0x....'....        BL       __aeabi_memcpy
    121              memcpy(signsource + strlen(signsource), "timestamp", strlen("timestamp"));
   \       0xD2   0xA809             ADD      R0,SP,#+36
   \       0xD4   0x....'....        BL       strlen
   \       0xD8   0xA909             ADD      R1,SP,#+36
   \       0xDA   0x4408             ADD      R0,R1,R0
   \       0xDC   0x2209             MOVS     R2,#+9
   \       0xDE   0x....             LDR.N    R1,??DataTable3_8
   \       0xE0   0x....'....        BL       __aeabi_memcpy
    122              memcpy(signsource + strlen(signsource), TIMESTAMP_VALUE, strlen(TIMESTAMP_VALUE));
   \       0xE4   0xA809             ADD      R0,SP,#+36
   \       0xE6   0x....'....        BL       strlen
   \       0xEA   0xA909             ADD      R1,SP,#+36
   \       0xEC   0x4408             ADD      R0,R1,R0
   \       0xEE   0x220D             MOVS     R2,#+13
   \       0xF0   0x....             LDR.N    R1,??DataTable3_9
   \       0xF2   0x....'....        BL       __aeabi_memcpy
    123          
    124              utils_hmac_sha256((uint8_t *)signsource, strlen(signsource), (uint8_t *)device_secret,
    125                                strlen(device_secret), sign_hex);
   \       0xF6   0x4620             MOV      R0,R4
   \       0xF8   0x....'....        BL       strlen
   \       0xFC   0x4605             MOV      R5,R0
   \       0xFE   0xA809             ADD      R0,SP,#+36
   \      0x100   0x....'....        BL       strlen
   \      0x104   0xA901             ADD      R1,SP,#+4
   \      0x106   0x9100             STR      R1,[SP, #+0]
   \      0x108   0x462B             MOV      R3,R5
   \      0x10A   0x4622             MOV      R2,R4
   \      0x10C   0x4601             MOV      R1,R0
   \      0x10E   0xA809             ADD      R0,SP,#+36
   \      0x110   0x....'....        BL       utils_hmac_sha256
    126          
    127              _hex2str(sign_hex, 32, sign_string);
   \      0x114   0x4642             MOV      R2,R8
   \      0x116   0x2120             MOVS     R1,#+32
   \      0x118   0xA801             ADD      R0,SP,#+4
   \      0x11A   0x....'....        BL       _hex2str
    128          
    129              return SUCCESS_RETURN;
   \      0x11E   0x2000             MOVS     R0,#+0
   \                     ??_iotx_generate_sign_string_1: (+1)
   \      0x120   0xB03B             ADD      SP,SP,#+236
   \      0x122   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    130          }
    131          

   \                                 In section .text, align 2, keep-with-next
    132          int32_t IOT_Sign_MQTT(iotx_mqtt_region_types_t region, iotx_dev_meta_info_t *meta, iotx_sign_mqtt_t *signout)
    133          {
   \                     IOT_Sign_MQTT: (+1)
   \        0x0   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \        0x4   0xB08F             SUB      SP,SP,#+60
   \        0x6   0x4606             MOV      R6,R0
   \        0x8   0x460C             MOV      R4,R1
   \        0xA   0x4615             MOV      R5,R2
    134              uint16_t length = 0;
    135              char device_id[IOTX_PRODUCT_KEY_LEN + IOTX_DEVICE_NAME_LEN + 1] = {0};
   \        0xC   0xA801             ADD      R0,SP,#+4
   \        0xE   0x2138             MOVS     R1,#+56
   \       0x10   0x....'....        BL       __aeabi_memclr4
    136              int res;
    137          
    138              if (region >= IOTX_MQTT_DOMAIN_NUMBER || meta == NULL) {
   \       0x14   0x4630             MOV      R0,R6
   \       0x16   0x2806             CMP      R0,#+6
   \       0x18   0xDA01             BGE.N    ??IOT_Sign_MQTT_0
   \       0x1A   0x2C00             CMP      R4,#+0
   \       0x1C   0xD102             BNE.N    ??IOT_Sign_MQTT_1
    139                  return -1;
   \                     ??IOT_Sign_MQTT_0: (+1)
   \       0x1E   0xF04F 0x30FF      MOV      R0,#-1
   \       0x22   0xE0D9             B.N      ??IOT_Sign_MQTT_2
    140              }
    141          
    142              memset(signout, 0, sizeof(iotx_sign_mqtt_t));
   \                     ??IOT_Sign_MQTT_1: (+1)
   \       0x24   0x2200             MOVS     R2,#+0
   \       0x26   0xF44F 0x71C6      MOV      R1,#+396
   \       0x2A   0x4628             MOV      R0,R5
   \       0x2C   0x....'....        BL       __aeabi_memset
    143          
    144              memcpy(device_id, meta->product_key, strlen(meta->product_key));
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       strlen
   \       0x36   0x4602             MOV      R2,R0
   \       0x38   0x4621             MOV      R1,R4
   \       0x3A   0xA801             ADD      R0,SP,#+4
   \       0x3C   0x....'....        BL       __aeabi_memcpy
    145              memcpy(device_id + strlen(device_id), ".", strlen("."));
   \       0x40   0xA801             ADD      R0,SP,#+4
   \       0x42   0x....'....        BL       strlen
   \       0x46   0xA901             ADD      R1,SP,#+4
   \       0x48   0x4408             ADD      R0,R1,R0
   \       0x4A   0x....             ADR.N    R7,??DataTable3  ;; "."
   \       0x4C   0x2201             MOVS     R2,#+1
   \       0x4E   0x4639             MOV      R1,R7
   \       0x50   0x....'....        BL       __aeabi_memcpy
    146              memcpy(device_id + strlen(device_id), meta->device_name, strlen(meta->device_name));
   \       0x54   0xF104 0x0056      ADD      R0,R4,#+86
   \       0x58   0x....'....        BL       strlen
   \       0x5C   0x4680             MOV      R8,R0
   \       0x5E   0xA801             ADD      R0,SP,#+4
   \       0x60   0x....'....        BL       strlen
   \       0x64   0xA901             ADD      R1,SP,#+4
   \       0x66   0x4408             ADD      R0,R1,R0
   \       0x68   0x4642             MOV      R2,R8
   \       0x6A   0xF104 0x0156      ADD      R1,R4,#+86
   \       0x6E   0x....'....        BL       __aeabi_memcpy
    147          
    148              /* setup clientid */
    149              if (_sign_get_clientid(signout->clientid, device_id) != SUCCESS_RETURN) {
   \       0x72   0xA901             ADD      R1,SP,#+4
   \       0x74   0xF105 0x0042      ADD      R0,R5,#+66
   \       0x78   0x....'....        BL       _sign_get_clientid
   \       0x7C   0x2800             CMP      R0,#+0
   \       0x7E   0xD001             BEQ.N    ??IOT_Sign_MQTT_3
    150                  return ERROR_DEV_SIGN_CLIENT_ID_TOO_SHORT;
   \       0x80   0x....             LDR.N    R0,??DataTable3_10  ;; 0xfffffbb3
   \       0x82   0xE0A9             B.N      ??IOT_Sign_MQTT_2
    151              }
    152          
    153              /* setup password */
    154              memset(signout->password, 0, DEV_SIGN_PASSWORD_MAXLEN);
   \                     ??IOT_Sign_MQTT_3: (+1)
   \       0x84   0x2200             MOVS     R2,#+0
   \       0x86   0x2141             MOVS     R1,#+65
   \       0x88   0xF505 0x70A5      ADD      R0,R5,#+330
   \       0x8C   0x....'....        BL       __aeabi_memset
    155              res = _iotx_generate_sign_string(device_id, meta->device_name, meta->product_key, meta->device_secret, signout->password);
   \       0x90   0xF505 0x70A5      ADD      R0,R5,#+330
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0xF104 0x0377      ADD      R3,R4,#+119
   \       0x9A   0x4622             MOV      R2,R4
   \       0x9C   0xF104 0x0156      ADD      R1,R4,#+86
   \       0xA0   0xA801             ADD      R0,SP,#+4
   \       0xA2   0x....'....        BL       _iotx_generate_sign_string
    156              if (res < SUCCESS_RETURN) {
   \       0xA6   0x2800             CMP      R0,#+0
   \       0xA8   0xF100 0x8096      BMI.W    ??IOT_Sign_MQTT_2
    157                  return res;
    158              }
    159          
    160              /* setup hostname */
    161              if (IOTX_CLOUD_REGION_CUSTOM == region) {
   \       0xAC   0x4630             MOV      R0,R6
   \       0xAE   0x2805             CMP      R0,#+5
   \       0xB0   0xD11A             BNE.N    ??IOT_Sign_MQTT_4
    162                  if (g_infra_mqtt_domain[region] == NULL) {
   \       0xB2   0x....             LDR.N    R6,??DataTable3_11
   \       0xB4   0x6970             LDR      R0,[R6, #+20]
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xD102             BNE.N    ??IOT_Sign_MQTT_5
    163                      return ERROR_DEV_SIGN_CUSTOM_DOMAIN_IS_NULL;
   \       0xBA   0xF46F 0x608A      MVN      R0,#+1104
   \       0xBE   0xE08B             B.N      ??IOT_Sign_MQTT_2
    164                  }
    165          
    166                  length = strlen(g_infra_mqtt_domain[region]) + 1;
   \                     ??IOT_Sign_MQTT_5: (+1)
   \       0xC0   0x....'....        BL       strlen
   \       0xC4   0x1C40             ADDS     R0,R0,#+1
    167                  if (length >= DEV_SIGN_HOSTNAME_MAXLEN) {
   \       0xC6   0xB280             UXTH     R0,R0
   \       0xC8   0x2840             CMP      R0,#+64
   \       0xCA   0xDA20             BGE.N    ??IOT_Sign_MQTT_6
    168                      return ERROR_DEV_SIGN_HOST_NAME_TOO_SHORT;
    169                  }
    170          
    171                  memset(signout->hostname, 0, DEV_SIGN_HOSTNAME_MAXLEN);
   \       0xCC   0x2200             MOVS     R2,#+0
   \       0xCE   0x2140             MOVS     R1,#+64
   \       0xD0   0x4628             MOV      R0,R5
   \       0xD2   0x....'....        BL       __aeabi_memset
    172                  memcpy(signout->hostname, g_infra_mqtt_domain[region], strlen(g_infra_mqtt_domain[region]));
   \       0xD6   0x6970             LDR      R0,[R6, #+20]
   \       0xD8   0x....'....        BL       strlen
   \       0xDC   0x4602             MOV      R2,R0
   \       0xDE   0x6971             LDR      R1,[R6, #+20]
   \       0xE0   0x4628             MOV      R0,R5
   \       0xE2   0x....'....        BL       __aeabi_memcpy
    173              }
   \       0xE6   0xE038             B.N      ??IOT_Sign_MQTT_7
    174              else {
    175                  length = strlen(meta->product_key) + strlen(g_infra_mqtt_domain[region]) + 2;
   \                     ??IOT_Sign_MQTT_4: (+1)
   \       0xE8   0x4620             MOV      R0,R4
   \       0xEA   0x....'....        BL       strlen
   \       0xEE   0x4681             MOV      R9,R0
   \       0xF0   0x....'....        LDR.W    R8,??DataTable3_11
   \       0xF4   0x4630             MOV      R0,R6
   \       0xF6   0xF858 0x0020      LDR      R0,[R8, R0, LSL #+2]
   \       0xFA   0x....'....        BL       strlen
   \       0xFE   0x4481             ADD      R9,R0,R9
   \      0x100   0xF109 0x0902      ADD      R9,R9,#+2
    176                  if (length >= DEV_SIGN_HOSTNAME_MAXLEN) {
   \      0x104   0xFA1F 0xF989      UXTH     R9,R9
   \      0x108   0xF1B9 0x0F40      CMP      R9,#+64
   \      0x10C   0xDB01             BLT.N    ??IOT_Sign_MQTT_8
    177                      return ERROR_DEV_SIGN_HOST_NAME_TOO_SHORT;
   \                     ??IOT_Sign_MQTT_6: (+1)
   \      0x10E   0x....             LDR.N    R0,??DataTable3_12  ;; 0xfffffbb4
   \      0x110   0xE062             B.N      ??IOT_Sign_MQTT_2
    178                  }
    179                  memset(signout->hostname, 0, DEV_SIGN_HOSTNAME_MAXLEN);
   \                     ??IOT_Sign_MQTT_8: (+1)
   \      0x112   0x2200             MOVS     R2,#+0
   \      0x114   0x2140             MOVS     R1,#+64
   \      0x116   0x4628             MOV      R0,R5
   \      0x118   0x....'....        BL       __aeabi_memset
    180                  memcpy(signout->hostname, meta->product_key, strlen(meta->product_key));
   \      0x11C   0x4620             MOV      R0,R4
   \      0x11E   0x....'....        BL       strlen
   \      0x122   0x4602             MOV      R2,R0
   \      0x124   0x4621             MOV      R1,R4
   \      0x126   0x4628             MOV      R0,R5
   \      0x128   0x....'....        BL       __aeabi_memcpy
    181                  memcpy(signout->hostname + strlen(signout->hostname), ".", strlen("."));
   \      0x12C   0x4628             MOV      R0,R5
   \      0x12E   0x....'....        BL       strlen
   \      0x132   0x4428             ADD      R0,R5,R0
   \      0x134   0x2201             MOVS     R2,#+1
   \      0x136   0x4639             MOV      R1,R7
   \      0x138   0x....'....        BL       __aeabi_memcpy
    182                  memcpy(signout->hostname + strlen(signout->hostname), g_infra_mqtt_domain[region],
    183                      strlen(g_infra_mqtt_domain[region]));
   \      0x13C   0x4630             MOV      R0,R6
   \      0x13E   0xF858 0x0020      LDR      R0,[R8, R0, LSL #+2]
   \      0x142   0x....'....        BL       strlen
   \      0x146   0x4607             MOV      R7,R0
   \      0x148   0x4628             MOV      R0,R5
   \      0x14A   0x....'....        BL       strlen
   \      0x14E   0x4428             ADD      R0,R5,R0
   \      0x150   0x463A             MOV      R2,R7
   \      0x152   0xF858 0x1026      LDR      R1,[R8, R6, LSL #+2]
   \      0x156   0x....'....        BL       __aeabi_memcpy
    184              }
    185          
    186              /* setup username */
    187              length = strlen(meta->device_name) + strlen(meta->product_key) + 2;
   \                     ??IOT_Sign_MQTT_7: (+1)
   \      0x15A   0xF104 0x0056      ADD      R0,R4,#+86
   \      0x15E   0x....'....        BL       strlen
   \      0x162   0x4606             MOV      R6,R0
   \      0x164   0x4620             MOV      R0,R4
   \      0x166   0x....'....        BL       strlen
   \      0x16A   0x1986             ADDS     R6,R0,R6
   \      0x16C   0x1CB6             ADDS     R6,R6,#+2
    188              if (length >= DEV_SIGN_USERNAME_MAXLEN) {
   \      0x16E   0xB2B6             UXTH     R6,R6
   \      0x170   0x2E40             CMP      R6,#+64
   \      0x172   0xDB01             BLT.N    ??IOT_Sign_MQTT_9
    189                  return ERROR_DEV_SIGN_USERNAME_TOO_SHORT;
   \      0x174   0x....             LDR.N    R0,??DataTable3_13  ;; 0xfffffbb2
   \      0x176   0xE02F             B.N      ??IOT_Sign_MQTT_2
    190              }
    191              memset(signout->username, 0, DEV_SIGN_USERNAME_MAXLEN);
   \                     ??IOT_Sign_MQTT_9: (+1)
   \      0x178   0x2200             MOVS     R2,#+0
   \      0x17A   0x2140             MOVS     R1,#+64
   \      0x17C   0xF505 0x7085      ADD      R0,R5,#+266
   \      0x180   0x....'....        BL       __aeabi_memset
    192              memcpy(signout->username, meta->device_name, strlen(meta->device_name));
   \      0x184   0xF104 0x0056      ADD      R0,R4,#+86
   \      0x188   0x....'....        BL       strlen
   \      0x18C   0x4602             MOV      R2,R0
   \      0x18E   0xF104 0x0156      ADD      R1,R4,#+86
   \      0x192   0xF505 0x7085      ADD      R0,R5,#+266
   \      0x196   0x....'....        BL       __aeabi_memcpy
    193              memcpy(signout->username + strlen(signout->username), "&", strlen("&"));
   \      0x19A   0xF505 0x7085      ADD      R0,R5,#+266
   \      0x19E   0x....'....        BL       strlen
   \      0x1A2   0x4428             ADD      R0,R5,R0
   \      0x1A4   0xF500 0x7085      ADD      R0,R0,#+266
   \      0x1A8   0x2201             MOVS     R2,#+1
   \      0x1AA   0x....             ADR.N    R1,??DataTable3_1  ;; "&"
   \      0x1AC   0x....'....        BL       __aeabi_memcpy
    194              memcpy(signout->username + strlen(signout->username), meta->product_key, strlen(meta->product_key));
   \      0x1B0   0x4620             MOV      R0,R4
   \      0x1B2   0x....'....        BL       strlen
   \      0x1B6   0x4606             MOV      R6,R0
   \      0x1B8   0xF505 0x7085      ADD      R0,R5,#+266
   \      0x1BC   0x....'....        BL       strlen
   \      0x1C0   0x4428             ADD      R0,R5,R0
   \      0x1C2   0xF500 0x7085      ADD      R0,R0,#+266
   \      0x1C6   0x4632             MOV      R2,R6
   \      0x1C8   0x4621             MOV      R1,R4
   \      0x1CA   0x....'....        BL       __aeabi_memcpy
    195          
    196              /* setup port */
    197          #ifdef SUPPORT_TLS
    198              signout->port = 443;
   \      0x1CE   0xF240 0x10BB      MOVW     R0,#+443
   \      0x1D2   0xF8A5 0x0040      STRH     R0,[R5, #+64]
    199          #else
    200              signout->port = 1883;
    201          #endif /* #ifdef SUPPORT_TLS */
    202              return SUCCESS_RETURN;
   \      0x1D6   0x2000             MOVS     R0,#+0
   \                     ??IOT_Sign_MQTT_2: (+1)
   \      0x1D8   0xB00F             ADD      SP,SP,#+60
   \      0x1DA   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    203          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x7C 0x00          DC8      "|",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x3D 0x00          DC8      "=",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x2C 0x00          DC8      ",",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x2E 0x00          DC8      ".",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x26 0x00          DC8      "&",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     clientid_kv

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0xFFFF'FBB0        DC32     0xfffffbb0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \        0x0   0xFFFF'FBB3        DC32     0xfffffbb3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \        0x0   0x....'....        DC32     g_infra_mqtt_domain

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \        0x0   0xFFFF'FBB4        DC32     0xfffffbb4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \        0x0   0xFFFF'FBB2        DC32     0xfffffbb2

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x74 0x69          DC8 "timestamp"
   \              0x6D 0x65    
   \              0x73 0x74    
   \              0x61 0x6D    
   \              0x70 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x32 0x35          DC8 "2524608000000"
   \              0x32 0x34    
   \              0x36 0x30    
   \              0x38 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x5F 0x76          DC8 "_v"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x73 0x64          DC8 "sdk-c-3.0.1"
   \              0x6B 0x2D    
   \              0x63 0x2D    
   \              0x33 0x2E    
   \              0x30 0x2E    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x73 0x65          DC8 "securemode"
   \              0x63 0x75    
   \              0x72 0x65    
   \              0x6D 0x6F    
   \              0x64 0x65    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     ?_5:
   \        0x0   0x32 0x00          DC8 "2"

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x73 0x69          DC8 "signmethod"
   \              0x67 0x6E    
   \              0x6D 0x65    
   \              0x74 0x68    
   \              0x6F 0x64    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x68 0x6D          DC8 "hmacsha256"
   \              0x61 0x63    
   \              0x73 0x68    
   \              0x61 0x32    
   \              0x35 0x36    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x6C 0x61          DC8 "lan"
   \              0x6E 0x00    

   \                                 In section .rodata, align 2
   \                     ?_9:
   \        0x0   0x43 0x00          DC8 "C"

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x67 0x77          DC8 "gw"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     ?_11:
   \        0x0   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x65 0x78          DC8 "ext"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x30 0x31          DC8 "0123456789ABCDEF"
   \              0x32 0x33    
   \              0x34 0x35    
   \              0x36 0x37    
   \              0x38 0x39    
   \              0x41 0x42    
   \              0x43 0x44    
   \              0x45 0x46    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \        0x0   0x7C 0x00          DC8 "|"

   \                                 In section .rodata, align 2
   \        0x0   0x3D 0x00          DC8 "="

   \                                 In section .rodata, align 2
   \        0x0   0x2C 0x00          DC8 ","

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x45   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x5C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x73   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x8A   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0xA1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0xB8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x63 0x6C          DC8 "clientId"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x49 0x64    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x64 0x65          DC8 "deviceName"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x4E 0x61    
   \              0x6D 0x65    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x70 0x72          DC8 "productKey"
   \              0x6F 0x64    
   \              0x75 0x63    
   \              0x74 0x4B    
   \              0x65 0x79    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x17   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x2E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 2
   \        0x0   0x2E 0x00          DC8 "."

   \                                 In section .rodata, align 2
   \        0x0   0x26 0x00          DC8 "&"
    204          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      88   IOT_Sign_MQTT
        88   -> __aeabi_memclr4
        88   -> __aeabi_memcpy
        88   -> __aeabi_memset
        88   -> _iotx_generate_sign_string
        88   -> _sign_get_clientid
        88   -> strlen
      12   _hex2str
     264   _iotx_generate_sign_string
       264   -> __aeabi_memclr4
       264   -> __aeabi_memcpy
       264   -> __aeabi_memcpy4
       264   -> __aeabi_memset4
       264   -> _hex2str
       264   -> strlen
       264   -> utils_hmac_sha256
      24   _sign_get_clientid
        24   -> __aeabi_memcpy
        24   -> __aeabi_memset
        24   -> strlen


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      12  ?_0
      16  ?_1
       4  ?_10
       2  ?_11
       4  ?_12
      20  ?_13
       2  ?_14
       2  ?_15
       2  ?_16
     200  ?_17
      32  ?_18
      12  ?_19
       4  ?_2
      12  ?_20
      12  ?_21
      56  ?_22
       2  ?_23
       2  ?_24
      12  ?_3
      12  ?_4
       2  ?_5
      12  ?_6
      12  ?_7
       4  ?_8
       2  ?_9
     478  IOT_Sign_MQTT
      46  _hex2str
     294  _iotx_generate_sign_string
     234  _sign_get_clientid
      56  clientid_kv

 
    56 bytes in section .data
   452 bytes in section .rodata
 1 120 bytes in section .text
 
 1 120 bytes of CODE  memory
   452 bytes of CONST memory
    56 bytes of DATA  memory

Errors: none
Warnings: none
