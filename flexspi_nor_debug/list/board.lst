###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.3.193/W32 for ARM         10/Jun/2019  13:48:02
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  C:\Development\smart_washing_machine_3080\board\board.c
#    Command line =  
#        -f C:\Users\nxf42695\AppData\Local\Temp\1\EW95E5.tmp
#        (C:\Development\smart_washing_machine_3080\board\board.c -D DEBUG -D
#        USE_RTOS -D XIP_EXTERNAL_FLASH=1 -D XIP_BOOT_HEADER_ENABLE=1 -D
#        CPU_MIMXRT1052DVL6B -D FSL_RTOS_FREE_RTOS -D PRINTF_ADVANCED_ENABLE -D
#        "MBEDTLS_CONFIG_FILE=\"ksdk_mbedtls_config.h\"" -lC
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list -lA
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list
#        --diag_suppress Pa082,Pa050 -o
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" --preinclude
#        C:\Development\smart_washing_machine_3080/source\app_preinclude.h -I
#        C:\Development\smart_washing_machine_3080/board\ -I
#        C:\Development\smart_washing_machine_3080/source\ -I
#        C:\Development\smart_washing_machine_3080/CMSIS\ -I
#        C:\Development\smart_washing_machine_3080/amazon-freertos/freertos/portable\
#        -I C:\Development\smart_washing_machine_3080/amazon-freertos/include\
#        -I C:\Development\smart_washing_machine_3080/component/lists\ -I
#        C:\Development\smart_washing_machine_3080/component/serial_manager\ -I
#        C:\Development\smart_washing_machine_3080/component/uart\ -I
#        C:\Development\smart_washing_machine_3080/component/kv\ -I
#        C:\Development\smart_washing_machine_3080/component/kv/include\ -I
#        C:\Development\smart_washing_machine_3080/device\ -I
#        C:\Development\smart_washing_machine_3080/doc\ -I
#        C:\Development\smart_washing_machine_3080/drivers\ -I
#        C:\Development\smart_washing_machine_3080/src\ -I
#        C:\Development\smart_washing_machine_3080/startup\ -I
#        C:\Development\smart_washing_machine_3080/utilities\ -I
#        C:\Development\smart_washing_machine_3080/xip\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\atm\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_model\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_sign\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\infra\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\mqtt\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\wrappers\external_libs\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\coap_cloud\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\CoAPPacket\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\coap_server\server\
#        -I C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\ -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\os\
#        -I
#        C:\Development\smart_washing_machine_3080\csdk\eng\dev_bind\impl\awss_reset\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\mbedtls\
#        -I C:\Development\smart_washing_machine_3080\mbedtls\include\ -I
#        C:\Development\smart_washing_machine_3080\mbedtls\port\ksdk\ -Om)
#    Locale       =  C
#    List file    =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\list\board.lst
#    Object file  =  
#        C:\Development\smart_washing_machine_3080\flexspi_nor_debug\obj\board.o
#
###############################################################################

C:\Development\smart_washing_machine_3080\board\board.c
      1          /*
      2           * Copyright 2017-2018 NXP
      3           * All rights reserved.
      4           *
      5           * SPDX-License-Identifier: BSD-3-Clause
      6           */
      7          
      8          #include "fsl_common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void ARM_MPU_Enable(uint32_t)
   \                     ARM_MPU_Enable: (+1)
   \        0x0   0xF3BF 0x8F4F      DSB      SY
   \        0x4   0xF3BF 0x8F6F      ISB      SY
   \        0x8   0xF040 0x0001      ORR      R0,R0,#0x1
   \        0xC   0x....'....        LDR.W    R1,??DataTable10  ;; 0xe000ed94
   \       0x10   0x6008             STR      R0,[R1, #+0]
   \       0x12   0x....'....        LDR.W    R0,??DataTable10_1  ;; 0xe000ed24
   \       0x16   0x6801             LDR      R1,[R0, #+0]
   \       0x18   0xF441 0x3180      ORR      R1,R1,#0x10000
   \       0x1C   0x6001             STR      R1,[R0, #+0]
   \       0x1E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void ARM_MPU_Disable(void)
   \                     ARM_MPU_Disable: (+1)
   \        0x0   0xF3BF 0x8F4F      DSB      SY
   \        0x4   0xF3BF 0x8F6F      ISB      SY
   \        0x8   0x....'....        LDR.W    R0,??DataTable10_1  ;; 0xe000ed24
   \        0xC   0x6801             LDR      R1,[R0, #+0]
   \        0xE   0xF421 0x3180      BIC      R1,R1,#0x10000
   \       0x12   0x6001             STR      R1,[R0, #+0]
   \       0x14   0x....'....        LDR.W    R0,??DataTable10  ;; 0xe000ed94
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0x0849             LSRS     R1,R1,#+1
   \       0x1C   0x0049             LSLS     R1,R1,#+1
   \       0x1E   0x6001             STR      R1,[R0, #+0]
   \       0x20   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void SCB_EnableICache(void)
   \                     SCB_EnableICache: (+1)
   \        0x0   0xF3BF 0x8F4F      DSB      SY
   \        0x4   0xF3BF 0x8F6F      ISB      SY
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x....'....        LDR.W    R1,??DataTable10_2  ;; 0xe000ef50
   \        0xE   0x6008             STR      R0,[R1, #+0]
   \       0x10   0xF3BF 0x8F4F      DSB      SY
   \       0x14   0xF3BF 0x8F6F      ISB      SY
   \       0x18   0x....'....        LDR.W    R0,??DataTable10_3  ;; 0xe000ed14
   \       0x1C   0x6801             LDR      R1,[R0, #+0]
   \       0x1E   0xF441 0x3100      ORR      R1,R1,#0x20000
   \       0x22   0x6001             STR      R1,[R0, #+0]
   \       0x24   0xF3BF 0x8F4F      DSB      SY
   \       0x28   0xF3BF 0x8F6F      ISB      SY
   \       0x2C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void SCB_DisableICache(void)
   \                     SCB_DisableICache: (+1)
   \        0x0   0xF3BF 0x8F4F      DSB      SY
   \        0x4   0xF3BF 0x8F6F      ISB      SY
   \        0x8   0x....'....        LDR.W    R0,??DataTable10_3  ;; 0xe000ed14
   \        0xC   0x6801             LDR      R1,[R0, #+0]
   \        0xE   0xF421 0x3100      BIC      R1,R1,#0x20000
   \       0x12   0x6001             STR      R1,[R0, #+0]
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x....'....        LDR.W    R1,??DataTable10_2  ;; 0xe000ef50
   \       0x1A   0x6008             STR      R0,[R1, #+0]
   \       0x1C   0xF3BF 0x8F4F      DSB      SY
   \       0x20   0xF3BF 0x8F6F      ISB      SY
   \       0x24   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void SCB_EnableDCache(void)
   \                     SCB_EnableDCache: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        LDR.W    R1,??DataTable10_4  ;; 0xe000ed84
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0xF3BF 0x8F4F      DSB      SY
   \        0xE   0x....'....        LDR.W    R0,??DataTable10_5  ;; 0xe000ed80
   \       0x12   0x6801             LDR      R1,[R0, #+0]
   \       0x14   0xF3C1 0x324E      UBFX     R2,R1,#+13,#+15
   \       0x18   0x....'....        LDR.W    R4,??DataTable10_6  ;; 0xe000ef60
   \                     ??SCB_EnableDCache_0: (+1)
   \       0x1C   0xF3C1 0x03C9      UBFX     R3,R1,#+3,#+10
   \                     ??SCB_EnableDCache_1: (+1)
   \       0x20   0xF643 0x70E0      MOVW     R0,#+16352
   \       0x24   0xEA00 0x1042      AND      R0,R0,R2, LSL #+5
   \       0x28   0xEA40 0x7083      ORR      R0,R0,R3, LSL #+30
   \       0x2C   0x6020             STR      R0,[R4, #+0]
   \       0x2E   0x4618             MOV      R0,R3
   \       0x30   0x1E43             SUBS     R3,R0,#+1
   \       0x32   0x2800             CMP      R0,#+0
   \       0x34   0xD1F4             BNE.N    ??SCB_EnableDCache_1
   \       0x36   0x4610             MOV      R0,R2
   \       0x38   0x1E42             SUBS     R2,R0,#+1
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD1EE             BNE.N    ??SCB_EnableDCache_0
   \       0x3E   0xF3BF 0x8F4F      DSB      SY
   \       0x42   0x....'....        LDR.W    R0,??DataTable10_3  ;; 0xe000ed14
   \       0x46   0x6801             LDR      R1,[R0, #+0]
   \       0x48   0xF441 0x3180      ORR      R1,R1,#0x10000
   \       0x4C   0x6001             STR      R1,[R0, #+0]
   \       0x4E   0xF3BF 0x8F4F      DSB      SY
   \       0x52   0xF3BF 0x8F6F      ISB      SY
   \       0x56   0xBC10             POP      {R4}
   \       0x58   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void SCB_DisableDCache(void)
   \                     SCB_DisableDCache: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        LDR.W    R1,??DataTable10_4  ;; 0xe000ed84
   \        0x8   0x6008             STR      R0,[R1, #+0]
   \        0xA   0xF3BF 0x8F4F      DSB      SY
   \        0xE   0x....'....        LDR.W    R0,??DataTable10_3  ;; 0xe000ed14
   \       0x12   0x6801             LDR      R1,[R0, #+0]
   \       0x14   0xF421 0x3180      BIC      R1,R1,#0x10000
   \       0x18   0x6001             STR      R1,[R0, #+0]
   \       0x1A   0xF3BF 0x8F4F      DSB      SY
   \       0x1E   0x....'....        LDR.W    R0,??DataTable10_5  ;; 0xe000ed80
   \       0x22   0x6801             LDR      R1,[R0, #+0]
   \       0x24   0xF3C1 0x324E      UBFX     R2,R1,#+13,#+15
   \       0x28   0x....'....        LDR.W    R4,??DataTable10_7  ;; 0xe000ef74
   \                     ??SCB_DisableDCache_0: (+1)
   \       0x2C   0xF3C1 0x03C9      UBFX     R3,R1,#+3,#+10
   \                     ??SCB_DisableDCache_1: (+1)
   \       0x30   0xF643 0x70E0      MOVW     R0,#+16352
   \       0x34   0xEA00 0x1042      AND      R0,R0,R2, LSL #+5
   \       0x38   0xEA40 0x7083      ORR      R0,R0,R3, LSL #+30
   \       0x3C   0x6020             STR      R0,[R4, #+0]
   \       0x3E   0x4618             MOV      R0,R3
   \       0x40   0x1E43             SUBS     R3,R0,#+1
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD1F4             BNE.N    ??SCB_DisableDCache_1
   \       0x46   0x4610             MOV      R0,R2
   \       0x48   0x1E42             SUBS     R2,R0,#+1
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD1EE             BNE.N    ??SCB_DisableDCache_0
   \       0x4E   0xF3BF 0x8F4F      DSB      SY
   \       0x52   0xF3BF 0x8F6F      ISB      SY
   \       0x56   0xBC10             POP      {R4}
   \       0x58   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t CLOCK_GetMux(clock_mux_t)
   \                     CLOCK_GetMux: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0xF001 0x00FF      AND      R0,R1,#0xFF
   \        0x6   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \        0xA   0xF500 0x207C      ADD      R0,R0,#+1032192
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0xF3C1 0x324C      UBFX     R2,R1,#+13,#+13
   \       0x14   0x460B             MOV      R3,R1
   \       0x16   0x121B             ASRS     R3,R3,#+8
   \       0x18   0xF003 0x031F      AND      R3,R3,#0x1F
   \       0x1C   0x409A             LSLS     R2,R2,R3
   \       0x1E   0x4010             ANDS     R0,R2,R0
   \       0x20   0x1209             ASRS     R1,R1,#+8
   \       0x22   0xF001 0x011F      AND      R1,R1,#0x1F
   \       0x26   0x40C8             LSRS     R0,R0,R1
   \       0x28   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t CLOCK_GetDiv(clock_div_t)
   \                     CLOCK_GetDiv: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0xF001 0x00FF      AND      R0,R1,#0xFF
   \        0x6   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \        0xA   0xF500 0x207C      ADD      R0,R0,#+1032192
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0xF3C1 0x324C      UBFX     R2,R1,#+13,#+13
   \       0x14   0x460B             MOV      R3,R1
   \       0x16   0x121B             ASRS     R3,R3,#+8
   \       0x18   0xF003 0x031F      AND      R3,R3,#0x1F
   \       0x1C   0x409A             LSLS     R2,R2,R3
   \       0x1E   0x4010             ANDS     R0,R2,R0
   \       0x20   0x1209             ASRS     R1,R1,#+8
   \       0x22   0xF001 0x011F      AND      R1,R1,#0x1F
   \       0x26   0x40C8             LSRS     R0,R0,R1
   \       0x28   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t CLOCK_GetOscFreq(void)
   \                     CLOCK_GetOscFreq: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable10_8  ;; 0x400d8270
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x06C0             LSLS     R0,R0,#+27
   \        0x6   0xD501             BPL.N    ??CLOCK_GetOscFreq_0
   \        0x8   0x....             LDR.N    R0,??DataTable10_9  ;; 0x16e3600
   \        0xA   0x4770             BX       LR
   \                     ??CLOCK_GetOscFreq_0: (+1)
   \        0xC   0x....             LDR.N    R0,??DataTable10_10
   \        0xE   0x6800             LDR      R0,[R0, #+0]
   \       0x10   0x4770             BX       LR               ;; return
      9          #include "fsl_debug_console.h"
     10          #include "board.h"
     11          #if defined(SDK_I2C_BASED_COMPONENT_USED) && SDK_I2C_BASED_COMPONENT_USED
     12          #include "fsl_lpi2c.h"
     13          #endif /* SDK_I2C_BASED_COMPONENT_USED */
     14          #include "fsl_iomuxc.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void IOMUXC_SetPinConfig(uint32_t, uint32_t, uint32_t, uint32_t, uint32_t, uint32_t)
   \                     IOMUXC_SetPinConfig: (+1)
   \        0x0   0x9800             LDR      R0,[SP, #+0]
   \        0x2   0x2800             CMP      R0,#+0
   \        0x4   0xD001             BEQ.N    ??IOMUXC_SetPinConfig_0
   \        0x6   0x9901             LDR      R1,[SP, #+4]
   \        0x8   0x6001             STR      R1,[R0, #+0]
   \                     ??IOMUXC_SetPinConfig_0: (+1)
   \        0xA   0x4770             BX       LR               ;; return
     15          /*******************************************************************************
     16           * Variables
     17           ******************************************************************************/
     18          
     19          /*******************************************************************************
     20           * Code
     21           ******************************************************************************/
     22          
     23          /* Get debug console frequency. */

   \                                 In section .text, align 2, keep-with-next
     24          uint32_t BOARD_DebugConsoleSrcFreq(void)
     25          {
   \                     BOARD_DebugConsoleSrcFreq: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     26              uint32_t freq;
     27          
     28              /* To make it simple, we assume default PLL and divider settings, and the only variable
     29                 from application is use PLL3 source or OSC source */
     30              if (CLOCK_GetMux(kCLOCK_UartMux) == 0) /* PLL3 div6 80M */
   \        0x2   0x....             LDR.N    R0,??DataTable10_11  ;; 0x80002624
   \        0x4   0x....'....        BL       CLOCK_GetMux
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD10C             BNE.N    ??BOARD_DebugConsoleSrcFreq_0
     31              {
     32                  freq = (CLOCK_GetPllFreq(kCLOCK_PllUsb1) / 6U) / (CLOCK_GetDiv(kCLOCK_UartDiv) + 1U);
   \        0xC   0x....             LDR.N    R0,??DataTable10_12  ;; 0x10000d
   \        0xE   0x....'....        BL       CLOCK_GetPllFreq
   \       0x12   0x2106             MOVS     R1,#+6
   \       0x14   0xFBB0 0xF4F1      UDIV     R4,R0,R1
   \       0x18   0x....             LDR.N    R0,??DataTable10_13  ;; 0x8007e024
   \       0x1A   0x....'....        BL       CLOCK_GetDiv
   \       0x1E   0x1C40             ADDS     R0,R0,#+1
   \       0x20   0xFBB4 0xF0F0      UDIV     R0,R4,R0
   \       0x24   0xBD10             POP      {R4,PC}
     33              }
     34              else
     35              {
     36                  freq = CLOCK_GetOscFreq() / (CLOCK_GetDiv(kCLOCK_UartDiv) + 1U);
   \                     ??BOARD_DebugConsoleSrcFreq_0: (+1)
   \       0x26   0x....'....        BL       CLOCK_GetOscFreq
   \       0x2A   0x4604             MOV      R4,R0
   \       0x2C   0x....             LDR.N    R0,??DataTable10_13  ;; 0x8007e024
   \       0x2E   0x....'....        BL       CLOCK_GetDiv
   \       0x32   0x1C40             ADDS     R0,R0,#+1
   \       0x34   0xFBB4 0xF0F0      UDIV     R0,R4,R0
     37              }
     38          
     39              return freq;
   \       0x38   0xBD10             POP      {R4,PC}          ;; return
     40          }
     41          
     42          /* Initialize debug console. */

   \                                 In section .text, align 2, keep-with-next
     43          void BOARD_InitDebugConsole(void)
     44          {
   \                     BOARD_InitDebugConsole: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     45              uint32_t uartClkSrcFreq = BOARD_DebugConsoleSrcFreq();
   \        0x2   0x....'....        BL       BOARD_DebugConsoleSrcFreq
     46          
     47              DbgConsole_Init(BOARD_DEBUG_UART_INSTANCE, BOARD_DEBUG_UART_BAUDRATE, BOARD_DEBUG_UART_TYPE, uartClkSrcFreq);
   \        0x6   0x4603             MOV      R3,R0
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0xF44F 0x31E1      MOV      R1,#+115200
   \        0xE   0x4610             MOV      R0,R2
   \       0x10   0xE8BD 0x5000      POP      {R12,LR}
   \       0x14   0x....'....        B.W      DbgConsole_Init
     48          }
     49          
     50          #if defined(SDK_I2C_BASED_COMPONENT_USED) && SDK_I2C_BASED_COMPONENT_USED
     51          void BOARD_LPI2C_Init(LPI2C_Type *base, uint32_t clkSrc_Hz)
     52          {
     53              lpi2c_master_config_t lpi2cConfig = {0};
     54          
     55              /*
     56               * lpi2cConfig.debugEnable = false;
     57               * lpi2cConfig.ignoreAck = false;
     58               * lpi2cConfig.pinConfig = kLPI2C_2PinOpenDrain;
     59               * lpi2cConfig.baudRate_Hz = 100000U;
     60               * lpi2cConfig.busIdleTimeout_ns = 0;
     61               * lpi2cConfig.pinLowTimeout_ns = 0;
     62               * lpi2cConfig.sdaGlitchFilterWidth_ns = 0;
     63               * lpi2cConfig.sclGlitchFilterWidth_ns = 0;
     64               */
     65              LPI2C_MasterGetDefaultConfig(&lpi2cConfig);
     66              LPI2C_MasterInit(base, &lpi2cConfig, clkSrc_Hz);
     67          }
     68          
     69          status_t BOARD_LPI2C_Send(LPI2C_Type *base,
     70                                    uint8_t deviceAddress,
     71                                    uint32_t subAddress,
     72                                    uint8_t subAddressSize,
     73                                    uint8_t *txBuff,
     74                                    uint8_t txBuffSize)
     75          {
     76              status_t reVal;
     77          
     78              /* Send master blocking data to slave */
     79              reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Write);
     80              if (kStatus_Success == reVal)
     81              {
     82                  while (LPI2C_MasterGetStatusFlags(base) & kLPI2C_MasterNackDetectFlag)
     83                  {
     84                  }
     85          
     86                  reVal = LPI2C_MasterSend(base, &subAddress, subAddressSize);
     87                  if (reVal != kStatus_Success)
     88                  {
     89                      return reVal;
     90                  }
     91          
     92                  reVal = LPI2C_MasterSend(base, txBuff, txBuffSize);
     93                  if (reVal != kStatus_Success)
     94                  {
     95                      return reVal;
     96                  }
     97          
     98                  reVal = LPI2C_MasterStop(base);
     99                  if (reVal != kStatus_Success)
    100                  {
    101                      return reVal;
    102                  }
    103              }
    104          
    105              return reVal;
    106          }
    107          
    108          status_t BOARD_LPI2C_Receive(LPI2C_Type *base,
    109                                       uint8_t deviceAddress,
    110                                       uint32_t subAddress,
    111                                       uint8_t subAddressSize,
    112                                       uint8_t *rxBuff,
    113                                       uint8_t rxBuffSize)
    114          {
    115              status_t reVal;
    116          
    117              reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Write);
    118              if (kStatus_Success == reVal)
    119              {
    120                  while (LPI2C_MasterGetStatusFlags(base) & kLPI2C_MasterNackDetectFlag)
    121                  {
    122                  }
    123          
    124                  reVal = LPI2C_MasterSend(base, &subAddress, subAddressSize);
    125                  if (reVal != kStatus_Success)
    126                  {
    127                      return reVal;
    128                  }
    129          
    130                  reVal = LPI2C_MasterRepeatedStart(base, deviceAddress, kLPI2C_Read);
    131          
    132                  if (reVal != kStatus_Success)
    133                  {
    134                      return reVal;
    135                  }
    136          
    137                  reVal = LPI2C_MasterReceive(base, rxBuff, rxBuffSize);
    138                  if (reVal != kStatus_Success)
    139                  {
    140                      return reVal;
    141                  }
    142          
    143                  reVal = LPI2C_MasterStop(base);
    144                  if (reVal != kStatus_Success)
    145                  {
    146                      return reVal;
    147                  }
    148              }
    149              return reVal;
    150          }
    151          
    152          status_t BOARD_LPI2C_SendSCCB(LPI2C_Type *base,
    153                                        uint8_t deviceAddress,
    154                                        uint32_t subAddress,
    155                                        uint8_t subAddressSize,
    156                                        uint8_t *txBuff,
    157                                        uint8_t txBuffSize)
    158          {
    159              return BOARD_LPI2C_Send(base, deviceAddress, subAddress, subAddressSize, txBuff, txBuffSize);
    160          }
    161          
    162          status_t BOARD_LPI2C_ReceiveSCCB(LPI2C_Type *base,
    163                                           uint8_t deviceAddress,
    164                                           uint32_t subAddress,
    165                                           uint8_t subAddressSize,
    166                                           uint8_t *rxBuff,
    167                                           uint8_t rxBuffSize)
    168          {
    169              status_t reVal;
    170          
    171              reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Write);
    172              if (kStatus_Success == reVal)
    173              {
    174                  while (LPI2C_MasterGetStatusFlags(base) & kLPI2C_MasterNackDetectFlag)
    175                  {
    176                  }
    177          
    178                  reVal = LPI2C_MasterSend(base, &subAddress, subAddressSize);
    179                  if (reVal != kStatus_Success)
    180                  {
    181                      return reVal;
    182                  }
    183          
    184                  /* SCCB does not support LPI2C repeat start, must stop then start. */
    185                  reVal = LPI2C_MasterStop(base);
    186          
    187                  if (reVal != kStatus_Success)
    188                  {
    189                      return reVal;
    190                  }
    191          
    192                  reVal = LPI2C_MasterStart(base, deviceAddress, kLPI2C_Read);
    193          
    194                  if (reVal != kStatus_Success)
    195                  {
    196                      return reVal;
    197                  }
    198          
    199                  reVal = LPI2C_MasterReceive(base, rxBuff, rxBuffSize);
    200                  if (reVal != kStatus_Success)
    201                  {
    202                      return reVal;
    203                  }
    204          
    205                  reVal = LPI2C_MasterStop(base);
    206                  if (reVal != kStatus_Success)
    207                  {
    208                      return reVal;
    209                  }
    210              }
    211              return reVal;
    212          }
    213          
    214          void BOARD_Accel_I2C_Init(void)
    215          {
    216              BOARD_LPI2C_Init(BOARD_ACCEL_I2C_BASEADDR, BOARD_ACCEL_I2C_CLOCK_FREQ);
    217          }
    218          
    219          status_t BOARD_Accel_I2C_Send(uint8_t deviceAddress, uint32_t subAddress, uint8_t subaddressSize, uint32_t txBuff)
    220          {
    221              uint8_t data = (uint8_t)txBuff;
    222          
    223              return BOARD_LPI2C_Send(BOARD_ACCEL_I2C_BASEADDR, deviceAddress, subAddress, subaddressSize, &data, 1);
    224          }
    225          
    226          status_t BOARD_Accel_I2C_Receive(
    227              uint8_t deviceAddress, uint32_t subAddress, uint8_t subaddressSize, uint8_t *rxBuff, uint8_t rxBuffSize)
    228          {
    229              return BOARD_LPI2C_Receive(BOARD_ACCEL_I2C_BASEADDR, deviceAddress, subAddress, subaddressSize, rxBuff, rxBuffSize);
    230          }
    231          
    232          void BOARD_Codec_I2C_Init(void)
    233          {
    234              BOARD_LPI2C_Init(BOARD_CODEC_I2C_BASEADDR, BOARD_CODEC_I2C_CLOCK_FREQ);
    235          }
    236          
    237          status_t BOARD_Codec_I2C_Send(
    238              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, const uint8_t *txBuff, uint8_t txBuffSize)
    239          {
    240              return BOARD_LPI2C_Send(BOARD_CODEC_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, (uint8_t *)txBuff,
    241                                      txBuffSize);
    242          }
    243          
    244          status_t BOARD_Codec_I2C_Receive(
    245              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, uint8_t *rxBuff, uint8_t rxBuffSize)
    246          {
    247              return BOARD_LPI2C_Receive(BOARD_CODEC_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, rxBuff, rxBuffSize);
    248          }
    249          
    250          void BOARD_Camera_I2C_Init(void)
    251          {
    252              CLOCK_SetMux(kCLOCK_Lpi2cMux, BOARD_CAMERA_I2C_CLOCK_SOURCE_SELECT);
    253              CLOCK_SetDiv(kCLOCK_Lpi2cDiv, BOARD_CAMERA_I2C_CLOCK_SOURCE_DIVIDER);
    254              BOARD_LPI2C_Init(BOARD_CAMERA_I2C_BASEADDR, BOARD_CAMERA_I2C_CLOCK_FREQ);
    255          }
    256          
    257          status_t BOARD_Camera_I2C_Send(
    258              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, const uint8_t *txBuff, uint8_t txBuffSize)
    259          {
    260              return BOARD_LPI2C_Send(BOARD_CAMERA_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, (uint8_t *)txBuff,
    261                                      txBuffSize);
    262          }
    263          
    264          status_t BOARD_Camera_I2C_Receive(
    265              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, uint8_t *rxBuff, uint8_t rxBuffSize)
    266          {
    267              return BOARD_LPI2C_Receive(BOARD_CAMERA_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, rxBuff,
    268                                         rxBuffSize);
    269          }
    270          
    271          status_t BOARD_Camera_I2C_SendSCCB(
    272              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, const uint8_t *txBuff, uint8_t txBuffSize)
    273          {
    274              return BOARD_LPI2C_SendSCCB(BOARD_CAMERA_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, (uint8_t *)txBuff,
    275                                          txBuffSize);
    276          }
    277          
    278          status_t BOARD_Camera_I2C_ReceiveSCCB(
    279              uint8_t deviceAddress, uint32_t subAddress, uint8_t subAddressSize, uint8_t *rxBuff, uint8_t rxBuffSize)
    280          {
    281              return BOARD_LPI2C_ReceiveSCCB(BOARD_CAMERA_I2C_BASEADDR, deviceAddress, subAddress, subAddressSize, rxBuff,
    282                                             rxBuffSize);
    283          }
    284          #endif /* SDK_I2C_BASED_COMPONENT_USED */
    285          

   \                                 In section .text, align 2, keep-with-next
    286          void BOARD_SD_Pin_Config(uint32_t speed, uint32_t strength)
    287          {
   \                     BOARD_SD_Pin_Config: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    288              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_00_USDHC1_CMD,
    289                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    290                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    291                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    292                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \        0x6   0x....             LDR.N    R6,??DataTable10_14  ;; 0x17001
   \        0x8   0x01A0             LSLS     R0,R4,#+6
   \        0xA   0xF000 0x00C0      AND      R0,R0,#0xC0
   \        0xE   0x00E9             LSLS     R1,R5,#+3
   \       0x10   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x14   0x4308             ORRS     R0,R1,R0
   \       0x16   0x4330             ORRS     R0,R6,R0
   \       0x18   0x9001             STR      R0,[SP, #+4]
   \       0x1A   0x....             LDR.N    R0,??DataTable10_15  ;; 0x401f83ac
   \       0x1C   0x9000             STR      R0,[SP, #+0]
   \       0x1E   0x2300             MOVS     R3,#+0
   \       0x20   0x461A             MOV      R2,R3
   \       0x22   0x4611             MOV      R1,R2
   \       0x24   0x....             LDR.N    R0,??DataTable10_16  ;; 0x401f81bc
   \       0x26   0x....'....        BL       IOMUXC_SetPinConfig
    293              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_01_USDHC1_CLK,
    294                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    295                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(0) |
    296                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x2A   0x01A0             LSLS     R0,R4,#+6
   \       0x2C   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x30   0x00E9             LSLS     R1,R5,#+3
   \       0x32   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x36   0x4308             ORRS     R0,R1,R0
   \       0x38   0xF040 0x1001      ORR      R0,R0,#0x10001
   \       0x3C   0x9001             STR      R0,[SP, #+4]
   \       0x3E   0x....             LDR.N    R0,??DataTable10_17  ;; 0x401f83b0
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0x2300             MOVS     R3,#+0
   \       0x44   0x461A             MOV      R2,R3
   \       0x46   0x4611             MOV      R1,R2
   \       0x48   0x....             LDR.N    R0,??DataTable10_18  ;; 0x401f81c0
   \       0x4A   0x....'....        BL       IOMUXC_SetPinConfig
    297              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_02_USDHC1_DATA0,
    298                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    299                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    300                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    301                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x4E   0x01A0             LSLS     R0,R4,#+6
   \       0x50   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x54   0x00E9             LSLS     R1,R5,#+3
   \       0x56   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x5A   0x4308             ORRS     R0,R1,R0
   \       0x5C   0x4330             ORRS     R0,R6,R0
   \       0x5E   0x9001             STR      R0,[SP, #+4]
   \       0x60   0x....             LDR.N    R0,??DataTable10_19  ;; 0x401f83b4
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0x2300             MOVS     R3,#+0
   \       0x66   0x461A             MOV      R2,R3
   \       0x68   0x4611             MOV      R1,R2
   \       0x6A   0x....             LDR.N    R0,??DataTable10_20  ;; 0x401f81c4
   \       0x6C   0x....'....        BL       IOMUXC_SetPinConfig
    302              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_03_USDHC1_DATA1,
    303                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    304                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    305                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    306                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x70   0x01A0             LSLS     R0,R4,#+6
   \       0x72   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x76   0x00E9             LSLS     R1,R5,#+3
   \       0x78   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x7C   0x4308             ORRS     R0,R1,R0
   \       0x7E   0x4330             ORRS     R0,R6,R0
   \       0x80   0x9001             STR      R0,[SP, #+4]
   \       0x82   0x....             LDR.N    R0,??DataTable10_21  ;; 0x401f83b8
   \       0x84   0x9000             STR      R0,[SP, #+0]
   \       0x86   0x2300             MOVS     R3,#+0
   \       0x88   0x461A             MOV      R2,R3
   \       0x8A   0x4611             MOV      R1,R2
   \       0x8C   0x....             LDR.N    R0,??DataTable10_22  ;; 0x401f81c8
   \       0x8E   0x....'....        BL       IOMUXC_SetPinConfig
    307              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_04_USDHC1_DATA2,
    308                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    309                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    310                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    311                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x92   0x01A0             LSLS     R0,R4,#+6
   \       0x94   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x98   0x00E9             LSLS     R1,R5,#+3
   \       0x9A   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x9E   0x4308             ORRS     R0,R1,R0
   \       0xA0   0x4330             ORRS     R0,R6,R0
   \       0xA2   0x9001             STR      R0,[SP, #+4]
   \       0xA4   0x....             LDR.N    R0,??DataTable10_23  ;; 0x401f83bc
   \       0xA6   0x9000             STR      R0,[SP, #+0]
   \       0xA8   0x2300             MOVS     R3,#+0
   \       0xAA   0x461A             MOV      R2,R3
   \       0xAC   0x4611             MOV      R1,R2
   \       0xAE   0x....             LDR.N    R0,??DataTable10_24  ;; 0x401f81cc
   \       0xB0   0x....'....        BL       IOMUXC_SetPinConfig
    312              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B0_05_USDHC1_DATA3,
    313                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    314                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    315                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    316                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0xB4   0x01A4             LSLS     R4,R4,#+6
   \       0xB6   0xF004 0x04C0      AND      R4,R4,#0xC0
   \       0xBA   0x00ED             LSLS     R5,R5,#+3
   \       0xBC   0xF005 0x0538      AND      R5,R5,#0x38
   \       0xC0   0x432C             ORRS     R4,R5,R4
   \       0xC2   0x4334             ORRS     R4,R6,R4
   \       0xC4   0x9401             STR      R4,[SP, #+4]
   \       0xC6   0x....             LDR.N    R0,??DataTable10_25  ;; 0x401f83c0
   \       0xC8   0x9000             STR      R0,[SP, #+0]
   \       0xCA   0x2300             MOVS     R3,#+0
   \       0xCC   0x461A             MOV      R2,R3
   \       0xCE   0x4611             MOV      R1,R2
   \       0xD0   0x....             LDR.N    R0,??DataTable10_26  ;; 0x401f81d0
   \       0xD2   0x....'....        BL       IOMUXC_SetPinConfig
    317          }
   \       0xD6   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    318          

   \                                 In section .text, align 2, keep-with-next
    319          void BOARD_MMC_Pin_Config(uint32_t speed, uint32_t strength)
    320          {
   \                     BOARD_MMC_Pin_Config: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    321              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_05_USDHC2_CMD,
    322                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    323                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    324                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    325                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \        0x6   0x....             LDR.N    R6,??DataTable10_14  ;; 0x17001
   \        0x8   0x01A0             LSLS     R0,R4,#+6
   \        0xA   0xF000 0x00C0      AND      R0,R0,#0xC0
   \        0xE   0x00E9             LSLS     R1,R5,#+3
   \       0x10   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x14   0x4308             ORRS     R0,R1,R0
   \       0x16   0x4330             ORRS     R0,R6,R0
   \       0x18   0x9001             STR      R0,[SP, #+4]
   \       0x1A   0x....             LDR.N    R0,??DataTable10_27  ;; 0x401f83d8
   \       0x1C   0x9000             STR      R0,[SP, #+0]
   \       0x1E   0x2300             MOVS     R3,#+0
   \       0x20   0x....             LDR.N    R2,??DataTable10_28  ;; 0x401f85e4
   \       0x22   0x4619             MOV      R1,R3
   \       0x24   0x....             LDR.N    R0,??DataTable10_29  ;; 0x401f81e8
   \       0x26   0x....'....        BL       IOMUXC_SetPinConfig
    326              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_04_USDHC2_CLK,
    327                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    328                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(0) |
    329                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x2A   0x01A0             LSLS     R0,R4,#+6
   \       0x2C   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x30   0x00E9             LSLS     R1,R5,#+3
   \       0x32   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x36   0x4308             ORRS     R0,R1,R0
   \       0x38   0xF040 0x1001      ORR      R0,R0,#0x10001
   \       0x3C   0x9001             STR      R0,[SP, #+4]
   \       0x3E   0x....             LDR.N    R0,??DataTable10_30  ;; 0x401f83d4
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0x2300             MOVS     R3,#+0
   \       0x44   0x....             LDR.N    R2,??DataTable10_31  ;; 0x401f85dc
   \       0x46   0x4619             MOV      R1,R3
   \       0x48   0x....             LDR.N    R0,??DataTable10_32  ;; 0x401f81e4
   \       0x4A   0x....'....        BL       IOMUXC_SetPinConfig
    330              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_03_USDHC2_DATA0,
    331                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    332                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    333                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    334                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x4E   0x01A0             LSLS     R0,R4,#+6
   \       0x50   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x54   0x00E9             LSLS     R1,R5,#+3
   \       0x56   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x5A   0x4308             ORRS     R0,R1,R0
   \       0x5C   0x4330             ORRS     R0,R6,R0
   \       0x5E   0x9001             STR      R0,[SP, #+4]
   \       0x60   0x....             LDR.N    R0,??DataTable10_33  ;; 0x401f83d0
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0x2300             MOVS     R3,#+0
   \       0x66   0x....             LDR.N    R2,??DataTable10_34  ;; 0x401f85e8
   \       0x68   0x4619             MOV      R1,R3
   \       0x6A   0x....             LDR.N    R0,??DataTable10_35  ;; 0x401f81e0
   \       0x6C   0x....'....        BL       IOMUXC_SetPinConfig
    335              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_02_USDHC2_DATA1,
    336                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    337                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    338                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    339                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x70   0x01A0             LSLS     R0,R4,#+6
   \       0x72   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x76   0x00E9             LSLS     R1,R5,#+3
   \       0x78   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x7C   0x4308             ORRS     R0,R1,R0
   \       0x7E   0x4330             ORRS     R0,R6,R0
   \       0x80   0x9001             STR      R0,[SP, #+4]
   \       0x82   0x....             LDR.N    R0,??DataTable10_36  ;; 0x401f83cc
   \       0x84   0x9000             STR      R0,[SP, #+0]
   \       0x86   0x2300             MOVS     R3,#+0
   \       0x88   0x....             LDR.N    R2,??DataTable10_37  ;; 0x401f85ec
   \       0x8A   0x4619             MOV      R1,R3
   \       0x8C   0x....             LDR.N    R0,??DataTable10_38  ;; 0x401f81dc
   \       0x8E   0x....'....        BL       IOMUXC_SetPinConfig
    340              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_01_USDHC2_DATA2,
    341                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    342                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    343                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    344                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0x92   0x01A0             LSLS     R0,R4,#+6
   \       0x94   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0x98   0x00E9             LSLS     R1,R5,#+3
   \       0x9A   0xF001 0x0138      AND      R1,R1,#0x38
   \       0x9E   0x4308             ORRS     R0,R1,R0
   \       0xA0   0x4330             ORRS     R0,R6,R0
   \       0xA2   0x9001             STR      R0,[SP, #+4]
   \       0xA4   0x....             LDR.N    R0,??DataTable10_39  ;; 0x401f83c8
   \       0xA6   0x9000             STR      R0,[SP, #+0]
   \       0xA8   0x2300             MOVS     R3,#+0
   \       0xAA   0x....             LDR.N    R2,??DataTable10_40  ;; 0x401f85f0
   \       0xAC   0x4619             MOV      R1,R3
   \       0xAE   0x....             LDR.N    R0,??DataTable10_41  ;; 0x401f81d8
   \       0xB0   0x....'....        BL       IOMUXC_SetPinConfig
    345              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_00_USDHC2_DATA3,
    346                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    347                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    348                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    349                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0xB4   0x01A0             LSLS     R0,R4,#+6
   \       0xB6   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0xBA   0x00E9             LSLS     R1,R5,#+3
   \       0xBC   0xF001 0x0138      AND      R1,R1,#0x38
   \       0xC0   0x4308             ORRS     R0,R1,R0
   \       0xC2   0x4330             ORRS     R0,R6,R0
   \       0xC4   0x9001             STR      R0,[SP, #+4]
   \       0xC6   0x....             LDR.N    R0,??DataTable10_42  ;; 0x401f83c4
   \       0xC8   0x9000             STR      R0,[SP, #+0]
   \       0xCA   0x2300             MOVS     R3,#+0
   \       0xCC   0x....             LDR.N    R2,??DataTable10_43  ;; 0x401f85f4
   \       0xCE   0x4619             MOV      R1,R3
   \       0xD0   0x....             LDR.N    R0,??DataTable10_44  ;; 0x401f81d4
   \       0xD2   0x....'....        BL       IOMUXC_SetPinConfig
    350              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_08_USDHC2_DATA4,
    351                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    352                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    353                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    354                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0xD6   0x01A0             LSLS     R0,R4,#+6
   \       0xD8   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0xDC   0x00E9             LSLS     R1,R5,#+3
   \       0xDE   0xF001 0x0138      AND      R1,R1,#0x38
   \       0xE2   0x4308             ORRS     R0,R1,R0
   \       0xE4   0x4330             ORRS     R0,R6,R0
   \       0xE6   0x9001             STR      R0,[SP, #+4]
   \       0xE8   0x....             LDR.N    R0,??DataTable10_45  ;; 0x401f83e4
   \       0xEA   0x9000             STR      R0,[SP, #+0]
   \       0xEC   0x2300             MOVS     R3,#+0
   \       0xEE   0x....             LDR.N    R2,??DataTable10_46  ;; 0x401f85f8
   \       0xF0   0x4619             MOV      R1,R3
   \       0xF2   0x....             LDR.N    R0,??DataTable10_47  ;; 0x401f81f4
   \       0xF4   0x....'....        BL       IOMUXC_SetPinConfig
    355              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_09_USDHC2_DATA5,
    356                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    357                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    358                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    359                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \       0xF8   0x01A0             LSLS     R0,R4,#+6
   \       0xFA   0xF000 0x00C0      AND      R0,R0,#0xC0
   \       0xFE   0x00E9             LSLS     R1,R5,#+3
   \      0x100   0xF001 0x0138      AND      R1,R1,#0x38
   \      0x104   0x4308             ORRS     R0,R1,R0
   \      0x106   0x4330             ORRS     R0,R6,R0
   \      0x108   0x9001             STR      R0,[SP, #+4]
   \      0x10A   0x....             LDR.N    R0,??DataTable10_48  ;; 0x401f83e8
   \      0x10C   0x9000             STR      R0,[SP, #+0]
   \      0x10E   0x2300             MOVS     R3,#+0
   \      0x110   0x....             LDR.N    R2,??DataTable10_49  ;; 0x401f85fc
   \      0x112   0x4619             MOV      R1,R3
   \      0x114   0x....             LDR.N    R0,??DataTable10_50  ;; 0x401f81f8
   \      0x116   0x....'....        BL       IOMUXC_SetPinConfig
    360              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_10_USDHC2_DATA6,
    361                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    362                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    363                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    364                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \      0x11A   0x01A0             LSLS     R0,R4,#+6
   \      0x11C   0xF000 0x00C0      AND      R0,R0,#0xC0
   \      0x120   0x00E9             LSLS     R1,R5,#+3
   \      0x122   0xF001 0x0138      AND      R1,R1,#0x38
   \      0x126   0x4308             ORRS     R0,R1,R0
   \      0x128   0x4330             ORRS     R0,R6,R0
   \      0x12A   0x9001             STR      R0,[SP, #+4]
   \      0x12C   0x....             LDR.N    R0,??DataTable10_51  ;; 0x401f83ec
   \      0x12E   0x9000             STR      R0,[SP, #+0]
   \      0x130   0x2300             MOVS     R3,#+0
   \      0x132   0x....             LDR.N    R2,??DataTable10_52  ;; 0x401f8600
   \      0x134   0x4619             MOV      R1,R3
   \      0x136   0x....             LDR.N    R0,??DataTable10_53  ;; 0x401f81fc
   \      0x138   0x....'....        BL       IOMUXC_SetPinConfig
    365              IOMUXC_SetPinConfig(IOMUXC_GPIO_SD_B1_11_USDHC2_DATA7,
    366                                  IOMUXC_SW_PAD_CTL_PAD_SPEED(speed) | IOMUXC_SW_PAD_CTL_PAD_SRE_MASK |
    367                                      IOMUXC_SW_PAD_CTL_PAD_PKE_MASK | IOMUXC_SW_PAD_CTL_PAD_PUE_MASK |
    368                                      IOMUXC_SW_PAD_CTL_PAD_HYS_MASK | IOMUXC_SW_PAD_CTL_PAD_PUS(1) |
    369                                      IOMUXC_SW_PAD_CTL_PAD_DSE(strength));
   \      0x13C   0x01A4             LSLS     R4,R4,#+6
   \      0x13E   0xF004 0x04C0      AND      R4,R4,#0xC0
   \      0x142   0x00ED             LSLS     R5,R5,#+3
   \      0x144   0xF005 0x0538      AND      R5,R5,#0x38
   \      0x148   0x432C             ORRS     R4,R5,R4
   \      0x14A   0x4334             ORRS     R4,R6,R4
   \      0x14C   0x9401             STR      R4,[SP, #+4]
   \      0x14E   0x....             LDR.N    R0,??DataTable10_54  ;; 0x401f83f0
   \      0x150   0x9000             STR      R0,[SP, #+0]
   \      0x152   0x2300             MOVS     R3,#+0
   \      0x154   0x....             LDR.N    R2,??DataTable10_55  ;; 0x401f8604
   \      0x156   0x4619             MOV      R1,R3
   \      0x158   0x....             LDR.N    R0,??DataTable10_56  ;; 0x401f8200
   \      0x15A   0x....'....        BL       IOMUXC_SetPinConfig
    370          }
   \      0x15E   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    371          
    372          /* MPU configuration. */

   \                                 In section .text, align 2, keep-with-next
    373          void BOARD_ConfigMPU(void)
    374          {
   \                     BOARD_ConfigMPU: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    375              /* Disable I cache and D cache */
    376              if (SCB_CCR_IC_Msk == (SCB_CCR_IC_Msk & SCB->CCR))
   \        0x2   0x....             LDR.N    R4,??DataTable10_3  ;; 0xe000ed14
   \        0x4   0x6820             LDR      R0,[R4, #+0]
   \        0x6   0x0380             LSLS     R0,R0,#+14
   \        0x8   0xD501             BPL.N    ??BOARD_ConfigMPU_0
    377              {
    378                  SCB_DisableICache();
   \        0xA   0x....'....        BL       SCB_DisableICache
    379              }
    380              if (SCB_CCR_DC_Msk == (SCB_CCR_DC_Msk & SCB->CCR))
   \                     ??BOARD_ConfigMPU_0: (+1)
   \        0xE   0x6820             LDR      R0,[R4, #+0]
   \       0x10   0x03C0             LSLS     R0,R0,#+15
   \       0x12   0xD501             BPL.N    ??BOARD_ConfigMPU_1
    381              {
    382                  SCB_DisableDCache();
   \       0x14   0x....'....        BL       SCB_DisableDCache
    383              }
    384          
    385              /* Disable MPU */
    386              ARM_MPU_Disable();
   \                     ??BOARD_ConfigMPU_1: (+1)
   \       0x18   0x....'....        BL       ARM_MPU_Disable
    387          
    388              /* MPU configure:
    389               * Use ARM_MPU_RASR(DisableExec, AccessPermission, TypeExtField, IsShareable, IsCacheable, IsBufferable,
    390               * SubRegionDisable, Size)
    391               * API in mpu_armv7.h.
    392               * param DisableExec       Instruction access (XN) disable bit,0=instruction fetches enabled, 1=instruction fetches
    393               * disabled.
    394               * param AccessPermission  Data access permissions, allows you to configure read/write access for User and
    395               * Privileged mode.
    396               *      Use MACROS defined in mpu_armv7.h:
    397               * ARM_MPU_AP_NONE/ARM_MPU_AP_PRIV/ARM_MPU_AP_URO/ARM_MPU_AP_FULL/ARM_MPU_AP_PRO/ARM_MPU_AP_RO
    398               * Combine TypeExtField/IsShareable/IsCacheable/IsBufferable to configure MPU memory access attributes.
    399               *  TypeExtField  IsShareable  IsCacheable  IsBufferable   Memory Attribtue    Shareability        Cache
    400               *     0             x           0           0             Strongly Ordered    shareable
    401               *     0             x           0           1              Device             shareable
    402               *     0             0           1           0              Normal             not shareable   Outer and inner write
    403               * through no write allocate
    404               *     0             0           1           1              Normal             not shareable   Outer and inner write
    405               * back no write allocate
    406               *     0             1           1           0              Normal             shareable       Outer and inner write
    407               * through no write allocate
    408               *     0             1           1           1              Normal             shareable       Outer and inner write
    409               * back no write allocate
    410               *     1             0           0           0              Normal             not shareable   outer and inner
    411               * noncache
    412               *     1             1           0           0              Normal             shareable       outer and inner
    413               * noncache
    414               *     1             0           1           1              Normal             not shareable   outer and inner write
    415               * back write/read acllocate
    416               *     1             1           1           1              Normal             shareable       outer and inner write
    417               * back write/read acllocate
    418               *     2             x           0           0              Device              not shareable
    419               *  Above are normal use settings, if your want to see more details or want to config different inner/outter cache
    420               * policy.
    421               *  please refer to Table 4-55 /4-56 in arm cortex-M7 generic user guide <dui0646b_cortex_m7_dgug.pdf>
    422               * param SubRegionDisable  Sub-region disable field. 0=sub-region is enabled, 1=sub-region is disabled.
    423               * param Size              Region size of the region to be configured. use ARM_MPU_REGION_SIZE_xxx MACRO in
    424               * mpu_armv7.h.
    425               */
    426          
    427              /* Region 0 setting: Memory with Device type, not shareable, non-cacheable. */
    428              MPU->RBAR = ARM_MPU_RBAR(0, 0xC0000000U);
   \       0x1C   0x....             LDR.N    R0,??DataTable10_57  ;; 0xe000ed9c
   \       0x1E   0x....             LDR.N    R1,??DataTable10_58  ;; 0xc0000010
   \       0x20   0x6001             STR      R1,[R0, #+0]
    429              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 2, 0, 0, 0, 0, ARM_MPU_REGION_SIZE_512MB);
   \       0x22   0x....             LDR.N    R1,??DataTable10_59  ;; 0xe000eda0
   \       0x24   0x....             LDR.N    R2,??DataTable10_60  ;; 0x3100039
   \       0x26   0x600A             STR      R2,[R1, #+0]
    430          
    431              /* Region 1 setting: Memory with Device type, not shareable,  non-cacheable. */
    432              MPU->RBAR = ARM_MPU_RBAR(1, 0x80000000U);
   \       0x28   0x....             LDR.N    R2,??DataTable10_61  ;; 0x80000011
   \       0x2A   0x6002             STR      R2,[R0, #+0]
    433              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 2, 0, 0, 0, 0, ARM_MPU_REGION_SIZE_1GB);
   \       0x2C   0x....             LDR.N    R2,??DataTable10_62  ;; 0x310003b
   \       0x2E   0x600A             STR      R2,[R1, #+0]
    434          
    435          /* Region 2 setting */
    436          #if defined(XIP_EXTERNAL_FLASH) && (XIP_EXTERNAL_FLASH == 1)
    437              /* Setting Memory with Normal type, not shareable, outer/inner write back. */
    438              MPU->RBAR = ARM_MPU_RBAR(2, 0x60000000U);
   \       0x30   0x....             LDR.N    R3,??DataTable10_63  ;; 0x60000012
   \       0x32   0x6003             STR      R3,[R0, #+0]
    439              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_RO, 0, 0, 1, 1, 0, ARM_MPU_REGION_SIZE_64MB);
   \       0x34   0x....             LDR.N    R3,??DataTable10_64  ;; 0x6030033
   \       0x36   0x600B             STR      R3,[R1, #+0]
    440          #else
    441              /* Setting Memory with Device type, not shareable, non-cacheable. */
    442              MPU->RBAR = ARM_MPU_RBAR(2, 0x60000000U);
    443              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_RO, 2, 0, 0, 0, 0, ARM_MPU_REGION_SIZE_64MB);
    444          #endif
    445          
    446              /* Region 3 setting: Memory with Device type, not shareable, non-cacheable. */
    447              MPU->RBAR = ARM_MPU_RBAR(3, 0x00000000U);
   \       0x38   0x2313             MOVS     R3,#+19
   \       0x3A   0x6003             STR      R3,[R0, #+0]
    448              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 2, 0, 0, 0, 0, ARM_MPU_REGION_SIZE_1GB);
   \       0x3C   0x600A             STR      R2,[R1, #+0]
    449          
    450              /* Region 4 setting: Memory with Normal type, not shareable, outer/inner write back */
    451              MPU->RBAR = ARM_MPU_RBAR(4, 0x00000000U);
   \       0x3E   0x2214             MOVS     R2,#+20
   \       0x40   0x6002             STR      R2,[R0, #+0]
    452              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 0, 0, 1, 1, 0, ARM_MPU_REGION_SIZE_128KB);
   \       0x42   0x....             LDR.N    R2,??DataTable10_65  ;; 0x3030021
   \       0x44   0x600A             STR      R2,[R1, #+0]
    453          
    454              /* Region 5 setting: Memory with Normal type, not shareable, outer/inner write back */
    455              MPU->RBAR = ARM_MPU_RBAR(5, 0x20000000U);
   \       0x46   0x....             LDR.N    R3,??DataTable10_66  ;; 0x20000015
   \       0x48   0x6003             STR      R3,[R0, #+0]
    456              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 0, 0, 1, 1, 0, ARM_MPU_REGION_SIZE_128KB);
   \       0x4A   0x600A             STR      R2,[R1, #+0]
    457          
    458              /* Region 6 setting: Memory with Normal type, not shareable, outer/inner write back */
    459              MPU->RBAR = ARM_MPU_RBAR(6, 0x20200000U);
   \       0x4C   0x....             LDR.N    R2,??DataTable10_67  ;; 0x20200016
   \       0x4E   0x6002             STR      R2,[R0, #+0]
    460              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 0, 0, 1, 1, 0, ARM_MPU_REGION_SIZE_256KB);
   \       0x50   0x....             LDR.N    R2,??DataTable10_68  ;; 0x3030023
   \       0x52   0x600A             STR      R2,[R1, #+0]
    461          
    462          /* The define sets the cacheable memory to shareable,
    463           * this suggestion is referred from chapter 2.2.1 Memory regions,
    464           * types and attributes in Cortex-M7 Devices, Generic User Guide */
    465          #if defined(SDRAM_IS_SHAREABLE)
    466              /* Region 7 setting: Memory with Normal type, shareable, outer/inner write back */
    467              MPU->RBAR = ARM_MPU_RBAR(7, 0x80000000U);
    468              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 0, 1, 1, 1, 0, ARM_MPU_REGION_SIZE_32MB);
    469          #else
    470              /* Region 7 setting: Memory with Normal type, not shareable, outer/inner write back */
    471              MPU->RBAR = ARM_MPU_RBAR(7, 0x80000000U);
   \       0x54   0x....             LDR.N    R2,??DataTable10_69  ;; 0x80000017
   \       0x56   0x6002             STR      R2,[R0, #+0]
    472              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 0, 0, 1, 1, 0, ARM_MPU_REGION_SIZE_32MB);
   \       0x58   0x....             LDR.N    R2,??DataTable10_70  ;; 0x3030031
   \       0x5A   0x600A             STR      R2,[R1, #+0]
    473          #endif
    474          
    475              /* Region 8 setting, set last 2MB of SDRAM can't be accessed by cache, glocal variables which are not expected to be
    476               * accessed by cache can be put here */
    477              /* Memory with Normal type, not shareable, non-cacheable */
    478              MPU->RBAR = ARM_MPU_RBAR(8, 0x81E00000U);
   \       0x5C   0x....             LDR.N    R2,??DataTable10_71  ;; 0x81e00018
   \       0x5E   0x6002             STR      R2,[R0, #+0]
    479              MPU->RASR = ARM_MPU_RASR(0, ARM_MPU_AP_FULL, 1, 0, 0, 0, 0, ARM_MPU_REGION_SIZE_2MB);
   \       0x60   0x....             LDR.N    R0,??DataTable10_72  ;; 0x3080029
   \       0x62   0x6008             STR      R0,[R1, #+0]
    480          
    481              /* Enable MPU */
    482              ARM_MPU_Enable(MPU_CTRL_PRIVDEFENA_Msk);
   \       0x64   0x2004             MOVS     R0,#+4
   \       0x66   0x....'....        BL       ARM_MPU_Enable
    483          
    484              /* Enable I cache and D cache */
    485              SCB_EnableDCache();
   \       0x6A   0x....'....        BL       SCB_EnableDCache
    486              SCB_EnableICache();
   \       0x6E   0xE8BD 0x4010      POP      {R4,LR}
   \       0x72   0x....             B.N      SCB_EnableICache
    487          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0xE000'ED94        DC32     0xe000ed94

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \        0x0   0xE000'ED24        DC32     0xe000ed24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \        0x0   0xE000'EF50        DC32     0xe000ef50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \        0x0   0xE000'ED14        DC32     0xe000ed14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \        0x0   0xE000'ED84        DC32     0xe000ed84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \        0x0   0xE000'ED80        DC32     0xe000ed80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \        0x0   0xE000'EF60        DC32     0xe000ef60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \        0x0   0xE000'EF74        DC32     0xe000ef74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \        0x0   0x400D'8270        DC32     0x400d8270

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \        0x0   0x016E'3600        DC32     0x16e3600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \        0x0   0x....'....        DC32     g_xtalFreq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \        0x0   0x8000'2624        DC32     0x80002624

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \        0x0   0x0010'000D        DC32     0x10000d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \        0x0   0x8007'E024        DC32     0x8007e024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \        0x0   0x0001'7001        DC32     0x17001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \        0x0   0x401F'83AC        DC32     0x401f83ac

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \        0x0   0x401F'81BC        DC32     0x401f81bc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \        0x0   0x401F'83B0        DC32     0x401f83b0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \        0x0   0x401F'81C0        DC32     0x401f81c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \        0x0   0x401F'83B4        DC32     0x401f83b4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \        0x0   0x401F'81C4        DC32     0x401f81c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \        0x0   0x401F'83B8        DC32     0x401f83b8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \        0x0   0x401F'81C8        DC32     0x401f81c8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \        0x0   0x401F'83BC        DC32     0x401f83bc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \        0x0   0x401F'81CC        DC32     0x401f81cc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_25:
   \        0x0   0x401F'83C0        DC32     0x401f83c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_26:
   \        0x0   0x401F'81D0        DC32     0x401f81d0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_27:
   \        0x0   0x401F'83D8        DC32     0x401f83d8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_28:
   \        0x0   0x401F'85E4        DC32     0x401f85e4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_29:
   \        0x0   0x401F'81E8        DC32     0x401f81e8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_30:
   \        0x0   0x401F'83D4        DC32     0x401f83d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_31:
   \        0x0   0x401F'85DC        DC32     0x401f85dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_32:
   \        0x0   0x401F'81E4        DC32     0x401f81e4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_33:
   \        0x0   0x401F'83D0        DC32     0x401f83d0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_34:
   \        0x0   0x401F'85E8        DC32     0x401f85e8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_35:
   \        0x0   0x401F'81E0        DC32     0x401f81e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_36:
   \        0x0   0x401F'83CC        DC32     0x401f83cc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_37:
   \        0x0   0x401F'85EC        DC32     0x401f85ec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_38:
   \        0x0   0x401F'81DC        DC32     0x401f81dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_39:
   \        0x0   0x401F'83C8        DC32     0x401f83c8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_40:
   \        0x0   0x401F'85F0        DC32     0x401f85f0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_41:
   \        0x0   0x401F'81D8        DC32     0x401f81d8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_42:
   \        0x0   0x401F'83C4        DC32     0x401f83c4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_43:
   \        0x0   0x401F'85F4        DC32     0x401f85f4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_44:
   \        0x0   0x401F'81D4        DC32     0x401f81d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_45:
   \        0x0   0x401F'83E4        DC32     0x401f83e4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_46:
   \        0x0   0x401F'85F8        DC32     0x401f85f8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_47:
   \        0x0   0x401F'81F4        DC32     0x401f81f4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_48:
   \        0x0   0x401F'83E8        DC32     0x401f83e8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_49:
   \        0x0   0x401F'85FC        DC32     0x401f85fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_50:
   \        0x0   0x401F'81F8        DC32     0x401f81f8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_51:
   \        0x0   0x401F'83EC        DC32     0x401f83ec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_52:
   \        0x0   0x401F'8600        DC32     0x401f8600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_53:
   \        0x0   0x401F'81FC        DC32     0x401f81fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_54:
   \        0x0   0x401F'83F0        DC32     0x401f83f0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_55:
   \        0x0   0x401F'8604        DC32     0x401f8604

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_56:
   \        0x0   0x401F'8200        DC32     0x401f8200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_57:
   \        0x0   0xE000'ED9C        DC32     0xe000ed9c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_58:
   \        0x0   0xC000'0010        DC32     0xc0000010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_59:
   \        0x0   0xE000'EDA0        DC32     0xe000eda0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_60:
   \        0x0   0x0310'0039        DC32     0x3100039

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_61:
   \        0x0   0x8000'0011        DC32     0x80000011

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_62:
   \        0x0   0x0310'003B        DC32     0x310003b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_63:
   \        0x0   0x6000'0012        DC32     0x60000012

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_64:
   \        0x0   0x0603'0033        DC32     0x6030033

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_65:
   \        0x0   0x0303'0021        DC32     0x3030021

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_66:
   \        0x0   0x2000'0015        DC32     0x20000015

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_67:
   \        0x0   0x2020'0016        DC32     0x20200016

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_68:
   \        0x0   0x0303'0023        DC32     0x3030023

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_69:
   \        0x0   0x8000'0017        DC32     0x80000017

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_70:
   \        0x0   0x0303'0031        DC32     0x3030031

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_71:
   \        0x0   0x81E0'0018        DC32     0x81e00018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_72:
   \        0x0   0x0308'0029        DC32     0x3080029

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ARM_MPU_Disable
       0   ARM_MPU_Enable
       8   BOARD_ConfigMPU
         8   -> ARM_MPU_Disable
         8   -> ARM_MPU_Enable
         8   -> SCB_DisableDCache
         8   -> SCB_DisableICache
         8   -> SCB_EnableDCache
         0   -> SCB_EnableICache
       8   BOARD_DebugConsoleSrcFreq
         8   -> CLOCK_GetDiv
         8   -> CLOCK_GetMux
         8   -> CLOCK_GetOscFreq
         8   -> CLOCK_GetPllFreq
       8   BOARD_InitDebugConsole
         8   -> BOARD_DebugConsoleSrcFreq
         0   -> DbgConsole_Init
      24   BOARD_MMC_Pin_Config
        24   -> IOMUXC_SetPinConfig
      24   BOARD_SD_Pin_Config
        24   -> IOMUXC_SetPinConfig
       0   CLOCK_GetDiv
       0   CLOCK_GetMux
       0   CLOCK_GetOscFreq
       0   IOMUXC_SetPinConfig
       4   SCB_DisableDCache
       0   SCB_DisableICache
       4   SCB_EnableDCache
       0   SCB_EnableICache


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_25
       4  ??DataTable10_26
       4  ??DataTable10_27
       4  ??DataTable10_28
       4  ??DataTable10_29
       4  ??DataTable10_3
       4  ??DataTable10_30
       4  ??DataTable10_31
       4  ??DataTable10_32
       4  ??DataTable10_33
       4  ??DataTable10_34
       4  ??DataTable10_35
       4  ??DataTable10_36
       4  ??DataTable10_37
       4  ??DataTable10_38
       4  ??DataTable10_39
       4  ??DataTable10_4
       4  ??DataTable10_40
       4  ??DataTable10_41
       4  ??DataTable10_42
       4  ??DataTable10_43
       4  ??DataTable10_44
       4  ??DataTable10_45
       4  ??DataTable10_46
       4  ??DataTable10_47
       4  ??DataTable10_48
       4  ??DataTable10_49
       4  ??DataTable10_5
       4  ??DataTable10_50
       4  ??DataTable10_51
       4  ??DataTable10_52
       4  ??DataTable10_53
       4  ??DataTable10_54
       4  ??DataTable10_55
       4  ??DataTable10_56
       4  ??DataTable10_57
       4  ??DataTable10_58
       4  ??DataTable10_59
       4  ??DataTable10_6
       4  ??DataTable10_60
       4  ??DataTable10_61
       4  ??DataTable10_62
       4  ??DataTable10_63
       4  ??DataTable10_64
       4  ??DataTable10_65
       4  ??DataTable10_66
       4  ??DataTable10_67
       4  ??DataTable10_68
       4  ??DataTable10_69
       4  ??DataTable10_7
       4  ??DataTable10_70
       4  ??DataTable10_71
       4  ??DataTable10_72
       4  ??DataTable10_8
       4  ??DataTable10_9
      34  ARM_MPU_Disable
      32  ARM_MPU_Enable
     116  BOARD_ConfigMPU
      58  BOARD_DebugConsoleSrcFreq
      24  BOARD_InitDebugConsole
     352  BOARD_MMC_Pin_Config
     216  BOARD_SD_Pin_Config
      42  CLOCK_GetDiv
      42  CLOCK_GetMux
      18  CLOCK_GetOscFreq
      12  IOMUXC_SetPinConfig
      90  SCB_DisableDCache
      38  SCB_DisableICache
      90  SCB_EnableDCache
      46  SCB_EnableICache

 
 1 502 bytes in section .text
 
 1 502 bytes of CODE memory

Errors: none
Warnings: none
